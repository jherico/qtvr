{"Shader":{"ver":"0.1","info":{"id":"ltfGzf","date":"1429805081","viewed":677,"name":"Transitions : DoorWay","username":"aiekick","description":"From https:\/\/glsl.io\/","likes":2,"published":3,"flags":0,"tags":["transitions","doorway"],"hasliked":0},"renderpass":[{"inputs":[{"id":1,"src":"\/presets\/tex00.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":2,"src":"\/presets\/tex01.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ from https:\/\/glsl.io\/\n\n#define from iChannel0\n#define to iChannel1\nfloat progress = sin(iGlobalTime*0.5)*.5+.5;\nvec2 resolution = iResolution.xy;\n \nfloat reflection = .4;\nfloat perspective = .4;\nfloat depth = 3.;\n \nconst vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\nconst vec2 boundMin = vec2(0.0, 0.0);\nconst vec2 boundMax = vec2(1.0, 1.0);\n \nbool inBounds (vec2 p) {\n  return all(lessThan(boundMin, p)) && all(lessThan(p, boundMax));\n}\n \nvec2 project (vec2 p) {\n  return p * vec2(1.0, -1.2) + vec2(0.0, -0.02);\n}\n \nvec4 bgColor (vec2 p, vec2 pto) {\n  vec4 c = black;\n  pto = project(pto);\n  if (inBounds(pto)) {\n    c += mix(black, texture2D(to, pto), reflection * mix(1.0, 0.0, pto.y));\n  }\n  return c;\n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 p = fragCoord.xy \/ resolution.xy;\n if ( iMouse.z>0.) progress = iMouse.x\/iResolution.x;\n\n  vec2 pfr = vec2(-1.), pto = vec2(-1.);\n \n  float middleSlit = 2.0 * abs(p.x-0.5) - progress;\n  if (middleSlit > 0.0) {\n    pfr = p + (p.x > 0.5 ? -1.0 : 1.0) * vec2(0.5*progress, 0.0);\n    float d = 1.0\/(1.0+perspective*progress*(1.0-middleSlit));\n    pfr.y -= d\/2.;\n    pfr.y *= d;\n    pfr.y += d\/2.;\n  }\n \n  float size = mix(1.0, depth, 1.-progress);\n  pto = (p + vec2(-0.5, -0.5)) * vec2(size, size) + vec2(0.5, 0.5);\n \n  if (inBounds(pfr)) {\n    fragColor = texture2D(from, pfr);\n  }\n  else if (inBounds(pto)) {\n    fragColor = texture2D(to, pto);\n  }\n  else {\n    fragColor = bgColor(p, pto);\n  }\n}","name":"","description":"","type":"image"}]}}