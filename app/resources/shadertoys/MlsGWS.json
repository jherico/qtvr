{"Shader":{"ver":"0.1","info":{"id":"MlsGWS","date":"1433896901","viewed":937,"name":"Distance - PN Static","username":"iq","description":"Statically subdividing a set of segments into 8 times the number of segments in a cubic manner. See <a href=\"https:\/\/www.shadertoy.com\/view\/4ts3DB\" class=\"regular\" target=\"_blank\">https:\/\/www.shadertoy.com\/view\/4ts3DB<\/a> for more information.","likes":8,"published":3,"flags":0,"tags":["2d","tesselation","pn"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n\/\/ Tesselating a set of segments with a cubic bezier (PN-segmetns), quite like\n\/\/ https:\/\/www.shadertoy.com\/view\/4ts3DB, but statically.\n\nfloat sdLine( vec2 p, vec2 a, vec2 b )\n{\n\tvec2 pa = p-a, ba = b-a;\n\tfloat h = clamp( dot(pa,ba)\/dot(ba,ba), 0.0, 1.0 );\n\treturn length( pa - ba*h );\n}\n\n\/\/ cubic polynomial evaluated at fixed points t = i\/8, i = 0, 1, 2, ... 8\n\/\/\n\/\/ p(t) = a*t^3 + d*(1-t)^3 + 3b*t^2*(1-t) + 3c*t*(1-t)^2;\n\/\/\nvec2 cubic_0d000( in vec2 a, in vec2 b, in vec2 c, in vec2 d ) { return a; }\nvec2 cubic_0d125( in vec2 a, in vec2 b, in vec2 c, in vec2 d ) { return (a*343.0 + b*147.0 + c*21.0 + d)\/512.0; }\nvec2 cubic_0d250( in vec2 a, in vec2 b, in vec2 c, in vec2 d ) { return (a*27.0 + b*27.0 + c*9.0 + d)\/64.0; }\nvec2 cubic_0d375( in vec2 a, in vec2 b, in vec2 c, in vec2 d ) { return (a*125.0 + b*225.0 + c*135.0 + d*27.0)\/512.0; }\nvec2 cubic_0d500( in vec2 a, in vec2 b, in vec2 c, in vec2 d ) { return (a + b*3.0 + c*3.0 + d)\/8.0; }\nvec2 cubic_0d625( in vec2 a, in vec2 b, in vec2 c, in vec2 d ) { return (a*27.0 + b*135.0 + c*225.0 + d*125.0)\/512.0; }\nvec2 cubic_0d750( in vec2 a, in vec2 b, in vec2 c, in vec2 d ) { return (a + b*9.0 + c*27.0 + d*27.0)\/64.0; }\nvec2 cubic_0d875( in vec2 a, in vec2 b, in vec2 c, in vec2 d ) { return (a + b*21.0 + c*147.0 + d*343.0)\/512.0; }\nvec2 cubic_1d000( in vec2 a, in vec2 b, in vec2 c, in vec2 d ) { return d; }\n\n\/\/----------------------------------------------------------\nfloat sdSegment_1( vec2 p, vec2 a, vec2 d, vec2 na, vec2 nd )\n{\n    return sdLine( p, a, d );\n}\n\nfloat sdSegment_2( vec2 p, vec2 a, vec2 d, vec2 na, vec2 nd )\n{\n    \/\/ secondary points\n    vec2 b = (a*2.0+d)\/3.0; b = a + na*dot(na,b-a)\/dot(na,na);\n    vec2 c = (d*2.0+a)\/3.0; c = d + nd*dot(nd,c-d)\/dot(nd,nd);\n\n    float r = length(p-a);\n    \n    vec2 k0 = cubic_0d000( a, b, c, d );\n    vec2 k1 = cubic_0d500( a, b, c, d );\n    vec2 k2 = cubic_1d000( a, b, c, d );\n\n    r = min( r, sdLine( p, k0, k1 ) );\n    r = min( r, sdLine( p, k1, k2 ) );\n    \n    return r;\n}\n\nfloat sdSegment_4( vec2 p, vec2 a, vec2 d, vec2 na, vec2 nd )\n{\n    \/\/ secondary points\n    vec2 b = (a*2.0+d)\/3.0; b = a + na*dot(na,b-a)\/dot(na,na);\n    vec2 c = (d*2.0+a)\/3.0; c = d + nd*dot(nd,c-d)\/dot(nd,nd);\n\n    float r = length(p-a);\n    \n    vec2 k0 = cubic_0d000( a, b, c, d );\n    vec2 k1 = cubic_0d250( a, b, c, d );\n    vec2 k2 = cubic_0d500( a, b, c, d );\n    vec2 k3 = cubic_0d750( a, b, c, d );\n    vec2 k4 = cubic_1d000( a, b, c, d );\n\n    r = min( r, sdLine( p, k0, k1 ) );\n    r = min( r, sdLine( p, k1, k2 ) );\n    r = min( r, sdLine( p, k2, k3 ) );\n    r = min( r, sdLine( p, k3, k4 ) );\n    \n    return r;\n}\n\nfloat sdSegment_8( vec2 p, vec2 a, vec2 d, vec2 na, vec2 nd )\n{\n    \/\/ secondary points\n    vec2 b = (a*2.0+d)\/3.0; b = a + na*dot(na,b-a)\/dot(na,na);\n    vec2 c = (d*2.0+a)\/3.0; c = d + nd*dot(nd,c-d)\/dot(nd,nd);\n\n    float r = length(p-a);\n    \n    vec2 k0 = cubic_0d000( a, b, c, d );\n    vec2 k1 = cubic_0d125( a, b, c, d );\n    vec2 k2 = cubic_0d250( a, b, c, d );\n    vec2 k3 = cubic_0d375( a, b, c, d );\n    vec2 k4 = cubic_0d500( a, b, c, d );\n    vec2 k5 = cubic_0d625( a, b, c, d );\n    vec2 k6 = cubic_0d750( a, b, c, d );\n    vec2 k7 = cubic_0d875( a, b, c, d );\n    vec2 k8 = cubic_1d000( a, b, c, d );\n\n    r = min( r, sdLine( p, k0, k1 ) );\n    r = min( r, sdLine( p, k1, k2 ) );\n    r = min( r, sdLine( p, k2, k3 ) );\n    r = min( r, sdLine( p, k3, k4 ) );\n    r = min( r, sdLine( p, k4, k5 ) );\n    r = min( r, sdLine( p, k5, k6 ) );\n    r = min( r, sdLine( p, k6, k7 ) );\n    r = min( r, sdLine( p, k7, k8 ) );\n    \n    return r;\n}\n\n\n\/\/======================================================\n\n\/\/ shape points\n\nvec2 p0 = vec2( 0.6, 0.1)*1.3;\nvec2 p1 = vec2( 0.4, 0.3)*1.3;\nvec2 p2 = vec2(-0.2, 0.5)*1.3;\nvec2 p3 = vec2(-0.6, 0.4)*1.3;\nvec2 p4 = vec2(-0.8, 0.1)*1.3;\nvec2 p5 = vec2(-0.7,-0.1)*1.3;\nvec2 p6 = vec2( 0.0,-0.2)*1.3;\nvec2 p7 = vec2( 0.7,-0.2)*1.3;\n\n\/\/ shape normals\n\nvec2 n01 = normalize(p1-p0);\nvec2 n12 = normalize(p2-p1);\nvec2 n23 = normalize(p3-p2);\nvec2 n34 = normalize(p4-p3);\nvec2 n45 = normalize(p5-p4);\nvec2 n56 = normalize(p6-p5);\nvec2 n67 = normalize(p7-p6);\nvec2 n70 = normalize(p0-p7);\n\n\/\/ good shape tangents\n\nvec2 t0 = n70+n01;\nvec2 t1 = n01+n12;\nvec2 t2 = n12+n23;\nvec2 t3 = n23+n34;\nvec2 t4 = n34+n45;\nvec2 t5 = n45+n56;\nvec2 t6 = n56+n67;\nvec2 t7 = n67+n70;\n\n\/\/======================================================\n\nfloat dDistance_1( in vec2 v )\n{\n    float d0 = sdSegment_1( v, p0, p1, t0, t1 );\n    float d1 = sdSegment_1( v, p1, p2, t1, t2 );\n    float d2 = sdSegment_1( v, p2, p3, t2, t3 );\n    float d3 = sdSegment_1( v, p3, p4, t3, t4 );\n    float d4 = sdSegment_1( v, p4, p5, t4, t5 );\n    float d5 = sdSegment_1( v, p5, p6, t5, t6 );\n    float d6 = sdSegment_1( v, p6, p7, t6, t7 );\n    float d7 = sdSegment_1( v, p7, p0, t7, t0 );\n\n    return min(d0,min(d1,min(d2,min(d3,min(d4,min(d5,min(d6,d7)))))));\n}\n\nfloat dDistance_2( in vec2 v )\n{\n    float d0 = sdSegment_2( v, p0, p1, t0, t1 );\n    float d1 = sdSegment_2( v, p1, p2, t1, t2 );\n    float d2 = sdSegment_2( v, p2, p3, t2, t3 );\n    float d3 = sdSegment_2( v, p3, p4, t3, t4 );\n    float d4 = sdSegment_2( v, p4, p5, t4, t5 );\n    float d5 = sdSegment_2( v, p5, p6, t5, t6 );\n    float d6 = sdSegment_2( v, p6, p7, t6, t7 );\n    float d7 = sdSegment_2( v, p7, p0, t7, t0 );\n\n    return min(d0,min(d1,min(d2,min(d3,min(d4,min(d5,min(d6,d7)))))));\n}\n\nfloat dDistance_4( in vec2 v )\n{\n    float d0 = sdSegment_4( v, p0, p1, t0, t1 );\n    float d1 = sdSegment_4( v, p1, p2, t1, t2 );\n    float d2 = sdSegment_4( v, p2, p3, t2, t3 );\n    float d3 = sdSegment_4( v, p3, p4, t3, t4 );\n    float d4 = sdSegment_4( v, p4, p5, t4, t5 );\n    float d5 = sdSegment_4( v, p5, p6, t5, t6 );\n    float d6 = sdSegment_4( v, p6, p7, t6, t7 );\n    float d7 = sdSegment_4( v, p7, p0, t7, t0 );\n\n    return min(d0,min(d1,min(d2,min(d3,min(d4,min(d5,min(d6,d7)))))));\n}\n\nfloat dDistance_8( in vec2 v )\n{\n    float d0 = sdSegment_8( v, p0, p1, t0, t1 );\n    float d1 = sdSegment_8( v, p1, p2, t1, t2 );\n    float d2 = sdSegment_8( v, p2, p3, t2, t3 );\n    float d3 = sdSegment_8( v, p3, p4, t3, t4 );\n    float d4 = sdSegment_8( v, p4, p5, t4, t5 );\n    float d5 = sdSegment_8( v, p5, p6, t5, t6 );\n    float d6 = sdSegment_8( v, p6, p7, t6, t7 );\n    float d7 = sdSegment_8( v, p7, p0, t7, t0 );\n\n    return min(d0,min(d1,min(d2,min(d3,min(d4,min(d5,min(d6,d7)))))));\n}\n\n\/\/====================================================================================\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2  p = (-iResolution.xy+2.0*fragCoord.xy) \/ min(iResolution.x,iResolution.y);\n\n    float c = dDistance_1( p );\n    float d = dDistance_2( p );\n    float e = dDistance_4( p );\n    float f = dDistance_8( p );\n    \n    float t = iGlobalTime*0.5 + 0.01;\n    \n    vec4 w = step( mod(t+4.0-vec4(0.0,1.0,2.0,3.0),4.0),vec4(1.0));\n    float a = step(4.0,mod(t,8.0));\n\n    float r = c*w.x + d*w.y + e*w.z + f*w.w;\n    \n    \n    vec3 col = vec3(1.0,1.0,1.0)*clamp( 0.75*r, 0.0, 1.0 ) + 0.02*smoothstep(0.8,0.9,sin(100.0*r));\n    \n    col = mix( col, (0.5+100.0*vec3(dFdx(r),dFdy(r),0.0))*exp(-r), a );\n    col = mix( col, (1.0 - 0.75*w.xyz)*(1.0-a), 1.0-smoothstep(0.0,0.01,r) );\n    \n    col = mix( col, vec3(1.0,0.0,0.0)*(1.0-a), 1.0-smoothstep(0.017,0.02,length(p-p0)) );\n    col = mix( col, vec3(1.0,0.0,0.0)*(1.0-a), 1.0-smoothstep(0.017,0.02,length(p-p1)) );\n    col = mix( col, vec3(1.0,0.0,0.0)*(1.0-a), 1.0-smoothstep(0.017,0.02,length(p-p2)) );\n    col = mix( col, vec3(1.0,0.0,0.0)*(1.0-a), 1.0-smoothstep(0.017,0.02,length(p-p3)) );\n    col = mix( col, vec3(1.0,0.0,0.0)*(1.0-a), 1.0-smoothstep(0.017,0.02,length(p-p4)) );\n    col = mix( col, vec3(1.0,0.0,0.0)*(1.0-a), 1.0-smoothstep(0.017,0.02,length(p-p5)) );\n    col = mix( col, vec3(1.0,0.0,0.0)*(1.0-a), 1.0-smoothstep(0.017,0.02,length(p-p6)) );\n    col = mix( col, vec3(1.0,0.0,0.0)*(1.0-a), 1.0-smoothstep(0.017,0.02,length(p-p7)) );\n\n\tfragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}