{"Shader":{"ver":"0.1","info":{"id":"lsj3zW","date":"1384727293","viewed":1990,"name":"Devour","username":"RavenWorks","description":"Thanks to <a href=\"https:\/\/www.shadertoy.com\/view\/MsX3WN\" class=\"regular\" target=\"_blank\">https:\/\/www.shadertoy.com\/view\/MsX3WN<\/a> and <a href=\"http:\/\/www.iquilezles.org\/www\/articles\/distfunctions\/distfunctions.htm\" class=\"regular\" target=\"_blank\">http:\/\/www.iquilezles.org\/www\/articles\/distfunctions\/distfunctions.htm<\/a> !","likes":10,"published":3,"flags":0,"tags":["raymarch","firstperson","infinite"],"hasliked":0},"renderpass":[{"inputs":[{"id":3,"src":"\/presets\/tex02.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":8,"src":"\/presets\/tex07.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"const float PI=3.14159265;\nconst float tunnelRadius = 5.0;\nconst float clenchTime = 2.0;\nconst float ringGap = 10.0;\n\nfloat sub_cylinder(in vec3 p){\n\treturn tunnelRadius-length(p.xy);\n}\nfloat sub_torus( vec3 p ){\n\t\n\tfloat ringNum = floor( (p.z \/ ringGap) + 0.5 );\n\tfloat withinRingZ = mod(p.z+ringGap\/2.0,ringGap)-ringGap\/2.0;\n\t\n\tfloat ang = atan(p.y,p.x);\n\t\n\tfloat clenchRadius = 1.8;\n\tfloat torusRadius = tunnelRadius+clenchRadius + sin(iGlobalTime*clenchTime - ringNum*0.7)*clenchRadius;\n\tfloat ringRadius = clenchRadius*2.0 + sin(ang*5.0)*0.15;\n\t\n\tvec2 q = vec2(length(p.xy)-torusRadius,withinRingZ);\n\treturn length(q)-ringRadius;\n\t\n}\n\nfloat smin( float a, float b ){\n\tfloat k = 1.5;\n    float h = clamp( 0.5+0.5*(b-a)\/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\nvec2 obj_tunnel(vec3 p){\n\treturn vec2(smin(sub_cylinder(p),sub_torus(p)),0);\n}\n\n\nvec2 obj_union(in vec2 obj0, in vec2 obj1){\n\tif (obj0.x < obj1.x)\n\t\treturn obj0;\n\telse\n\t\treturn obj1;\n}\n\nvec2 distance_to_obj(in vec3 p){\n\treturn obj_tunnel(p);\n}\n\nvoid shade_tunnel(in vec3 p, out vec3 color, out float specAmt, out float specPower){\n\tvec2 uv = vec2(p.z\/9.0,atan(p.y,p.x)\/PI);\n\tcolor = texture2D(iChannel0, uv).rgb * vec3(1.0,0.4,0.3);\n\tspecAmt = length(texture2D(iChannel1, uv*2.0).rgb)*0.6;\n\tspecPower = 8.0;\/\/29.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 vPos = fragCoord.xy\/iResolution.xy - 0.5;\n\t\n\t\/\/ Camera up vector.\n\tvec3 vuv=vec3(0,1,0); \n\t\/\/ Camera pos\n\tconst float baseSpeed = 7.0;\n\tfloat baseDist = iGlobalTime*baseSpeed;\n\tvec3 prp = vec3(0,0,baseDist + sin(iGlobalTime*clenchTime)*baseSpeed\/2.0);\n\tprp.x = cos(prp.z*0.2)*0.4;\n\tprp.y = sin(prp.z*0.3)*0.3;\n\t\/\/ Camera rot\n\tvec3 vpn = normalize(vec3(cos(iGlobalTime*0.4)*0.2,sin(iGlobalTime*0.3)*0.15,1));\n\t\n  \/\/ Camera setup.\n  vec3 u=normalize(cross(vuv,vpn));\n  vec3 v=cross(vpn,u);\n  vec3 vcv=(prp+vpn);\n  vec3 scrCoord=vcv+vPos.x*u*iResolution.x\/iResolution.y+vPos.y*v;\n  vec3 scp=normalize(scrCoord-prp);\n\n  \/\/ Raymarching.\n  const vec3 e=vec3(0.02,0,0);\n  const float maxd=70.0; \/\/Max depth\n  vec2 d=vec2(0.1,0.0);\n  vec3 c,p,N;\n\tfloat sA,sP;\n\n  float f=1.0;\n  for(int i=0;i<256;i++)\n  {\n    if ((abs(d.x) < .001) || (f > maxd)) \n      break;\n    \n    f+=d.x;\n    p=prp+scp*f;\n    d = distance_to_obj(p);\n  }\n  \n  if (f < maxd)\n  {\n    \/\/ y is used to manage materials.\n\tif (d.y==0.0) {\n      shade_tunnel(p,c,sA,sP);\n\t} else {\n      \n\t}\n    \n    vec3 n = vec3(d.x-distance_to_obj(p-e.xyy).x,\n                  d.x-distance_to_obj(p-e.yxy).x,\n                  d.x-distance_to_obj(p-e.yyx).x);\n    N = normalize(n);\n\t  \n\tvec3 L = vec3(sin(iGlobalTime*0.8)*7.0,cos(iGlobalTime*0.9)*7.0,0.0);\n\t  \n    float b=max(dot(N,normalize(prp-p+L)),0.0);\n    \/\/simple phong lighting\n    fragColor=vec4(((b*0.8+0.2)*c+pow(b,sP)*sA)*(1.0-f\/maxd),1.0);\n  }\n  else \n    fragColor=vec4(0,0,0,1); \/\/background color\n}","name":"","description":"","type":"image"}]}}