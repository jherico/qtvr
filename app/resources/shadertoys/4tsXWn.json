{"Shader":{"ver":"0.1","info":{"id":"4tsXWn","date":"1435845705","viewed":897,"name":"Country Flag","username":"foxes","description":"I just tried to make a flag of my country (Russia)","likes":5,"published":3,"flags":0,"tags":["procedural","2d","wave","flag"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\nfloat pixSize=0.004;\n\nfloat lerp(float a,float b,float s)\n{\n    return mix(a,b,s);\n}\n\nfloat mat(vec2 uw)\n{\n    vec2 uwa=fract(uw*90.0);\n    \/\/uwa=fract(uwa);\n    \/\/uwa.y=fract(uwa.y);\n    \/\/return max(0.4,min(1.0,abs(length(uwa-vec2(0.5,0.5))*4.0-1.5)));\n    return uwa.x+uwa.y;\/\/dot(uwa,uwa);\n}\n\nfloat matMip(vec2 uw)\n{\n    float x=pixSize;\n    vec2 uw2=mod(uw,vec2(x,x));\n    uw=uw-uw2;\n    vec4 a=vec4(0.0);\n    float z=pixSize*0.125;\n    for (int i=0;i<8;i++)\n        for (int j=0;j<8;j++) {\n            vec2 uws=uw+vec2(i,j)*z;\n\t\t\ta+=vec4(mat(uws),mat(uws+vec2(8.0*z,0.0)),mat(uws+vec2(0.0,8.0*z)),mat(uws+vec2(8.0,8.0)*z));\n        }\n    \/\/float s1=lerp(mat(uw),mat(uw+vec2(x,0.0)),uw2.x\/x);\n    \/\/float s2=lerp(mat(uw+vec2(0.0,x)),mat(uw+vec2(x,x)),uw2.x\/x);\n    \/\/return lerp(s1,s2,uw2.y\/x);;\n    uw2=uw2\/x;\n    vec2 s=mix(a.xz,a.yw,vec2(uw2.x));\n\t\/\/float s1=mix(a.x,a.y,uw2.x);\n    \/\/float s2=mix(a.z,a.w,uw2.x);\n    return mix(s.x,s.y,uw2.y)*0.125*0.125;\n}\n\nvec4 flag(vec2 uw,float zoom) {\n    float a=mod((uw.x)*zoom,1.0);\n    float b=mod((uw.y)*zoom,1.0);\n    if (a<0.5) a=0.0;\n    if (a>=0.5) a=0.9;\n    if (b<0.5) a=0.9-a;\n    return vec4(a,a,a,1.0)*matMip(uw);\n}\n\nvec4 flagRU(vec2 uw,float zoom) {\n    float b=(uw.y)*zoom;\n    float a=(uw.x)*zoom;\n    if (b<0.0 || b>1.0 || a>3.0 || a<0.0) return vec4(0.0);\n    vec4 color=vec4(0.0,0.0,1.0,1.0);\n    b=mod(b,1.0);\n    if (b<0.333) color=vec4(1.0,0.0,0.0,1.0);\n    if (b>0.666) color=vec4(1.0,1.0,1.0,1.0);\n    return color*matMip(uw);\n}\n\nvec4 flagGB(vec2 uw,float zoom) {\n    float b=(uw.y)*zoom;\n    float a=(uw.x)*zoom*0.8+0.1;\n    if (a>3.0 || a<0.0) return vec4(0.0);\n    if (b<0.0 || b>1.0) return vec4(0.0);\n    b=mod(b,1.0);\n    vec4 color=vec4(0.0,0.0,1.0,1.0);\n    if (b>0.4 && b<0.6 || a>0.4 && a<0.6) color=vec4(1.0);\n    if (b>0.45 && b<0.55 || a>0.45 && a<0.55) {\n        color=vec4(1.0,0.3,0.3,1.0);\n    \tif (b-a>-0.05 && b-a<0.05) color=vec4(1.0,0.1,0.1,1.0);\n    \tif (a+b>0.95 && a+b<1.05) color=vec4(1.0,0.1,0.1,1.0);\n    } else {\n    \tif (b-a>-0.05 && b-a<0.05) color=vec4(1.0,0.6,0.6,1.0);\n    \tif (a+b>0.95 && a+b<1.05) color=vec4(1.0,0.6,0.6,1.0);\n    }\n    return color*matMip(uw);\n}\n\nvec4 flagEN(vec2 uw,float zoom) {\n    float b=(uw.y)*zoom;\n    float a=(uw.x)*zoom*0.8+0.1;\n    if (a>3.0 || a<0.0) return vec4(0.0);\n    if (b<0.0 || b>1.0) return vec4(0.0);\n    b=mod(b,1.0);\n    vec4 color=vec4(0.0,0.0,1.0,1.0);\n    if (b<0.5 || a>0.45) {\n        color=vec4(1.0,1.0,1.0,1.0);\n        if (mod(b*9.0,1.0)>0.5) color=vec4(1.0,0.0,0.0,0.0);\n    }\n    return color*matMip(uw);\n}\n\nfloat time = iGlobalTime*0.5;\n\nfloat sin1(float a,float b)\n{\n    return sin(a)+cos(b*2.0)*0.5;\n}\n\nfloat sinDist(float x,float y,float step,float amp,float atime,out float ang)\n{\n    amp=max(amp,1.0);\n    float amp1=(amp-1.0)\/(50.0)+1.0;\n    float amp2=(amp-1.0)\/(50.0+step*5.0)+1.0;\n    \/\/float from=0.0;\/\/sin((atime-2.5*abs(sin((atime)*3.14159265358979\/step)))*3.14159265358979\/step);\n    float from=0.0;\/\/sin((-atime)*3.14159265358979\/step);\n    \/\/return (sin((x-atime)*3.14159265358979\/step)-from)*(amp-1.0)*12.5493557084138+x*amp;\n    atime=mod(atime,step*2.0);\n    float sc=(amp2-1.0)*12.5493557084138;\n    float stp=3.14159265358979\/step;\n    ang=cos((x-atime-2.5*(sin((x-atime)*stp)))*stp);\n    return (sin1((x-atime-2.5*(sin1((x-atime)*stp,y)))*stp,y))*sc+x*amp1;\n    \/\/return (sin((x-atime)*3.14159265358979\/step))*sc+x*amp;\n}\n\n\/\/ (x,y) rot, amp, size\nvec2 sinDr(vec2 val,float vecWind,float wind,float amp,float time,vec2 pos,in vec3 n,out vec3 normal)\n{\n    float vecWinda=vecWind*3.14159265358979;\n    vec2 p=val-pos;\n    vec2 s=p;\n    \/\/s=vec2(s.x*cos(vecWind)+s.y*sin(vecWind),-s.x*sin(vecWind)+s.y*cos(vecWind));\n    vec2 m=vec2(cos(vecWinda),sin(vecWinda));\n    vec3 nn=vec3(n.x*m.x+n.y*m.y,-n.x*m.y+n.y*m.x,n.z);\n    \n    float ang=0.0;\n    float angb;\n    float ls=length(s);\n    float l=sinDist(ls,s.y,amp,1.0+wind,time,angb);\n    s=s\/ls*l;\n    ang+=angb;\n    ls=length(s);\n    l=sinDist(ls,s.y,amp*0.7,1.0+wind*0.15,time,angb);\n    s=normalize(s)*l;\n    ang+=angb*0.8;\n    \/\/l=sinDist(length(s),s.y,amp*4.0,1.0+wind*0.25,time,angb);\n    \/\/s=normalize(s)*l;\n    \/\/ang+=angb\/(amp*4.0);\n    ang=ang*0.2;\n    m=vec2(cos(ang),sin(ang));\n    nn=vec3(nn.x*m.x+nn.z*m.y,nn.y,-nn.x*m.y+nn.z*m.x);\n    \n    \/\/s=vec2(s.x*cos(-vecWind)+s.y*sin(-vecWind),-s.x*sin(-vecWind)+s.y*cos(-vecWind));\n    m=vec2(cos(-vecWinda),sin(-vecWinda));\n    normal=vec3(nn.x*m.x+nn.y*m.y,-nn.x*m.y+nn.y*m.x,nn.z);\n    \n    s=mix(p,s,vec2(abs(p.x),abs(p.y)*abs(p.x)));\n    \/\/s.y=lerp(p.y,s.y,abs(p.y)*abs(p.x));\n    s+=pos;\n    return s;\n    \/\/return val;\n}\n\nvec4 render(vec2 uv)\n{   \n    vec3 normal=vec3(0.0,0.0,1.0);\n    vec2 s=uv;\/\/*0.7;\n    vec3 normala;\n    s=sinDr(s,0.5,1.06,100.0,time*5.2,vec2(-4.0,-2.0),normal,normala);\n    normal=normala;\n    \/\/s=sinDr(s,0.5,0.36,100.0,time*5.2,vec2(-4.0,2.0),normal,normal);\n    \/\/s=sinDr(s,0.5,0.26,100.0,time*5.2,vec2(-4.0,0.0),normal,normal);\n    \n    s=sinDr(s,0.03,0.02,2.0,time*1.0,vec2(-4.0,2.4),normal,normala);\n    normal=normala;\n    s=sinDr(s,-0.02,0.02,2.0,time*4.0,vec2(-4.0,0.0),normal,normala);\n    normal=normala;\n    s=sinDr(s,-0.02,0.02,2.0,time*2.0,vec2(-4.0,-2.4),normal,normala);\n    normal=normala;\n    s=sinDr(s,-0.04,0.02,4.0,time*3.1,vec2(-4.0,-3.0),normal,normala);\n    normal=normala;\n    \n    \/\/s=sinDr(s,-0.4,2.0,100.0,time*10.0,vec2(-4.0,1.0),normal,normal);\n\n    \/\/s=s\/0.7;\n    \/\/if (normal.z!=0.0)\n    \tpixSize=pixSize\/(pow(normal.z,7.2));\n    vec4 color=flagRU(s+vec2(2.0,2.0),0.2)*0.85;\n    float shadow=abs(dot(normal,vec3(0.0,0.0,1.0)));\n    float lig=max(0.0,min(1.0,pow(shadow,15.0)));\n    \n    return min(color*shadow+vec4(0.1,0.1,0.1,1.0)*lig,vec4(1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    float a=1.0\/iResolution.y;\n    uv.x *= iResolution.x * a;\n    \/\/float a=0.01\/iResolution.y;\n    \n    pixSize=a*4.0;\n    \n    vec4 d=vec4(0.0);\n    for (float i=2.0;i<5.0;i++) {\n\t\td+=render(uv)\/i;\n    \ttime=time-0.008;\n    }\n    \n\tfragColor = min(d*0.8,vec4(1.0));\n}\n","name":"","description":"","type":"image"}]}}