{"Shader":{"ver":"0.1","info":{"id":"lds3zr","date":"1361987891","viewed":3676,"name":"Ribbons","username":"XT95","description":"Some colored \"ribbons\" who are illuminated by the sound.","likes":54,"published":3,"flags":64,"tags":["3d","distancefield","musicsync","ribbons"],"hasliked":0},"renderpass":[{"inputs":[{"id":549,"src":"https:\/\/soundcloud.com\/maf464\/mafland","ctype":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\n\/\/-----------------------------------------------------------------------------\n\/\/ Utils\n\/\/-----------------------------------------------------------------------------\nfloat t = iGlobalTime*.5;\n\nvec3 rotateY(vec3 v, float x)\n{\n    return vec3(\n        cos(x)*v.x - sin(x)*v.z,\n        v.y,\n        sin(x)*v.x + cos(x)*v.z\n    );\n}\n\nvec3 rotateX(vec3 v, float x)\n{\n    return vec3(\n        v.x,\n        v.y*cos(x) - v.z*sin(x),\n        v.y*sin(x) + v.z*cos(x)\n    );\n}\n\nvec3 rotateZ(vec3 v, float x)\n{\n    return vec3(\n        v.x*cos(x) - v.y*sin(x),\n        v.x*sin(x) + v.y*cos(x),\n        v.z\n    );\n}\n\/\/-----------------------------------------------------------------------------\n\/\/ Scene\/Objects\n\/\/-----------------------------------------------------------------------------\nfloat box(vec3 p, vec3 pos, vec3 size)\n{\n\treturn max(max(abs(p.x-pos.x)-size.x,abs(p.y-pos.y)-size.y),abs(p.z-pos.z)-size.z);\n}\n\n\nfloat ribbon1(vec3 p)\n{\n\treturn box(p,vec3(cos(p.z)*.5,sin(p.z+p.x)*.5,.0),vec3(.02,0.02,3.5+t));\n}\nfloat ribbon2(vec3 p)\n{\n\treturn box(p,vec3(cos(p.z+1.5+p.x)*.6,sin(p.z+1.)*.3,.0),vec3(.02,0.02,3.+t));\n}\nfloat ribbon3(vec3 p)\n{\n\treturn box(p,vec3(sin(p.z+p.y)*.4,cos(p.z+p.x)*.5,.0),vec3(.02,0.02,4.+t));\n}\nfloat ribbon4(vec3 p)\n{\n\treturn box(p,vec3(sin(p.z+1.5+p.x)*.5,cos(p.z+1.5)*.6,.0),vec3(.02,0.02,2.+t));\n}\nfloat scene(vec3 p)\n{\n\tfloat d = .5-abs(p.y);\n\td = min(d, ribbon1(p) );\n\td = min(d, ribbon2(p) );\n\td = min(d, ribbon3(p) );\n\td = min(d, ribbon4(p) );\n\t\n\treturn d;\n}\n\n\/\/-----------------------------------------------------------------------------\n\/\/ Raymarching tools\n\/\/-----------------------------------------------------------------------------\n\/\/Raymarche by distance field\nvec3 Raymarche(vec3 org, vec3 dir, int step)\n{\n\tfloat d=0.0;\n\tvec3 p=org;\n\t\n\tfor(int i=0; i<64; i++)\n\t{\n\t\td = scene(p);\n\t\tp += d * dir;\n\t}\n\t\n\treturn p;\n}\n\/\/get Normal\nvec3 getN(vec3 p)\n{\n\tvec3 eps = vec3(0.01,0.0,0.0);\n\treturn normalize(vec3(\n\t\tscene(p+eps.xyy)-scene(p-eps.xyy),\n\t\tscene(p+eps.yxy)-scene(p-eps.yxy),\n\t\tscene(p+eps.yyx)-scene(p-eps.yyx)\n\t));\n}\n\n\/\/Ambiant Occlusion\nfloat AO(vec3 p, vec3 n)\n{\n\tfloat dlt = 0.1;\n\tfloat oc = 0.0, d = 1.0;\n\tfor(int i = 0; i<6; i++)\n\t{\n\t\toc += (float(i) * dlt - scene(p + n * float(i) * dlt)) \/ d;\n\t\td *= 2.0;\n\t}\n\treturn clamp(1.0 - oc, 0.0, 1.0);\n}\n\n\/\/-----------------------------------------------------------------------------\n\/\/ Main Loop\n\/\/-----------------------------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec4 color = vec4(0.0);\n\tfloat bass = texture2D( iChannel0, vec2(20.\/256.,0.25) ).x*.75+texture2D( iChannel0, vec2(50.\/256.,0.25) ).x*.25;\n\tvec2 v = -1.0 + 2.0 * fragCoord.xy \/ iResolution.xy;\n\tv.x *= iResolution.x\/iResolution.y;\n\t\n\tvec3 org = vec3(texture2D( iChannel0, vec2(1.\/256.,0.25) ).x*.2+1.,+0.3+bass*.05,t+5.);\n\tvec3 dir = normalize(vec3(v.x,-v.y,2.));\n\tdir = rotateX(dir,.15);\n\tdir = rotateY(dir,2.8);\n\t\n\t\n\tvec3 p = Raymarche(org,dir,48);\n\tvec3 n = getN(p);\n\t\n\t\n    color = vec4( max( dot(n.xy*-1.,normalize(p.xy-vec2(.0,-.1))),.0)*.01 );\n\tcolor += vec4(1.0,0.3,0.0,1.0)\/(ribbon1(p-n*.01)*20.+.75)*pow(bass,2.)*3.;\n\tcolor += vec4(0.5,0.3,0.7,1.0)\/(ribbon2(p-n*.01)*20.+.75)*pow(texture2D( iChannel0, vec2(64.\/256.,0.25) ).x,2.)*2.;\n\tcolor += vec4(0.0,0.5,1.0,1.0)\/(ribbon3(p-n*.01)*20.+.75)*pow(texture2D( iChannel0, vec2(128.\/256.,0.25) ).x,2.)*5.;\n\tcolor += vec4(0.0,1.0,0.2,1.0)\/(ribbon4(p-n*.01)*20.+.75)*pow(texture2D( iChannel0, vec2(200.\/256.,0.25) ).x,2.)*5.;\n\tcolor *= AO(p,n);\n\tcolor = mix(color,vec4(0.),vec4((min(distance(org,p)*.05,1.0))));\n\t\n\t\n\tfragColor = color;\n\n}","name":"","description":"","type":"image"}]}}