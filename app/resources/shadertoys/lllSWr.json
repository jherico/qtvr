{"Shader":{"ver":"0.1","info":{"id":"lllSWr","date":"1436005980","viewed":931,"name":"protoplasm","username":"FabriceNeyret2","description":".","likes":13,"published":3,"flags":0,"tags":["3d","raymarching"],"hasliked":0},"renderpass":[{"inputs":[{"id":15,"src":"\/presets\/tex10.png","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\n#define T iGlobalTime\n#define r(v,t) { float a = (t)*T, c=cos(a),s=sin(a); v*=mat2(c,s,-s,c); }\n#define SQRT3_2  1.26\n#define SQRT2_3  1.732\n#define smin(a,b) (1.\/(1.\/(a)+1.\/(b)))\n\n\/\/ --- noise functions from https:\/\/www.shadertoy.com\/view\/XslGRr\n\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nconst mat3 m = mat3( 0.00,  0.80,  0.60,\n           \t\t    -0.80,  0.36, -0.48,\n             \t\t-0.60, -0.48,  0.64 );\n\nfloat hash( float n ) {\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec3 x ) { \/\/ in [0,1]\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f*f*(3.-2.*f);\n\n    float n = p.x + p.y*57. + 113.*p.z;\n\n    float res = mix(mix(mix( hash(n+  0.), hash(n+  1.),f.x),\n                        mix( hash(n+ 57.), hash(n+ 58.),f.x),f.y),\n                    mix(mix( hash(n+113.), hash(n+114.),f.x),\n                        mix( hash(n+170.), hash(n+171.),f.x),f.y),f.z);\n    return res;\n}\n\nfloat fbm( vec3 p ) { \/\/ in [0,1]\n    float f;\n    f  = 0.5000*noise( p ); p = m*p*2.02;\n    f += 0.2500*noise( p ); p = m*p*2.03;\n    f += 0.1250*noise( p ); p = m*p*2.01;\n    f += 0.0625*noise( p );\n    return f;\n}\n\/\/ --- End of: Created by inigo quilez --------------------\n\n\/\/ --- more noise\n\n#define snoise(x) (2.*noise(x)-1.)\n\nfloat sfbm( vec3 p ) { \/\/ in [-1,1]\n    float f;\n    f  = 0.5000*snoise( p ); p = m*p*2.02;\n    f += 0.2500*snoise( p ); p = m*p*2.03;\n    f += 0.1250*snoise( p ); p = m*p*2.01;\n    f += 0.0625*snoise( p );\n    return f;\n}\n\n#define sfbm3(p) vec3(sfbm(p), sfbm(p-327.67), sfbm(p+327.67))\n\n\/\/ --- using the base ray-marcher of Trisomie21: https:\/\/www.shadertoy.com\/view\/4tfGRB#\n\nvec4 bg = vec4(0,.2,0,0);\n\nvoid mainImage( out vec4 f, vec2 w ) {\n    vec4 p = vec4(w,0,1)\/iResolution.yyxy-.5, d,c; p.x-=.4; \/\/ init ray \n    \/\/ (p.xz,.13); r(p.yz,.2); r(p.xy,.1);   \/\/ camera rotations\n    d = p; p.z += 10.;                        \/\/ ray dir = ray0-vec3(0)\n    \/\/ p = -vec4(0,.5,1,0)*T;\n    f = vec4(bg);\n    float x1,x2,x=1e9;\n    \n    for (float i=1.; i>0.; i-=.01)  {\n        if (f.x>=.99) break; \/\/ windows bug: miss it if at end ! thanks Dave_Hoskins\n        \n        vec4 u = .03*floor(p\/vec4(8,8,1,1)+3.5), t = p;\n        r(t.xy,u.x); r(t.xz,u.y); \/\/r(t.yz,1.);    \/\/ objects rotations\n\n        \/\/ x1 =length(t.xyz)-7.; \/\/ if you prefer the clean trim\n\t\tt.xyz += sfbm3(t.xyz\/2.+vec3(.5*T,0,0))*(.6+8.*(.5-.5*cos(T\/16.)));\n        c = 5.*texture2D(iChannel0,t.xy);\n \n        x = abs(mod(length(t.xyz),1.)-1.\/2.);\n        x1 = length(t.xyz)-7.; \n        x = max(x,x1);\n        if ((x1>.1) && (p.z<0.)) break; \/\/ optimization\n        \/\/x = max(x,-abs(t.x)+.2);\n        \/\/x = max(x,-abs(t.y)+.2);\n        \n        if(x<.01) { \/\/ hit !\n              f += (1.-f)*.2*mix(bg,c,i*i); x=.1; \n              \/\/if (f.x>=.99) break; \/\/ compiler bug on windows -> moved to begin of loop\n            }  \/\/ color texture + black fog \n        \n        p += d*x;           \/\/ march ray\n     }\n}\n","name":"","description":"","type":"image"}]}}