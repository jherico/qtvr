{"Shader":{"ver":"0.1","info":{"id":"MtsSzS","date":"1438632644","viewed":1129,"name":"[SIG15] HAL 9000","username":"baldand","description":"My entry for Shadertoy Competition 2015 [SIG15]: <br\/><br\/>A tribute to HAL 9000, from Stanley Kubrick's film \"2001: A Space Odyssey\" <br\/>","likes":16,"published":3,"flags":8,"tags":["3d","raymarching","sound","fonts","sig15"],"hasliked":0},"renderpass":[{"inputs":[{"id":24,"src":"\/presets\/cube02_0.jpg","ctype":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Copyright (c) 2015 Andrew Baldwin (baldand)\n\/\/ License = Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) (http:\/\/creativecommons.org\/licenses\/by-sa\/4.0\/)\n\n\/\/ A tribute to HAL 9000, from Stanley Kubrick's film \"2001: A Space Odyssey\" \n\n\/\/ For basic distance-field modeling functions <thanks iq>\nfloat box( vec2 p, vec2 b )\n{\n  vec2 d = abs(p) - b;\n  return min(max(d.x,d.y),0.0) +\n         length(max(d,0.0));\n}\n\nfloat sdRoundBox( in vec2 p, in vec2 b, in float r ) \n{\n    vec2 q = abs(p) - b+r; \/\/ AB added + r here so that size stay constant\n    vec2 m = vec2( min(q.x,q.y), max(q.x,q.y) );\n    float d = (m.x > 0.0) ? length(q) : m.y; \n    return d - r;\n}\n\nfloat line( vec2 p, vec3 d ) \n{\n\treturn abs(dot(p,normalize(d.xy)))-d.z;    \n}\n\nfloat sdPlane( vec3 p, vec4 n )\n{\n  \/\/ n must be normalized\n  return dot(p,n.xyz) + n.w;\n}\n\nfloat sdCappedCylinder( vec3 p, vec2 h )\n{\n  vec2 d = abs(vec2(length(p.xy),p.z)) - h;\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nfloat sdCylinder( vec3 p, vec3 c )\n{\n  return length(p.xz-c.xy)-c.z;\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) +\n         length(max(d,0.0));\n}\n\/\/ <\/thanks iq>\n\nfloat near( vec3 p, float r )\n{\n  return length(p)-r;\n}\n\nfloat squircle( vec2 p, vec3 d ) \n{\n    p\/=d.x;\n\treturn (length(pow(abs(p),vec2(d.y)))-1.0)*pow(d.x,d.y-d.z);    \n}\n\n\/\/ Hand-estimated distance field approximation of \n\/\/ Eurostile Bold Extended font \n\/\/ Characters A-I,M,N,T-V,0-9,:,-\n\nfloat esA( vec2 p ) \n{\n    \/\/ A\n    float d = box(p-vec2(0.,0.),vec2(.74,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n    \tfloat c = line(p-vec2(-0.12,0.),vec3(-0.48,.26,.05)); \/\/ Left edge\n    \tc = min(c,line(p-vec2(0.12,0.),vec3(.48,.26,.05))); \/\/ Right edge\n    \tc = min(c,box(p-vec2(0.,-0.08),vec2(0.19,0.04))); \/\/ Bar\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esB( vec2 p ) \n{\n    \/\/ B\n    float d = box(p-vec2(0.,0.),vec2(.63,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = line(p-vec2(-.06,0.),vec3(1.,0.,0.5*.4)); \/\/ Left edge\n    \tc = min(c,squircle(p-vec2(0.13,0.092),vec3(.1,1.2,.08))); \/\/ Top right edge\n    \tc = min(c,squircle(p-vec2(0.15,-0.092),vec3(.1,1.2,.08))); \/\/ Bottom right edge\n    \tc = max(c,-squircle(p-vec2(0.09,0.08),vec3(.0355,1.2,.08))); \/\/ Top right edge\n    \tc = max(c,-squircle(p-vec2(0.10,-0.07),vec3(.0355,1.2,.08))); \/\/ Bottom right edge\n        c = max(c,-box(p-vec2(-0.025,0.08),vec2(0.11,0.035))); \/\/ Bar\n    \tc = max(c,-box(p-vec2(-0.02,-0.07),vec2(0.115,0.035))); \/\/ Bar\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esC( vec2 p ) \n{\n    \/\/ C\n    float d = box(p-vec2(0.,0.),vec2(.61,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = squircle(p\/vec2(.61,.48),vec3(.4,2.3,-.5)); \/\/ Outer\n\t    c = max(c,-squircle(1.8*p\/vec2(.61,.48),vec3(.4,2.9,-.6))); \/\/ Inner\n    \tc = max(c,-box(p-vec2(0.2,-0.0),vec2(0.11,0.05))); \/\/ Hole\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esD( vec2 p ) \n{\n    \/\/ D\n    float d = box(p-vec2(0.,0.),vec2(.65,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = squircle(p\/vec2(.65,.48),vec3(.4,2.3,-.5)); \/\/ Outer\n    \tc = min(c,box(p-vec2(-.15,0.),vec2(.55,.48)*.4)); \n\t    c = max(c,-squircle(1.76*p\/vec2(.65,.48),vec3(.4,2.9,-.6))); \/\/ Inner\n    \tc = max(c,-box(p-vec2(-.03,0.),vec2(.55,.48)*.225));\n        d = max(c,d);\n    }\n    return d;\n}\n\n\nfloat esE( vec2 p ) \n{\n    \/\/ E\n    float d = box(p-vec2(0.,0.),vec2(.54,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = box(p-vec2(-0.16,0.),vec2(.14,.48)*.4);\n\t    c = min(c,box(p-vec2(0.1,0.16),vec2(.54,.13)*.4)); \n \t    c = min(c,box(p-vec2(0.0,0.0),vec2(.47,.095)*.4)); \n \t    c = min(c,box(p-vec2(0.1,-0.16),vec2(.54,.13)*.4));\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esF( vec2 p ) \n{\n    \/\/ F\n    float d = box(p-vec2(0.,0.),vec2(.54,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = box(p-vec2(-0.16,0.),vec2(.14,.48)*.4);\n\t    c = min(c,box(p-vec2(0.1,0.16),vec2(.54,.13)*.4)); \n \t    c = min(c,box(p-vec2(0.0,0.0),vec2(.47,.095)*.4)); \n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esG( vec2 p ) \n{\n    \/\/ G\n    float d = box(p-vec2(0.,0.),vec2(.61,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = squircle(p\/vec2(.61,.48),vec3(.4,2.3,-.5)); \/\/ Outer\n\t    c = max(c,-squircle(1.8*p\/vec2(.61,.48),vec3(.4,2.9,-.6))); \/\/ Inner\n    \tc = max(c,-box(p-vec2(0.2,0.02),vec2(0.11,0.05))); \/\/ Hole\n \t    c = min(c,box(p-vec2(0.13,-0.01),vec2(.33,.08)*.4)); \n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esH( vec2 p ) \n{\n    \/\/ H\n    float d = box(p-vec2(0.,0.),vec2(.63,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = box(p-vec2(-0.195,0.),vec2(.14,.48)*.4);\n \t    c = min(c,box(p-vec2(0.0,0.0),vec2(.47,.095)*.4)); \n\t    c = min(c,box(p-vec2(0.196,0.),vec2(.14,.48)*.4));\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esI( vec2 p ) \n{\n    \/\/ I\n    float d = box(p-vec2(0.,0.),vec2(.16,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = box(p-vec2(0.,0.),vec2(.14,.48)*.4);\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esM( vec2 p ) \n{\n    \/\/ M\n    float d = box(p-vec2(0.,0.),vec2(.83,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = box(p-vec2(-0.28,0.),vec2(.14,.48)*.4);\n\t    c = min(c,box(p-vec2(0.28,0.),vec2(.14,.48)*.4));\n    \tc = min(c,line(p-vec2(-0.11,0.),vec3(0.48,.26,.05))); \/\/ Left edge\n    \tc = min(c,line(p-vec2(0.11,0.),vec3(-.48,.26,.05))); \/\/ Right edge\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esN( vec2 p ) \n{\n    \/\/ N\n    float d = box(p-vec2(0.,0.),vec2(.68,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = box(p-vec2(-0.22,0.),vec2(.14,.48)*.4);\n\t    c = min(c,box(p-vec2(0.22,0.),vec2(.14,.48)*.4));\n    \tc = min(c,line(p-vec2(-.0,0.),vec3(0.3,.26,.05))); \/\/ Left edge\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esT( vec2 p ) \n{\n    \/\/ T\n    float d = box(p-vec2(0.,0.),vec2(.58,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = box(p-vec2(0.,0.15),vec2(.54,.12)*.4); \n\t    c = min(c,box(p-vec2(0.0,0.),vec2(.14,.48)*.4));\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esU( vec2 p ) \n{\n    \/\/ U\n    float d = box(p-vec2(0.,0.),vec2(.68,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = squircle(p\/vec2(.68,.68)-vec2(0.,.11),vec3(.4,2.2,-.5)); \/\/ Outer\n\t    c = max(c,-squircle(1.8*p\/vec2(.68,.88)-vec2(0.,.2),vec3(.4,2.9,-.6))); \/\/ Inner\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esV( vec2 p ) \n{\n    \/\/ V\n    float d = box(p-vec2(0.,0.),vec2(.73,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n    \tfloat c = line(p-vec2(-0.12,0.),vec3(.48,.26,.06)); \/\/ Left edge\n    \tc = min(c,line(p-vec2(0.12,0.),vec3(-.48,.26,.06))); \/\/ Right edge\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat es0( vec2 p ) \n{\n    \/\/ 0\n    float d = box(p-vec2(0.,0.),vec2(.61,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = squircle(p\/vec2(.61,.48),vec3(.4,2.3,-.5)); \/\/ Outer\n\t    c = max(c,-squircle(1.8*p\/vec2(.61,.48),vec3(.4,2.9,-.6))); \/\/ Inner\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat es1( vec2 p ) \n{\n    \/\/ 1\n    float d = box(p-vec2(0.,0.),vec2(.38,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = box(p-vec2(0.1,0.),vec2(.14,.48)*.4);\n    \tc = min(c,line(p-vec2(-.0,0.15),vec3(-0.15,.22,.04))); \/\/ Left edge\n    \tc = max(c,-line(p-vec2(-.3,0.13),vec3(0.22,.15,.1))); \/\/ Left edge\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat es2( vec2 p ) \n{\n    \/\/ 2\n    float d = box(p-vec2(0.,0.),vec2(.57,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = squircle(p\/vec2(.57,.3)-vec2(0.,.24),vec3(.4,2.2,-.5)); \/\/ Outer\n\t    c = max(c,-squircle(1.8*p\/vec2(.57,.25)-vec2(0.,0.55),vec3(.4,2.,-.6))); \/\/ Inner\n        c = max(c,-box(p-vec2(-0.15,-0.06),vec2(.35,.35)*.4));\n\t    float e = squircle(p\/vec2(.57,.3)-vec2(0.,-.33),vec3(.4,2.2,-.5)); \/\/ Outer\n\t    e = max(e,-squircle(1.8*p\/vec2(.57,.25)-vec2(0.,-.74),vec3(.4,2.9,-.6))); \/\/ Inner\n        e = max(e,-box(p-vec2(0.25,-0.1),vec2(.5,.5)*.4));\n        c = min(e,c);\n \t    c = min(c,box(p-vec2(0.,-0.16),vec2(.6,.09)*.4));\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat es3( vec2 p ) \n{\n    \/\/ 3\n    float d = box(p-vec2(0.,0.),vec2(.57,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = squircle(p\/vec2(.57,.27)-vec2(0.,.32),vec3(.4,2.2,-.5)); \/\/ Outer\n\t    c = max(c,-squircle(1.8*p\/vec2(.57,.22)-vec2(0.,0.65),vec3(.4,2.,-.6))); \/\/ Inner\n\t    float e = squircle(p\/vec2(.57,.27)-vec2(0.,-.33),vec3(.4,2.2,-.5)); \/\/ Outer\n\t    e = max(e,-squircle(1.8*p\/vec2(.57,.22)-vec2(0.,-.65),vec3(.4,2.,-.6))); \/\/ Inner\n        c = min(e,c);\n        c = max(c,-box(p-vec2(-0.15,-0.0),vec2(.35,.18)*.4));\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat es4( vec2 p ) \n{\n    \/\/ 4\n    float d = box(p-vec2(0.,0.),vec2(.61,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = box(p-vec2(0.11,0.),vec2(.14,.48)*.4);\n \t    c = min(c,box(p-vec2(0.0,-0.06),vec2(.61,.095)*.4)); \n    \tc = min(c,line(p-vec2(-.01,0.13),vec3(-0.18,.26,.045))); \/\/ Left edge\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat es5( vec2 p ) \n{\n    \/\/ 5 - not very accurate\n    float d = box(p-vec2(0.,0.),vec2(.58,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = box(p-vec2(-0.16,0.1),vec2(.14,.37)*.4);\n\t    c = min(c,box(p-vec2(0.02,0.16),vec2(.48,.13)*.4));         \n\t    float e = squircle(p\/vec2(.57,.27)-vec2(0.,-.33),vec3(.4,2.2,-.5)); \/\/ Outer\n\t    e = max(e,-squircle(1.9*p\/vec2(.57,.22)-vec2(0.,-.71),vec3(.4,2.,-.6))); \/\/ Inner\n\t    e = max(e,-box(p-vec2(-0.21,-0.05),vec2(.26,.15)*.4));         \n        c = min(e,c);\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat es6( vec2 p ) \n{\n    \/\/ 6\n    float d = box(p-vec2(0.,0.),vec2(.57,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = squircle(p\/vec2(.57,.27)-vec2(0.,.32),vec3(.4,1.5,-.5)); \/\/ Outer\n\t    c = max(c,-squircle(1.8*p\/vec2(.57,.22)-vec2(0.,0.65),vec3(.4,2.,-.6))); \/\/ Inner\n        c = max(c,-box(p-vec2(0.,.02),vec2(.65,.18)*.4));\n\t    float e = squircle(p\/vec2(.57,.27)-vec2(0.,-.33),vec3(.4,1.5,-.5)); \/\/ Outer\n\t    e = max(e,-squircle(1.8*p\/vec2(.57,.22)-vec2(0.,-.65),vec3(.4,2.,-.6))); \/\/ Inner\n        c = min(e,c);\n\t    c = min(c, box(p-vec2(-0.183,0.),vec2(.14,.25)*.4));\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat es7( vec2 p ) \n{\n    \/\/ 7\n    float d = box(p-vec2(0.,0.),vec2(.58,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = box(p-vec2(.0,.15),vec2(.54,.11)*.4); \n    \tc = min(c,line(p-vec2(.085,0.),vec3(-0.37,.32,.04))); \/\/ Left edge\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat es8( vec2 p ) \n{\n    \/\/ 8\n    float d = box(p-vec2(0.,0.),vec2(.58,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = squircle(p\/vec2(.57,.27)-vec2(0.,.32),vec3(.4,1.5,-.5)); \/\/ Outer\n\t    c = max(c,-squircle(1.8*p\/vec2(.57,.22)-vec2(0.,0.65),vec3(.4,2.,-.6))); \/\/ Inner\n\t    float e = squircle(p\/vec2(.58,.27)-vec2(0.,-.33),vec3(.4,1.5,-.5)); \/\/ Outer\n\t    e = max(e,-squircle(1.8*p\/vec2(.58,.22)-vec2(0.,-.65),vec3(.4,2.,-.6))); \/\/ Inner\n        c = min(e,c);\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat es9( vec2 p ) \n{\n    \/\/ 9\n    float d = box(p-vec2(0.,0.),vec2(.58,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = squircle(p\/vec2(.57,.27)-vec2(0.,.32),vec3(.4,1.5,-.5)); \/\/ Outer\n\t    c = max(c,-squircle(1.8*p\/vec2(.57,.22)-vec2(0.,0.65),vec3(.4,2.,-.6))); \/\/ Inner\n\t    float e = squircle(p\/vec2(.57,.27)-vec2(0.,-.33),vec3(.4,1.5,-.5)); \/\/ Outer\n\t    e = max(e,-squircle(1.8*p\/vec2(.57,.22)-vec2(0.,-.65),vec3(.4,2.,-.6))); \/\/ Inner\n        e = max(e,-box(p-vec2(0.,-.03),vec2(.6,.18)*.4));\n        c = min(e,c);\n\t    c = min(c, box(p-vec2(0.1775,0.0),vec2(.125,.255)*.4));\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esColon( vec2 p ) \n{\n    \/\/ I\n    float d = box(p-vec2(0.,0.),vec2(.14,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = box(p-vec2(0.,-0.14),vec2(.14,.14)*.4);\n\t    c = min(c, box(p-vec2(0.,0.05),vec2(.14,.14)*.4));\n        d = max(c,d);\n    }\n    return d;\n}\n\nfloat esDash( vec2 p ) \n{\n    \/\/ I\n    float d = box(p-vec2(0.,0.),vec2(.34,.48)*.4); \/\/ Mask\n    if (d<0.1) {\n\t    float c = box(p-vec2(0.,0.-.03),vec2(.34,.14)*.4);\n        d = max(c,d);\n    }\n    return d;\n}\nfloat chW( float c ) \n{\n    float d=0.;\n    if (c<1.) d=.74; else if (c<2.) d=.63; else if (c<3.) d=.61; else if (c<4.) d=.65;\n    else if (c<5.) d=.54; else if (c<6.) d=.54; else if (c<7.) d=.61; else if (c<8.) d=.63;\n    else if (c<9.) d=.16; else if (c<10.) d=.83;\n    else if (c<11.) d=.68; else if (c<12.) d=.58;\n    else if (c<13.) d=.68; else if (c<14.) d=.73;\n    else if (c<15.) d=.61; else if (c<16.) d=.38;\n    else if (c<17.) d=.57; else if (c<18.) d=.57;\n    else if (c<19.) d=.61; else if (c<20.) d=.58;\n    else if (c<21.) d=.57; else if (c<22.) d=.58;\n    else if (c<23.) d=.58; else if (c<24.) d=.58;\n    else if (c<25.) d=.14; else if (c<26.) d=.34;\n    return d*.4;\n}\n\nfloat ch( vec2 p, float c ) \n{\n    float d=1.;\n    if (c<1.) d=esA(p); else if (c<2.) d=esB(p); else if (c<3.) d=esC(p); else if (c<4.) d=esD(p);\n    else if (c<5.) d=esE(p); else if (c<6.) d=esF(p); else if (c<7.) d=esG(p); else if (c<8.) d=esH(p);\n    else if (c<9.) d=esI(p); else if (c<10.) d=esM(p);\n    else if (c<11.) d=esN(p); else if (c<12.) d=esT(p);\n    else if (c<13.) d=esU(p); else if (c<14.) d=esV(p);\n    else if (c<15.) d=es0(p); else if (c<16.) d=es1(p);\n    else if (c<17.) d=es2(p); else if (c<18.) d=es3(p);\n    else if (c<19.) d=es4(p); else if (c<20.) d=es5(p);\n    else if (c<21.) d=es6(p); else if (c<22.) d=es7(p);\n    else if (c<23.) d=es8(p); else if (c<24.) d=es9(p);\n    else if (c<25.) d=esColon(p); else if (c<26.) d=esDash(p);\n    return d;\n}\n\nfloat ran(float sp,float a,float b,float m)\n{\n    return mod(mod(sp*a+b,487.),m);\n}\n\nfloat ncix3(in float c[3],in int ix)\n{\n    if (ix==0) return c[0];\n    else if (ix==1) return c[1];\n    return c[2];\n}\n\nfloat ncix9(in float c[9],in int ix)\n{\n    if (ix==0) return c[0];\n    else if (ix==1) return c[1];\n    else if (ix==2) return c[2];\n    else if (ix==3) return c[3];\n    else if (ix==4) return c[4];\n    else if (ix==5) return c[5];\n    else if (ix==6) return c[6];\n    else if (ix==7) return c[7];\n    return c[8];\n}\n\nvec3 label( float n ) \n{\n    if (n<8.){ if (n<4.){if (n<2.){if (n==0.) return vec3(13.,4.,7.);\/\/ VEH\n                                else return vec3(10.,0.,13.); } \/\/ NAV\n                       else {   if (n==2.) return vec3(6.,3.,4.); \/\/ GDE\n                                else return vec3(2.,10.,11.); }} \/\/ CNT\n             else     {if (n<6.){if (n==4.) return vec3(7.,8.,1.); \/\/ HIB\n                                else return vec3(3.,9.,6.); } \/\/ DMG\n                       else {   if (n==6.) return vec3(0.,11.,9.); \/\/ ATM\n                             else return vec3(10.,12.,2.); }}} \/\/ NUC\n    else { if (n==8.) return vec3(2.,14.,9.); \/\/C0M\n          else return vec3(9.,4.,9.); } \/\/ MEM\n    \n}\n\nvec3 bigtext( vec2 p, float sp, float screenNum, float pixwid ) \n{\n    \/\/ Choose large label AAA characters - these are drawn at fixed locations\n    float c[3];\n    vec3 lab = label(mod((sp+screenNum)*11.,10.));\n    c[0]=lab.x;\/\/ran(sp,241.,10.,14.);\n    c[1]=lab.y;\/\/ran(sp,137.,0.,14.);\n    c[2]=lab.z;\/\/ran(sp,113.,13.,14.);\n\n    \/\/ Choose small label characters AAA: NN-AA\n    float s[9];\n    s[0] = ran(sp,277.,313.,14.); \n    s[1] = ran(sp,173.,311.,14.);\n    s[2] = ran(sp,113.,433.,14.); \n    s[3] = 24.;\/\/ Colon\n    s[4] = ran(sp,157.,421.,10.)+14.;\n    s[5] = ran(sp,119.,133.,10.)+14.;\n    s[6] = 25.;\/\/ Dash\n    s[7] = ran(sp,139.,313.,14.);\n    s[8] = ran(sp,119.,137.,14.);\n    \n    \/\/ Main label location\n    float sc1 = 1.8;\n    vec2 ma;\n    \/\/ Small label location\n    float sc2 = 7.0;\n    float sw = .15;\n    float ss = .2\/sc2;\n    float m = 1.0;\/\/ch((p+sa)*sc2,s1);\n    \/\/ Find small label offsets \n    float w[9];for (int i=0;i<9;i++) w[i] = chW(s[i])*sw;\n    float x[9];x[0]=0.;for (int i=1;i<9;i++) { x[i] = x[i-1]+w[i-1]+w[i]+ss; if(i==4)x[i]+=.05; } \n    \n    \/\/ Check character\n    float aatext = pixwid;\n    vec2 b = vec2(0.);\n    float d = 1.0;\n    float cix = -1.;\n    float sc = 1.;\n    if (p.x>-.98 && p.x<.98) {\n        if ((p.y<-0.06)&&(p.y>-.35)) {\n            \/\/ Main label - fixed laout\n            ma = vec2(-.05,.2);\n            int ix = int((p.x+ma.x+1.25)\/.5)-1;\n            sc = sc1;\n            ma.x = mod((p.x+ma.x+1.25),.5)-.25;\n            if (ix<=2 && ix>=0) cix = ncix3(c,ix);\n        } else if ((p.y>-0.06)&&(p.y<0.1)) {\n            \/\/ Small label - proportional layout\n            aatext = pixwid*5.;\n            ma = vec2(.7,-.06);\n            int ix=-1;\n            float mx;\n            for (int i=9;i>=0;i--) { if ((p.x+ma.x)<(x[i]+w[i])) { ix=i; mx = ma.x-x[i]; } }\n            sc = sc2;\n            ma.x = p.x+mx;\n            if (ix<=8 && ix>=0) cix = ncix9(s,ix);\n        } else if ((p.y>.91 && p.y<1.)) {\n            \/\/ Screen number\n            aatext = pixwid*6.;\n            ma = vec2(.87,-.97);\n            int ix = int((p.x+ma.x+1.25)\/.11)-11;\n            sc = 10.;\n            ma.x = mod((p.x+ma.x+1.25),.11)-.05;\n            if (ix==0) cix=2.;\n            if (ix==1) cix=14.+screenNum+1.;\n        }\n    }\n    \n    \/\/ Draw the character if we are in one\n    if (cix>-1.) d = min(d,ch(vec2(ma.x,p.y+ma.y)*sc,cix));\n    return vec3(d,aatext,0.);\n}\n\nvec3 data( vec2 p, float spf, float screenNum, float pixwid ) \n{       \n    \/\/ Check character\n    float sp = floor(spf);\n    float aatext = pixwid;\n    float aatextm = -4.*pixwid;\n    vec2 b = vec2(0.);\n    float d = 1.0;\n    float cix = -1.;\n    vec2 sc = vec2(1.,2.);\n    vec2 ma;\n    vec2 mp = mod(p,.1)-.05;\n    float g = 1.;\n    float top = -.91+mod(sp,10.)*.08;\n    float bot = .91-mod(sp*91.,10.)*.08;\n    float left = -.87+mod(sp*31.,10.)*.08;\n    float right = .87-mod(sp*59.,10.)*.08;\n    float top2 = -.91+mod(sp*13.,10.)*.08;\n    float bot2 = .91-mod(sp*57.,10.)*.08;\n    float left2 = -.87+mod(sp*37.,10.)*.08;\n    float right2 = .87-mod(sp*71.,10.)*.08;\n    float msp = mod(sp,5.);\n    if (p.x>-.91 && p.x<.91) {\n        if ((p.y<bot2)&&(p.y>top2)&&(p.x>left2)&&(p.x<right2)&&(msp>1.)) {\n            d = min(d,min(abs(mp.x*5.),abs(mp.y*5.))-.01);\n            float wig = abs(p.y+.1*sin(10.*(p.x-spf))+.1*sin(4.3*(p.x+spf))+.1*(1.1*sin(p.x+2.*spf)))-.001;\n            float wigadd = mix(p.x*.1,0.,fract(spf));\n            d = min(wig+wigadd,d);\n            if (msp>3.) d = min(d,abs(mod(length(p),.3)-.15)-.001);\n        }\n        if ((p.y<bot)&&(p.y>top)&&(p.x>left)&&(p.x<right)&&(msp<2.)) {\n            \/\/ Data\n            ma = vec2(-.05,.2);\n            int ix = int((p.x+ma.x+1.25)\/.03);\n            int iy = int(floor(spf*10.)+(p.y+ma.y+1.25)\/.07);\n            sc = vec2(2.,1.)*9.;\n            cix = 14.+mod(screenNum+mod(float(ix+iy)*93.,23.)+mod((float(iy)+screenNum)*131.,37.)+mod(sp*277.,41.),10.);\n            if ((ix<20) || (ix>28 && ix<34) || (ix>36 && ix<40) || (ix>44 && ix<49) || (ix>52 && ix<58) || (ix>60)) cix=30.;\n            \/\/if (msp>2.) cix=30.; \n            ma.x = mod((p.x+ma.x+1.25),.03)-.015;\n            ma.y = mod((p.y+ma.y+1.25),.07)-.04;\n            aatext = 4.*pixwid;\n        } else if ((p.y>.91 && p.y<1.)) {\n            \/\/ Screen number\n            aatext = pixwid*6.;\n            ma = vec2(.87,-.97);\n            int ix = int((p.x+ma.x+1.25)\/.11)-11;\n            sc = vec2(10.);\n            ma.x = mod((p.x+ma.x+1.25),.11)-.05;\n            ma.y += p.y;\n            aatextm = 0.;\n            if (ix==0) cix=2.;\n            if (ix==1) cix=14.+screenNum+1.;\n        }\n    }\n    \n    \/\/ Draw the character if we are in one\n    if (cix>-1.) d = min(d,ch(vec2(ma.x,ma.y)*sc,cix));\n    d = min(d,g);\n    return vec3(d,aatext,aatextm);\n}\n\n\nvec4 screen( vec2 p, float spf, float screenNum, float aa )\n{\n    float sp = floor(spf);\n    \n    float ref = 0.;\n    \/\/ Since the character rendering is complex, \n    \/\/ and we only have one character in any part of the screen\n    \/\/ calculate which - if any - character we are drawing here and draw that\n    \n    float pixwid = aa;    \n\tvec3 bt;\n    if (mod(sp,10.)>5.) {\n        bt = data(p,spf,screenNum,pixwid);    }\n    else \n        bt = bigtext(p,sp,screenNum,pixwid);\n    float d = bt.x;\n    float aatext = bt.y;\n    float aatextm = bt.z;\n    float o = smoothstep(aatextm,aatext,d); \/\/ Text anti-aliasing\n    float flicker = (1.0+0.04*sin((iGlobalTime+screenNum)*1000.)); \/\/ Back-projection flicker\n    \/\/ Colours\n    vec3 bg = vec3(mod(7.+sp*7428.,105.),mod(9.+sp*8282.,105.),mod(80.+sp*2636.,105.))\/255.*flicker;\n    float mbg = (bg.r+bg.g+bg.b)*.33333;\n    bg = mix(bg,vec3(mbg),.65); \/\/ De-saturate\n    vec3 bg2 = bg*.8;\n    vec3 fg = vec3(.80,.81,.81)*flicker;\n    vec3 fg2 = fg*.8;\n    vec2 sar = vec2(.976,1.)*.9; \/\/ Aspect ratio of HAL 9000 screens\n    vec2 r = (p+vec2(2.12+fract(sp*.01),1.12+fract(sp*.01)))*vec2(13.567,13.678);\n    float dither = mod((r.x*r.x*r.y*r.y),.9)*.3; \/\/ Some texture to hide banding\n    vec3 frcol = 2.*vec3(20.,18.,22.)\/255.;\n    vec3 fncol = vec3(.5);    \n    frcol = mix(fncol,frcol,o);\n    vec3 scrcol = mix(mix(fg,fg2,p.x+2.0*p.y+dither),mix(bg,bg2,p.x+2.0*p.y+dither),o);\n    d = sdRoundBox(p,sar,.05); \/\/ Frames\n    if (d<0.) ref=-1.;\n    frcol = mix(frcol,vec3(0.05),step(.20,d)*step(d,0.22));\n    frcol = mix(frcol,vec3(0.05),step(.25,d)*step(d,0.27));\n    vec3 fcol = mix(scrcol,frcol,smoothstep(0.,pixwid,d));\n    return vec4(fcol,ref);\n}\n\n\/\/ This is HALs logo\nfloat halfont( vec2 p )\n{\n    float sc = 0.0033;\n    float x = p.x+2.*sc;\n    float cn = floor(float(x\/(16.*sc)));\n    float xx = mod(p.x+2.*sc,16.*sc)-8.*sc;\n    p = vec2(xx,p.y);\n    float r = 1.0;\n    float outer = box(p,vec2(7.,11.)*sc);\n    if (cn==-3.) {\n        float htop = box(p-vec2(0.,9.25)*sc,vec2(1.7,5.75)*sc);\n        float hbot = box(p+vec2(0.,6.25)*sc,vec2(1.7,5.75)*sc);\n        outer = max(outer,-htop);\n        outer = max(outer,-hbot);\n        r = abs(outer+.5*sc)-.01*sc;\n    } else if (cn==-2.) {\n        float left = line(p-vec2(-2.4,0.)*sc,vec3(-1.,.2,2.3*sc));\n        float right = line(p-vec2(2.4,0.)*sc,vec3(1.,.2,2.3*sc));\n        float bar = box(p+vec2(0.,5.)*sc,vec2(5.,2.25)*sc);\n        left = min(left,right);\n        left = min(left,bar);\n        outer = max(left,outer);\n        r = abs(outer+.5*sc)-.01*sc;\n    } else if (cn==-1.) {\n        float htop = box(p-vec2(4.5,4.)*sc,vec2(7.,11.)*sc);\n        float shrink = box(p-vec2(7.,-9.)*sc,vec2(2.,4.)*sc);\n        outer = max(outer,-htop);\n        outer = max(outer,-shrink);\n        r = abs(outer+.5*sc)-.01*sc;\n    } else if (cn==1.) {\n        outer = squircle(p*vec2(.9,.5),vec3(5.7*sc,1.4,.5));\n        float inner = squircle(p*vec2(1.1,.31),vec3(2.*sc,1.7,.7));\n        float outer2 = squircle((p-vec2(-1.2,2.5)*sc),vec3(5.*sc,1.3,.4));\n        float inner2 = squircle((p-vec2(0.,4.)*sc)*vec2(1.,.5),vec3(1.5*sc,1.7,.7));\n        float cut = box(p-vec2(-4.,-1.)*sc,vec2(4.,3.)*sc);\n        outer = max(outer,-inner);\n        outer = max(outer,-cut);\n        outer = min(outer,outer2);\n        outer = max(outer,-inner2);\n        r = abs(outer+.5*sc)-.01*sc;\n    } else if (cn>1. && cn<5.) {\n        outer = squircle(p*vec2(.9,.5),vec3(5.7*sc,1.4,.5));\n        float inner = squircle(p*vec2(1.1,.31),vec3(2.*sc,1.7,.7));\n        outer = max(outer,-inner);\n        r = abs(outer+.5*sc)-.01*sc;\n    }\n    return r;\n}\n\nvec4 hal( vec2 p, float aa, float mode ) \n{\n    float ref = 0.0;\n    float sc = 0.0033;\n    float outer = abs(box(p-vec2(.0,-1.1),vec2(114.3,349.25)*sc)+3.175*.5*sc)-3.175*.5*sc;\n    float lowerline = box(p-vec2(.0,-1.1-200.025*sc),vec2(114.,3.175*.5)*sc);\n    float woodbox = box(p-vec2(.0,-.86),vec2(114.4,270.0)*sc);\n    vec3 bg = 2.0*vec3(20.,18.,22.)\/255.;\n    float eye = length(p-vec2(.0,-1.1-70.*sc));\n    float lens = abs(eye-.3)-3.175*sc*.5;\n    float rim = min(min(outer,lowerline),lens);\n    float logo = box(p-vec2(.0,-1.1+310.*sc),vec2(92.,18.)*sc);\n    float logo2 = box(p-vec2(.0+48.5*sc,-1.1+310.*sc),vec2(44.75,18.75)*sc);\n    float logofont = 1.0; \n    if (logo<0.) {\n        \/\/ Draw one character of HALs name\n        logofont = halfont(p-vec2(.0,-1.1+310.*sc));        \n    }\n    logo = max(logo,-logo2);\n    \n    float speaker = box(p-vec2(.0,-1.1-273.5*sc),vec2(109.,69.)*sc);\n   \n    float grille = length(mod(p-vec2(.0,3.015)*sc,vec2(5.065,4.015)*sc*2.)-vec2(5.065,4.015)*sc)-.5*sc;\n\n    vec3 eyeglow;\n    if (mode==1.) {\n    \teyeglow = mix(\n        \t\t\tmix(\n        \t\t\tmix(\n        \t\t\tmix( \n                        2.*vec3(1.), \n                        2.*vec3(1.,1.,0.), \n                        clamp(smoothstep(0.0005,.011,eye),0.,1.)\n                    ),\n        \t\t\tvec3(1.,0.,0.),\n        \t\t\tclamp(smoothstep(.011,.020,eye),0.,1.)\n    \t\t\t\t),\n        \t\t\tvec3(.5,.0,.0),\n        \t\t\tclamp(smoothstep(.020,.14,eye),0.,1.)\n    \t\t\t   ),\n        \t\t   vec3(.0),\n        \t\t\tclamp(smoothstep(.14,.35,eye),0.,1.));\n    } else {\n    \teyeglow = mix(\n        \t\t\tmix(\n        \t\t\tmix(\n        \t\t\tmix( \n                        2.*vec3(1.,0.5,0.5), \n                        2.*vec3(.8,0.1,0.1), \n                        clamp(smoothstep(0.0005,.011,eye),0.,1.)\n                    ),\n        \t\t\tvec3(.2,0.,0.),\n        \t\t\tclamp(smoothstep(.011,.020,eye),0.,1.)\n    \t\t\t\t),\n        \t\t\tvec3(.1,.0,.0),\n        \t\t\tclamp(smoothstep(.020,.14,eye),0.,1.)\n    \t\t\t   ),\n        \t\t   vec3(.0),\n        \t\t\tclamp(smoothstep(.14,.35,eye),0.,1.));\n    }\n    \/\/speaker = max(speaker,-grille);\n    \n    vec2 r = (p+vec2(4.,0.))*vec2(39.,107.7676);\n    float dither = abs(fract(r.x) *2.-1.); \/\/ Some texture to hide banding\n    vec3 glow = mix(bg*3.2,bg*1.0,clamp(length((p-vec2(0.,-1.))*vec2(2.,1.)*.5),0.,1.0));\n    vec3 wood = mix(vec3(.08),vec3(.09),dither);\n    wood = mix(eyeglow,wood,smoothstep(.3,.3+aa,eye));\n    wood = mix(vec3(106.,165.,181.)\/255.,wood,smoothstep(0.,aa,logo));\n    wood = mix(vec3(1.),wood,smoothstep(-aa*1.5,aa*1.5,logofont));\n    vec3 back = mix(wood,bg,smoothstep(0.,aa,woodbox));\n    back = mix(vec3(.4),back,smoothstep(0.,aa*1.,speaker));\n    back = mix(vec3(.0),back,smoothstep(-aa*1.,aa*1.,max(speaker,grille)));\n    vec3 col = mix(vec3(.4),back,smoothstep(0.,aa,rim));  \n    if (eye<.24) ref=1.;\n    if (rim<0.) ref=.8;\n    return vec4(col,ref);\n}\n\n\nvec4 world( vec3 p )\n{\n    float d = sdBox(p-vec3(0.),vec3(1.2*5.+10.,1.2*2.+10.,0.1)); \/\/ Panel\n    float d2 = sdBox(p-vec3(0.,1.1,0.12),vec3(0.38,1.16,0.025)); \/\/ HAL\n    float lh = 1.331;\n    float l1 = sdCappedCylinder(p-vec3(0.,lh,0.17),vec2(0.308,.01)); \/\/ HAL lens outer grey cylinder\n    float l2 = sdCappedCylinder(p-vec3(0.,lh,0.19),vec2(0.270,.02)); \/\/ HAL lens inner black cylinder\n    float l3 = length(p-vec3(0.,lh,-.25))-.55; \/\/ HAL lens surface\n    float l4 = sdCappedCylinder(p-vec3(0.,lh,0.19),vec2(0.250,.12)); \/\/ HAL lens inner black cylinder\n    float grille = sdBox(p-vec3(0.,2.01,0.12-.0005*sin(p.y*333.)),vec3(0.347,.225,0.025)); \/\/ HAL\n    d = min(d,min(d2,grille));\n    l1 = min(l1,l2);\n    l1 = min(l1,max(l3,l4));\n    d = min(d,l1);\n    if (d<1e-3) {\n        vec2 sp = vec2(-dot(p,vec3(1.,0.,0.)),-dot(p,vec3(0.,1.,0.)));\n        return vec4(d,1.,sp);\n    } else\n        return vec4(d,vec3(0.));    \n}\n\nvec3 sampleNormal( vec3 p ) {\n    vec3 eps = vec3(1e-3,0.,0.);\n    float dx = world(p+eps).x-world(p-eps).x;\n    float dy = world(p+eps.yxy).x-world(p-eps.yxy).x;\n    float dz = world(p+eps.yyx).x-world(p-eps.yyx).x;\n    return normalize(vec3(dx,dy,dz));\n}\n      \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 sensor = vec3(1.*(fragCoord.xy-iResolution.xy*.5)\/iResolution.x,0.);\n    if (abs(sensor.y)>0.225) { fragColor=vec4(0.); return; } \/\/ 2001 was 2.20 : 1 Aspect Ratio\n    vec3 targetPosition = vec3(1.,0.,0.);\n    vec3 cameraPosition = vec3(2.5,0.5,5.);\n    \/\/vec3 cameraPosition = vec3(3.0+3.*sin(iGlobalTime*.1),1.0,5.+3.0*sin(iGlobalTime*.1));\n    vec3 cameraDirection = normalize(targetPosition-cameraPosition);\n    vec3 up = normalize(vec3(.25,1.,0.));\n    float focalLength = .5; \n    float phase = mod(iGlobalTime,60.);\n    float off = 0.;\n    float scaryhal = 0.;\n    if (phase>45.) {\n    \ttargetPosition = vec3(.0+off,1.33,.0);\n    \tcameraPosition = vec3(.0+off,1.33,.8);\n    \tcameraDirection = normalize(targetPosition-cameraPosition);\n    \tup = normalize(vec3(0.,1.,0.));\n    \tfocalLength = .5;\n        scaryhal = 1.;\n    } else if (phase>30.) {\n    \ttargetPosition = vec3(.0+off,0.,.0);\n    \tcameraPosition = vec3(.0+off,0.,2.);\n    \tcameraDirection = normalize(targetPosition-cameraPosition);\n    \tup = normalize(vec3(0.,1.,0.));\n    \tfocalLength = .5; \n    } else if (phase>15.) {\n    \ttargetPosition = vec3(.0+off,0.,.0);\n    \tcameraPosition = vec3(.0+off,0.,6.);\n    \tcameraDirection = normalize(targetPosition-cameraPosition);\n    \tup = normalize(vec3(0.,1.,0.));\n    \tfocalLength = .5;\n    }\n    vec3 cameraH = normalize(cross(up,cameraDirection));\n    vec3 cameraV = normalize(cross(cameraH,cameraDirection));\n    vec3 cameraVH = cameraV + cameraH;\n    \n    vec3 rayDirection = normalize(focalLength*cameraDirection + sensor.x*cameraH + sensor.y*cameraV);\n    \n    vec3 pos = cameraPosition;\n    float l = 0.0;\n    float d = 1.0;\n    vec4 m;\n    vec3 lightpos = vec3(3.,-6.,6.);\n    vec3 lightarg = vec3(-0.5,1.,0.);\n    for (int i=0;i<100;i++) {\n        if (l>1000.0) continue;\n        if (d<1e-3) continue;\n\t    m = world(pos);\n        d = m.x;\n    \tl += d;\n        pos += rayDirection * d;\n    }    \n    \/\/ Check lighting by marching from surface towards light\n    vec3 ldir = normalize(lightpos-pos);\n    float ldist = length(lightpos-pos);\n    vec3 posl = pos+ldir*.005;\n    float ll = 0.0;\n    float dl = 1.0;\n    vec4 ml;\n    for (int i=0;i<100;i++) {\n        if (ll>ldist) continue;\n        if (dl<1e-3) continue;\n\t    ml = world(posl);\n        dl = ml.x;\n    \tll += dl;\n        posl += ldir * dl;\n    }\n    float shadow = 1.0;\n    if (ll<(ldist*.5)) shadow = 0.0;\n    \n    \/\/ Colour it\n    vec4 alb = vec4(0.0);\n    if (m.y==1.) {\n\t    vec2 muv = mod(m.zw-vec2(1.2,0.),2.4)-vec2(1.2);\n    \tvec2 fuv = floor((m.zw+vec2(1.2,0.)) \/ 2.4);\n        float aa = .0015*l*2000.0\/iResolution.x;\n        if (fuv.x!=0. && fuv.x<3. && fuv.x>-3. && fuv.y<=0. && fuv.y>=-1.) {\n\t        if (fuv.x>0.) fuv.x-=1.;\n            fuv.x += 2.;\n            fuv.y = -fuv.y;\n            float sn = fuv.x+fuv.y*4.;\n            alb = screen(muv,(iGlobalTime*.05+sn*93.16),sn,aa);\n        } else {\n            alb = hal(m.zw,aa,scaryhal);\n        }\n    }\n    l*=0.2;\n    float v = 0.1;\n    vec3 albcol = alb.rgb;\n    if (d<1e-1) {\n\t    vec3 nor = sampleNormal( pos );\n        vec3 ref = reflect( rayDirection, nor );\n\t    vec3 lightDir = normalize(lightpos-pos);\n\t    vec3 lightTargDir = normalize(lightpos-lightarg);\n        float lv = .2+shadow*.8*smoothstep(.98,1.,dot(lightDir,lightTargDir));\n        vec3 refcol = vec3(clamp(textureCube(iChannel0,vec3(-ref.z,ref.x,-ref.y)).r*16.-15.,0.,1.));\n        vec3 refcol2 = vec3(clamp(textureCube(iChannel0,ref.zxy).r,0.,1.));\n    \tif (alb.w>=0.) albcol *= max(lv*dot(nor,lightDir),0.2);\n        else alb.w=0.;\n        if (alb.w==1.) albcol = mix(albcol,albcol+refcol,alb.w);\n        else albcol = mix(albcol,albcol*refcol2,alb.w);\n        \/\/albcol = vec3(shadow);\n    }\n    \n\tfragColor = vec4(albcol,.0);\n}","name":"","description":"","type":"image"},{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Copyright (c) 2015 Andrew Baldwin (baldand)\n\/\/ License = Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) (http:\/\/creativecommons.org\/licenses\/by-sa\/4.0\/)\n\n\/\/ Audio for HAL 9000 - tries to be similar profile to background ship noise of Discovery scenes\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 fat(vec3 p)\n{\n    if (p.z==0.) {\n    float f = 5000.+exp2(15.*rand(p.xy));\n    float a = .00003*5000.\/f*rand(vec2(p.x,p.y+1.));\n    return vec2(f,a);\n    } else if (p.z==1.) {\n    float f = 150.+exp2(8.*rand(p.xy));\n    float a = .0005*150.\/f*rand(vec2(p.x,p.y+1.));\n    return vec2(f,a);\n    }\n}\n\nfloat frame(float framebase, float frametime, float arg) \n{\n    float pi2 = 6.283185307179586476925286766559;\n    float s = 0.0;\n    for (int h=0;h<100;h++) {\n        vec2 fa = fat(vec3(framebase,float(h),arg));\n        s += fa.y*sin(pi2*fract(fa.x*(frametime+framebase)));\n    }\n    return s;\n}\n\nfloat gen(float time,float fps,float ifps,float arg) \n{\n    float framebase = floor(time*fps)*ifps;\n    float frametime = time-framebase;\n    float acc = 0.;\n    acc += 1.*(frame(framebase,frametime,arg)) + mix(frame(framebase-ifps,frametime+ifps,arg),frame(framebase+ifps,frametime-ifps,arg),smoothstep(0.,1.,frametime*fps));\n    return acc;\n}\n\nvec2 mainSound(float time)\n{\n    float fps = 10000.0;\n    float ifps = .0001;\n    float acc = gen(time+10.,10000.,.0001,0.);\n    acc += gen(time+10.,100.,.01,1.);\n    return vec2(acc);\n}","name":"","description":"","type":"sound"}]}}