{"Shader":{"ver":"0.1","info":{"id":"MtjGDV","date":"1432736803","viewed":769,"name":"Maindemoparty logo","username":"XT95","description":"Rest in peace \u200eChristian V Artin ","likes":4,"published":3,"flags":0,"tags":["maindemoparty","massilia","christian","artin","varou"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float box( vec3 p, vec3 s )\n{\n  return length(max(abs(p)-s,0.0))-.1;\n}\nfloat noise(vec3 p) \/\/Thx to Las^Mercury\n{\n\tvec3 i = floor(p);\n\tvec4 a = dot(i, vec3(1., 57., 21.)) + vec4(0., 57., 21., 78.);\n\tvec3 f = cos((p-i)*acos(-1.))*(-.5)+.5;\n\ta = mix(sin(cos(a)*a),sin(cos(1.+a)*(1.+a)), f.x);\n\ta.xy = mix(a.xz, a.yw, f.y);\n\treturn mix(a.x, a.y, f.z);\n}\n\nfloat sphere(vec3 p, vec4 spr)\n{\n\treturn length(spr.xyz-p) - spr.w;\n}\n\nfloat flame(vec3 p)\n{\n\tfloat d = sphere(p*vec3(1.,.5,1.), vec4(3.,2.,.0,1.));\n\treturn d + (noise(p+vec3(.0,-iGlobalTime*4.,.0)) + noise(p*3.)*.5)*.15*(p.y-2.) ;\n}\n\nfloat map( in vec3 p )\n{\n\tp.x -= 17.\/2.;\n\tfloat d = 999999.;\n\tvec3 pp = p-vec3(17.\/2.,0.,0.);\n\tpp.xy = mod(p.xy,vec2(1.))-.5;\n\td = min(d, box(pp,vec3(.3,.3,1.)) );\n\td = max(d, p.x);\n\td = max(d, -p.x-17.);\n\td = max(d, p.y-4.);\n\td = max(d, -p.y);\n\td = max(d, -box(p+vec3(16.5,-3.5,0.), vec3(.4,.4,2.)) );\n\td = max(d, -box(p+vec3(14.5,-3.5,0.), vec3(.4,.4,2.)) );\n\td = max(d, -box(p+vec3(11.5,-3.5,0.), vec3(1.4,.4,2.)) );\n\td = max(d, -box(p+vec3(5.5,-3.5,0.), vec3(2.4,.4,2.)) );\n\td = max(d, -box(p+vec3(0.5,-3.5,0.), vec3(.4,.4,2.)) );\n\td = max(d, -box(p+vec3(15.5,-1.5,0.), vec3(.4,1.4,2.)) );\n\td = max(d, -box(p+vec3(13.5,-1.5,0.), vec3(.4,1.4,2.)) );\n\td = max(d, -box(p+vec3(11.5,-1.5,0.), vec3(.4,1.4,2.)) );\n\td = max(d, -box(p+vec3(6.5,-1.5,0.), vec3(.4,1.4,2.)) );\n\td = max(d, -box(p+vec3(4.5,-1.5,0.), vec3(.4,1.4,2.)) );\n\td = max(d, -box(p+vec3(9.,-.5,0.), vec3(.9,.4,2.)) );\n\td = max(d, -box(p+vec3(9.,-2.5,0.), vec3(.9,.4,2.)) );\n\td = max(d, -box(p+vec3(2.,-1.5,0.), vec3(.9,1.4,3.)) );\n\td = max(d, -box(p+vec3(5.,-2.5,0.), vec3(.9,.4,3.)) );\n\td = min(d, (flame(p+vec3(17.\/2.,0.,0.))));\n\treturn d;\n}\n\nvec3 raymarch(in vec3 org, in vec3 dir)\n{\n\tfloat d = 0.0, glow = 0.0, eps = 0.02;\n\tvec3  p = org;\n\t\n\tfor(int i=0; i<64; i++)\n\t{\n\t\td = map(p) + eps;\n\t\tp += d * dir;\n\t\tif( d<eps )\n\t\t\tbreak;\n\t}\n\treturn p;\n}\nvec3 normal(in vec3 p)\n{\n    vec3 eps = vec3(0.01,0.0,0.0);\n    return normalize(vec3(\n        map(p+eps.xyy)-map(p-eps.xyy),\n        map(p+eps.yxy)-map(p-eps.yxy),\n        map(p+eps.yyx)-map(p-eps.yyx)\n    ));\n}\nfloat ambiantOcclusion( in vec3 p, in vec3 n, in float d)\n{\n    float dlt = 0.1;\n    float oc = 1.0;\n    \n    for(int i=1; i<=6; i++)\n    {\n\t\tfloat dist = abs(map(p+n*dlt));\n\t\tdlt += dist;\n\t\toc += map(p+n*dlt)+dist;\n    }\n    oc \/= 6.;\n    \n    return 1. - exp(-oc*d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 v = -1.0 + 2.0 * fragCoord.xy \/ iResolution.xy;\n\tv.x *= iResolution.x\/iResolution.y;\n\tvec3 col = vec3(0.);\n\tvec3 org = vec3(0.,2.5,8.);\n\tvec3 dir = normalize( vec3( v.xy, -1.5+length(v)*.25 ) );\n\n\n\tvec3 p = raymarch(org,dir);\n\tvec3 n = normal(p);\n\tcol = vec3(0.) ;\n\tfloat f = flame(p);\n\tif(f<.1)\n\t{\n\t\tcol = vec3(1.,.5,.1);\n\t}\n\telse if(map(p)<.1)\n\t{\n\t\tcol += ambiantOcclusion(p,-dir,1.5);\n\t\tcol *= ambiantOcclusion(p,n,1.5);\n\t\tcol += vec3(1.,.5,.1) \/ (.5+pow(f,2.));\n\t}\n\tfragColor = vec4(col*min(iGlobalTime*.25,1.), 1.);\n}","name":"","description":"","type":"image"}]}}