{"Shader":{"ver":"0.1","info":{"id":"ls33Rf","date":"1451293913","viewed":135,"name":"fire cloud","username":"DeMaCia","description":"Perlin Noise simpleness test","likes":2,"published":3,"flags":0,"tags":["perlinnoise"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\nfloat randomNoise(vec2 p)\n{\n\treturn fract(sin(p.x * (12.9898) + p.y * (4.1414)) * 43758.5453);\n}\n\n\nfloat smoothNoise(vec2 p)\n{\/\/cross filter \n    \n  vec2 nn = vec2(p.x, p.y+1.);\n  vec2 ee = vec2(p.x+1., p.y);\n  vec2 ss = vec2(p.x, p.y-1.);\n  vec2 ww = vec2(p.x-1., p.y);\n  vec2 cc = vec2(p.x, p.y);\n\n  float sum = 0.;\n  sum += randomNoise(nn)\/8.;\n  sum += randomNoise(ee)\/8.;\n  sum += randomNoise(ss)\/8.;\n  sum += randomNoise(ww)\/8.;\n  sum += randomNoise(cc)\/2.;\n\n  return sum;\n}\n\n\nfloat BINoise(vec2 p)\n{\/\/Bilinear interpolation\n    \n    float tiles = 64.;\n    \n\tvec2 base = floor(p\/tiles);\n    p = fract(p\/tiles);\n    \n    vec2 f = smoothstep(0., 1., p);\n    \n\tfloat q11 = smoothNoise(base);\n\tfloat q12 = smoothNoise(vec2(base.x, base.y+1.));\n\tfloat q21 = smoothNoise(vec2(base.x+1., base.y));\n\tfloat q22 = smoothNoise(vec2(base.x+1., base.y+1.));\n\n\tfloat r1 = mix(q11, q21, f.x);\n\tfloat r2 = mix(q12, q22, f.x);\n\n\treturn mix (r1, r2, f.y);\n} \n\n\nfloat perlinNoise(vec2 p)\n {\n\tfloat total = 0., amplitude = 1.;\n\tfor (int i = 0; i < 6; i++)\n\t{\n\t\ttotal += BINoise(p) * amplitude; \n        p *= 2.;\n\t\tamplitude *= .5;\n\t}\n\treturn total;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    \n    float speed = 4.;\n    \n    float t = iGlobalTime * speed;\n        \n    vec2 d1 = vec2(t * 1.,t * .5);\n    vec2 d2 = vec2(t * 2.,t * -4.);\n    vec2 d3 = vec2(t * -6.,t * 8.);\n    \n\tfloat z = perlinNoise(fragCoord - d1);\n    float x = perlinNoise(fragCoord + d2);\n    float c = perlinNoise(fragCoord - d3);\n    \n    \n\tvec3 color1 = vec3(.5, .5, .0);\n\tvec3 color2 = vec3(.8, .8, .0);\n\tvec3 color3 = vec3(.0, .0, .0);\n\tvec3 color4 = vec3(.2, .2, .2);\n\tvec3 color5 = vec3(.0, .0, .6);\n\tvec3 color6 = vec3(.0, .6, .0);\n    \n\tfragColor = vec4(mix(color1, color2, z) +\n                     mix(color3, color4, x) -\n                     mix(color5, color6, c), \n                     1.);\n}","name":"","description":"","type":"image"}]}}