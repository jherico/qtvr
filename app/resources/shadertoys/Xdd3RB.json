{"Shader":{"ver":"0.1","info":{"id":"Xdd3RB","date":"1450484455","viewed":49,"name":"Pattern 1","username":"aiekick","description":" Based on the pattern used in https:\/\/www.shadertoy.com\/view\/4sfSzf from nimitz","likes":0,"published":3,"flags":0,"tags":["pattern","1"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\/\/ Tuned via XShade (http:\/\/www.funparadigm.com\/xshade\/)\n\n\/\/ Based on the pattern used in https:\/\/www.shadertoy.com\/view\/4sfSzf from nimitz\n\nfloat uZoom = 10.;\nfloat uSlider = 0.;\nfloat uColOffset = 0.5;\n#define uTime iGlobalTime\nvec3 uSlider1 = vec3(1.8,1,2);\nfloat uCellZoom = 0.5;\nfloat uGLow = 1.5;\nvec3 uColor2 = vec3(0.2,0.27,0.4);\n#define uScreenSize iResolution.xy\n\nvoid mainImage( out vec4 f, in vec2 g)\n{\n\tvec2 uv = uZoom * (2.*g - uScreenSize)\/uScreenSize.y;\n\t\n\tuv.y += floor(uv.x + uSlider) * (uColOffset + sin(floor(uv.x) * 0.2 + uTime) * 0.2);\n\t\n\tuv = abs(fract(uv)-0.5);\n\t\n\tfloat x = uv.x*uSlider1.x;\n\tfloat y = uv.y*uSlider1.y;\n\tfloat z = uv.y*uSlider1.z;\n\t\n\tfloat pattern = abs( max(x + y, z) - uCellZoom) * uGLow;\n\t\n\tf.rgb = clamp(uColor2\/pattern, 0.2,1.2) - 0.2;\n}","name":"","description":"","type":"image"}]}}