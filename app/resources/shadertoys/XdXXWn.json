{"Shader":{"ver":"0.1","info":{"id":"XdXXWn","date":"1398721903","viewed":788,"name":"rice on checker illusion","username":"FabriceNeyret2","description":"mouse.x: zoom<br\/>mouse.y: grey level of dots","likes":4,"published":3,"flags":0,"tags":["illusion"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float t = iGlobalTime;\n\nfloat rnd(vec2 uv) { return fract(sin(5423.1*uv.x-65.543*uv.y)*1e5); }\nfloat rnd0(vec2 uv) { return (rnd(uv)>.5) ? 1. : 0. ; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy -.5*iResolution.xy)\/ ( floor(iResolution.y\/64.)*64.);\n\n\n\tvec2 mouse = iMouse.xy \/ iResolution.xy;\n\tif (iMouse.z<=0.) {\n\t\tmouse.x = .5*(1.+cos(.1*t));\n\t\tmouse.y = .5*(1.+cos(t));\n\t}\n\t\n\tuv *= pow(2.,2.-6.*mouse.x);\n#define REPEAT (7.\/8.)\n\tvec2 vrep = uv\/REPEAT +.4;\n\tuv = mod(vrep,1.)*REPEAT -.4 ;  \t\t \/\/ repeat the macro pattern\n\tfloat irep = mod( floor(vrep.x)+floor(vrep.y) ,2.);\n\t\n\tvec2 v = floor(uv*16.);\t\n\tfloat fv = mod(v.x+v.y,2.);\t\t\t\t\t \t\t\/\/ large checker\t\n\tvec2 sv = mod(floor(uv*16.*4.-.5),2.);\t\t \t\t\/\/ for small squares\n\tfloat fsv = sv.x+sv.y + 1.-sv.x*sv.y;  \t\t \t\t\/\/ eliminates odd rows and cols\n\tvec2 m = floor(uv*16.*2.);\t\t\t\t\t \t\t\/\/ for mask\n\tfloat fm = m.x+m.y;\t\t\t\t\t\t\t \t\t\/\/ half checker\n\tfm += ((uv.x-1.\/32.)*(uv.y-1.\/32.)<0.) ? 1. : 0.;   \/\/ translates by 1 row\n\tfm += irep;\n\n\tt = mod(floor(iGlobalTime),2.);\n\tfm += t;\n\t\/\/ fm += rnd0(m+t);\n\t\t\n\tif (length(v)>6.25) fm = 0.;\n  \n\tfsv = mod(fsv,2.)*mod(fm,2.)*mouse.y;\n\t\n#if 0\n\tfv = mod(fv+fsv,2.); \n#else\n\tfv =  (fv > .5) ? 1.-fsv : fsv;\n#endif\n\n\tfragColor = vec4(fv);\n}","name":"","description":"","type":"image"}]}}