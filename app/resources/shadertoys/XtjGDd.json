{"Shader":{"ver":"0.1","info":{"id":"XtjGDd","date":"1433690808","viewed":801,"name":"Cheby'd Menger","username":"eiffie","description":"Making sure these weird rotations work with Ray-Marching before I spend time trying to do Squircle Rotation.","likes":10,"published":3,"flags":8,"tags":["rotation","chebyshev"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define Pi 4.0\nfloat Cos(float a){return clamp(abs(mod(a,2.0*Pi)-Pi)-Pi\/2.0,-1.0,1.0);}\nfloat Sin(float a){return Cos(a-Pi\/2.0);}\nvec2 CosSin(float a){return vec2(Cos(a),Sin(a));}\nfloat Length(vec2 p){return max(abs(p.x),abs(p.y));}\/\/==(x^inf+y^inf)^(1\/inf)\nfloat Length(vec3 p){return max(abs(p.x),max(abs(p.y),abs(p.z)));}\nfloat Atan(vec2 p){\n\tif(p.y==0.0)return (p.x>0.0?0.0:4.0);\n\tfloat a=p.x\/p.y;\n\tif(abs(a)<1.0){\n\t\tif(p.y>0.0)return 2.0-a;\n\t\telse return 6.0-a;\n\t}else {\n\t\ta=p.y\/p.x;\n\t\tif(p.x>0.0)return mod(a,8.0);\n\t\telse return 4.0+a;\n\t}\n}\nvec2 Rotate(vec2 p,float a){return CosSin(Atan(p)+a)*Length(p);}\n\nconst int iters=4;\nfloat psni=pow(3.0,-float(iters)),tym=iGlobalTime;\nfloat DE(in vec3 p){\/\/menger with chebyshev rotation\n\tp.xy=Rotate(p.xy,tym);\n\t\/\/p.xz=Rotate(p.xz,tym);\/\/for more weirdness\n\tfor (int n = 0; n < iters; n++) {\n\t\tp = abs(p);\n\t\tif (p.x<p.y)p.xy = p.yx;\n\t\tif (p.x<p.z)p.xz = p.zx;\n\t\tif (p.y<p.z)p.yz = p.zy;\n\t\tp = p*3.0 - 2.0;\n\t\tif(p.z<-1.0)p.z+=2.0;\n\t}\n\treturn (Length(p)-1.0)*psni*0.707;\/\/.707 compensates for the square rotation\n}\n\nvec3 scene(vec3 ro, vec3 rd){\n\tvec3 col=(0.5+0.5*rd.y)*vec3(0.9,0.9,1.0);\n\tfloat t=0.0,d=0.001,dL;\n\tfor(int i=0;i<64;i++){\n\t\tdL=d;\n\t\tt+=d=DE(ro+rd*t);\n\t\tif(d<0.001 || t>10.0)break;\n\t}\n\tif(d<0.4){\n\t\tcol=clamp((1.0-t\/(1.0+length(ro))+0.64*d\/dL)*(vec3(1.0,0.9,0.9)+ro*0.05+rd*0.2),0.0,1.0);\t\t\n\t}\n\treturn col;\n}\n\nmat3 lookat(vec3 fw){\n\tfw=normalize(fw);vec3 rt=normalize(cross(fw,vec3(0.0,1.0,0.0)));return mat3(rt,cross(rt,fw),fw);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv=(2.0*fragCoord.xy-iResolution.xy)\/iResolution.y;\n\tvec3 ro=vec3(max(-0.1+abs(sin(tym))*0.1,cos(tym)),cos(tym*0.3),sin(tym))*3.0;\n\tvec3 rd=lookat(-ro)*normalize(vec3(uv,2.0));\n\tvec3 col=scene(ro,rd);\/\/eye,normalize(dir));\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"},{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define wav cosine\n#define TAU 6.283\n#define bps 8.0\nfloat nofs(float n){\/\/the song's \"random\" ring\n    n=mod(n,8.0);\n    if(n<1.0)return 0.0;\n    if(n<2.0)return 5.0;\n    if(n<3.0)return 4.0;\n    if(n<4.0)return 3.0;\n    if(n<5.0)return 2.0;\n    if(n<6.0)return 1.0;\n    if(n<7.0)return 5.0;\n    return 0.0;\n}\n\nfloat scale(float note){\/\/throws out dissonant tones\n\tfloat n2=mod(note,12.0);\n\t\/\/if((n2==1.0)||(n2==3.0)||(n2==6.0)||(n2==8.0)||(n2==10.0))note=-100.0;\/\/major\n\t\/\/if((n2==1.0)||(n2==4.0)||(n2==6.0)||(n2==9.0)||(n2==11.0))note=-100.0;\/\/minor\n\tif((n2==1.0)||(n2==4.0)||(n2==5.0)||(n2==9.0)||(n2==10.0))note=-100.0;\/\/hungarian minor\n\t\/\/if(note>96)note=96.0+n2;\n\treturn note;\n}\nfloat ntof(float note){\/\/note frequencies from wikipedia\n\tif(note<12.0)return 0.0;\n\tfloat octave=floor((note+0.5)\/12.0)-5.0;\n\tnote=mod(note,12.0);\n\tfloat nt=493.88;\/\/b\n    \tif(note<0.5)nt=261.63;\/\/c\n\telse if(note<1.5)nt=277.18;\/\/c#\n\telse if(note<2.5)nt=293.66;\/\/d\n    \telse if(note<3.5)nt=311.13;\/\/d#\n    \telse if(note<4.5)nt=329.63;\/\/e\n    \telse if(note<5.5)nt=349.23;\/\/f\n    \telse if(note<6.5)nt=369.99;\/\/f#\n    \telse if(note<7.5)nt=392.0;\/\/g\n    \telse if(note<8.5)nt=415.30;\/\/g#\n    \telse if(note<9.5)nt=440.0;\/\/a\n    \telse if(note<10.5)nt=466.16;\/\/a#\n\treturn nt*pow(2.0,octave);\n}\n\n\/\/ note number to frequency  from https:\/\/www.shadertoy.com\/view\/ldfSW2\n\/\/float ntof(float n){return (n>0.0)?440.0 * pow(2.0, (n - 67.0) \/ 12.0):0.0;}\n\nvec2 bx_cos(vec2 t){return clamp(abs(mod(8.0*t,8.0)-4.0)-2.0,-1.0,1.0);}\nvec2 cosine(vec2 t){return cos(TAU*t);}\nvec2 sine(vec2 t){return sin(TAU*t);}\nvec2 saw(vec2 t){return 2.0*(fract(t)-0.5);}\nvec2 ssaw(vec2 t){return 4.0*(abs(fract(t)-0.5)-0.25);}\nvec2 squar(vec2 t){return sign(fract(t)-0.5);}\n\nfloat I(float tf, float c, float s){\/\/ taken from jnorberg https:\/\/www.shadertoy.com\/view\/lt2GRy\n\tfloat wf=c*24.0;\/\/c is number of harmonics to simulate, s suppresses harmonics\n\tvec2 w=vec2(0.125,1.125)+vec2(floor(wf));w*=2.0;\n\tfloat p=fract(tf),sw=1.0-2.0*p,ip=1.0-p;\n\tvec2 sinc=-wav(w*p)\/(1.0+s*p)+wav(w*ip)\/(1.0+s*ip);\n\treturn (sw+mix(sinc.x,sinc.y,fract(wf)))*0.5;\n}\nvec2 inst(float n,float t,float bt,float pan,int i){\n\tfloat f=ntof(scale(n)),c=1.0,s=0.9,fo=1.0,m=0.0;\/\/fo=falloff,m=modulation speed\n\tif(f<12.0)return vec2(0.0);\n\tif(i==0){c=0.25-0.03125*bt;fo=0.75;}\n\telse if(i==1){c=0.2-bt*0.2;fo=0.5;m=2.0*TAU;}\n\telse if(i==2){c=bt*0.1;s=0.3;}\n\telse if(i==3){c=0.1-0.2*bt;}\n\telse if(i==4){c=0.01;s=0.01;fo=0.125;}\n\telse {c=40.0-bt*40.0;fo=6.0;}\n\tfloat a=I(f*t,c,s)*cos(m*bt);\n\ta*=exp(-bt*fo)*60.0\/n;\n\treturn vec2(a*(1.0-pan),a*pan);\n}\nvec2 inst2(float nn,float no,float of,float t,float bt,float pan,int i){\n\treturn inst(nn+of,t,bt,pan,i)+inst(no+of,t,bt+1.0,pan,i);\/\/plays new note and tail of last note\n}\n\nvec2 mainSound(float time)\n{\n\tfloat tim=time*bps;\n\tfloat b=floor(tim);\n\tfloat t0=fract(tim),t1=mod(tim,2.0)*0.5,t2=mod(tim,4.0)*0.25;\n\tfloat n2=nofs(b*0.0625)+nofs(b*0.125)+nofs(b*0.25);\n\tfloat n1=n2+nofs(b*0.5),n0=n1+nofs(b);\n\tb-=1.0;\/\/go back in time to finish old notes - clunky\n\tfloat n5=nofs(b*0.0625)+nofs(b*0.125)+nofs(b*0.25);\n\tfloat n4=n5+nofs(b*0.5),n3=n4+nofs(b);\n\tb-=1.0;\n\tn5=nofs(b*0.0625)+nofs(b*0.125)+nofs(b*0.25);\n\tn4=n5+nofs(b*0.5);\n\tb-=2.0;\n\tn5=nofs(b*0.0625)+nofs(b*0.125)+nofs(b*0.25);\n\tvec2 a0=inst2(n0,n3,48.0,time,t0,0.5,0);\n\tvec2 a1=inst2(n1,n4,60.0,time,t1,0.8,1);\n\tvec2 a2=inst2(n2,n5,48.0,time,t2,0.2,2);\n\tvec2 a1h=inst(n1+9.0,time,t1,0.6,3);\n\tvec2 a2h=inst2(n2,n5,43.0,time,t2,0.4,4);\n\tvec2 a1hb=inst(n0+64.0,time,t0,0.1,5);\n\tvec2 v=0.33*(a0+a1+a2+a1h+a2h+0.75*a1hb);\n\treturn clamp(v,-1.0,1.0);\n}\n","name":"","description":"","type":"sound"}]}}