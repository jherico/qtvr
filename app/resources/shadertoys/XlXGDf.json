{"Shader":{"ver":"0.1","info":{"id":"XlXGDf","date":"1425520235","viewed":725,"name":"Matrix Tunnel","username":"hunter","description":"orginal by: Iain Melvin ( https:\/\/www.shadertoy.com\/view\/4dfSRS )","likes":2,"published":3,"flags":0,"tags":["2d","audio"],"hasliked":0},"renderpass":[{"inputs":[{"id":13,"src":"\/presets\/mzk00.mp3","ctype":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ \n\/\/ orginal by: Iain Melvin ( https:\/\/www.shadertoy.com\/view\/4dfSRS )\n\/\/\n\n#define PI 3.14159\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.st \/ iResolution.xy;\n\tuv = abs( 2.0 * ( uv - 0.5 ) );\n\n\tfloat theta = 1.0 * ( 1.0 \/ ( PI \/ 2.0 ) ) * atan( uv.x, uv.y );\n\tfloat r = length( uv );\n\tfloat a = 0.01 - r;\n\tuv = vec2( theta, r );\n\n\tvec4 t1 = texture2D( iChannel0, vec2( uv[0], 0.9 ) );\n\tvec4 t2 = texture2D( iChannel0, vec2( uv[1], 0.9 ) );\n\tfloat y = t1[0] * t2[0] * a * 15.5;\n\tfragColor = vec4( sin( y * PI ), sin(y * PI ), sin( y * PI ), 1.0 );\n}","name":"","description":"","type":"image"}]}}