{"Shader":{"ver":"0.1","info":{"id":"4dcGDf","date":"1452394763","viewed":167,"name":"Pixel Sorting (X-Y Interleave)","username":"cornusammonis","description":"Pixel sorting (by color magnitude) alternating between X and Y axes.","likes":7,"published":3,"flags":32,"tags":["pixel","feedback","sorting","multipass"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tfragColor = texture2D(iChannel0, uv);\n}","name":"","description":"","type":"image"},{"inputs":[{"id":8,"src":"\/presets\/tex07.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec2 texel = 1. \/ iResolution.xy;\n    \n    float step_x = texel.x;\n    float step_y = texel.y;\n    vec2 n  = vec2(0.0, step_y);\n    vec2 s  = vec2(0.0, -step_y);\n    vec2 e  = vec2(-step_x, 0.0);\n    vec2 w  = vec2(step_x, 0.0);\n\n    vec4 im =    texture2D(iChannel0, uv);\n    vec4 im_n =  texture2D(iChannel0, uv+n);\n    vec4 im_s =  texture2D(iChannel0, uv+s);\n    vec4 im_e =  texture2D(iChannel0, uv+e);\n    vec4 im_w =  texture2D(iChannel0, uv+w);\n    \n    float len = length(im);\n    float len_n = length(im_n);\n    float len_s = length(im_s);\n    float len_e = length(im_e);\n    float len_w = length(im_w);\n    \n    if(int(mod(float(iFrame), 4.0)) < 2) {\n        if(int(mod(float(iFrame) + fragCoord.y, 2.0)) == 0) {\n            if ((len_s > len)) { \n                im = im_s;    \n             }\n        } else {\n            if ((len_n < len)) { \n                im = im_n;    \n            }   \n        }\n    } else {\n        if(int(mod(float(iFrame) + fragCoord.x, 2.0)) == 0) {\n            if ((len_w > len)) { \n                im = im_w;    \n            }\n        } else {\n            if ((len_e < len)) { \n                im = im_e;    \n            }   \n        }\n    }\n    \n    \/\/ initialize with image\n    if(iFrame<10) {\n        fragColor = texture2D(iChannel1, uv);\n    } else {\n        fragColor = im;\n    }\n    \n}","name":"","description":"","type":"buffer"}]}}