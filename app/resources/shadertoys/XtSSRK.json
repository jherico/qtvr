{"Shader":{"ver":"0.1","info":{"id":"XtSSRK","date":"1444751222","viewed":665,"name":"Another Cloudy Terrain","username":"aiekick","description":"Based on the <a href=\"https:\/\/www.shadertoy.com\/view\/MljXDw\"  class=\"regular\" target=\"_blank\">Cloudy Spikeball<\/a> shader from duke<br\/>and use the voronesque from shane<br\/>use mouse axis X to translate the cam horizontally<br\/>this shader use the code of my shader Subo Glacius","likes":9,"published":3,"flags":0,"tags":["3d","raymarching","terrain","cloud","cloudy","voronesque"],"hasliked":0},"renderpass":[{"inputs":[{"id":8,"src":"\/presets\/tex07.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":30,"src":"\/presets\/tex16.png","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2015 (twitter:@aiekick)\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n    \n\/* \nBased on the Cloudy Spikeball shader from duke https:\/\/www.shadertoy.com\/view\/MljXDw \nand use the voronesque from shane\nuse mouse axis X to translate the cam horizontally\nthis shader use the code of my shader Subo Glacius\n*\/\n\nconst vec2 RMPrec = vec2(.2, 0.01); \nconst vec2 DPrec = vec2(0.01, 50.); \n\nconst vec3 IceColor = vec3(0,.38,.47);\nconst vec3 DeepColor = vec3(0,.02,.15);\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/ FROM Shader Cloudy spikeball from duke : https:\/\/www.shadertoy.com\/view\/MljXDw\nfloat pn( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = texture2D(iChannel1, (uv+ 0.5)\/256.0, -100.0 ).yx;\n\trg = vec2(rg.x + rg.y)\/2.;\n\treturn -1.0+2.4*mix( rg.x, rg.y, f.z );\n}\n\nfloat fpn(vec3 p) \n{\n\treturn pn(p*.06125)*.5 + pn(p*.125)*.25 + pn(p*.25)*.125;\n}\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\nfloat disp(vec3 p)\n{\n    p *= 50.;\n    p.x+=iGlobalTime*50.;\n    return fpn(p) * .5;\n}\n\n\/\/ by shane from https:\/\/www.shadertoy.com\/view\/4lSXzh\nfloat Voronesque( in vec3 p )\n{\n    vec3 i  = floor(p + dot(p, vec3(0.333333)) );  p -= i - dot(i, vec3(0.166666)) ;\n    vec3 i1 = step(0., p-p.yzx), i2 = max(i1, 1.0-i1.zxy); i1 = min(i1, 1.0-i1.zxy);    \n    vec3 p1 = p - i1 + 0.166666, p2 = p - i2 + 0.333333, p3 = p - 0.5;\n    vec3 rnd = vec3(7, 157, 113); \n    vec4 v = max(0.5 - vec4(dot(p, p), dot(p1, p1), dot(p2, p2), dot(p3, p3)), 0.);\n    vec4 d = vec4( dot(i, rnd), dot(i + i1, rnd), dot(i + i2, rnd), dot(i + 1., rnd) ); \n    d = fract(sin(d)*262144.)*v*2.; \n    v.x = max(d.x, d.y), v.y = max(d.z, d.w); \n    return max(v.x, v.y);\n}\n\nvec2 map(vec3 p)\n{\n\tfloat voro = Voronesque(p);\n\tfloat tex = texture2D(iChannel0, p.xz\/200.).r*12.;\n\treturn vec2(p.y - tex + voro + disp(p), 0.);\n}\n\nvec3 cam(vec2 uv, vec3 ro, vec3 cu, vec3 cv)\n{\n\tvec3 rov = normalize(cv-ro);\n    vec3 u =  normalize(cross(cu, rov));\n    vec3 v =  normalize(cross(rov, u));\n    vec3 rd = normalize(rov + u*uv.x + v*uv.y);\n    return rd;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 si = iResolution.xy.xy;\n\tvec2 g = fragCoord.xy;\n   \tvec2 uv = (g+g-si)\/min(si.x, si.y);\n    vec3 cu = vec3(0,1,0);\n    vec3 ro = vec3(-11., 10., iGlobalTime);\n\tvec3 cv = vec3(0,0,1); \n    \n    vec4 f = vec4(0);\n\t\n    ro.x = -20.*iMouse.x\/si.x;\n    \n   \tfloat vy = map(ro + cv).x;\/\/ cam h\n    \n    \/\/ smooth cam path\n\tconst int smoothIter = 8;\n\tfor (int i=0;i<smoothIter;i++)\n\tvy += map(ro + cv * float (i)).x;\n    vy \/= float(smoothIter);\n    \n\tro.y -= vy * .78;\n    \n    vec3 rd = cam(uv, ro, cu, ro + cv);\n\t\n    vec3 d = vec3(0.);\n    vec3 p = ro+rd*d.x;\n\tfloat sgn = sign(map(p).x);\n    vec2 s = vec2(DPrec.y,0.);\n\t\n\tfloat h = 0.05;\n\tfloat td = 0.;\n\tfloat w = 0.;\n\tvec3 tc = IceColor;\n\t\n    for(int i=0;i<100;i++)\n\t{      \n\t\tif(s.x<DPrec.x||s.x>DPrec.y||td>.95) break;\n\t\t\n        s = map(p);\n\t\ts.x *= (s.x>0.001?0.1:.2);\n\t\n\t\tif (s.x<h)\n\t\t{\n\t\t\tw = (1.-td) * (h-s.x);\n\t\t\ttc+=w;\n\t\t\ttd+=w;\n\t\t}\t\n\t\t\n\t\ttd+=0.005;\n        s.x = max(s.x, .03);\n        \n\t\td.x += s.x;\n        p = ro+rd*d.x;\n   \t}\n\n\tf.rgb = tc;\n\t\n\tf = mix( f, vec4(DeepColor, 1.), 1.2 - exp(-0.01*d.x*d.x) ); \/\/ fog\n    \n\tfragColor = f;\n}\n","name":"","description":"","type":"image"}]}}