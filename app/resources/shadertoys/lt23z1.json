{"Shader":{"ver":"0.1","info":{"id":"lt23z1","date":"1427066479","viewed":688,"name":"ngWaves0D","username":"netgrind","description":"plasm","likes":1,"published":3,"flags":0,"tags":["waves","plasma","netgrind"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define PI 3.1415\n\nvec4 hue(vec4 color, float shift) {\n\n    const vec4  kRGBToYPrime = vec4 (0.299, 0.587, 0.114, 0.0);\n    const vec4  kRGBToI     = vec4 (0.596, -0.275, -0.321, 0.0);\n    const vec4  kRGBToQ     = vec4 (0.212, -0.523, 0.311, 0.0);\n\n    const vec4  kYIQToR   = vec4 (1.0, 0.956, 0.621, 0.0);\n    const vec4  kYIQToG   = vec4 (1.0, -0.272, -0.647, 0.0);\n    const vec4  kYIQToB   = vec4 (1.0, -1.107, 1.704, 0.0);\n\n    \/\/ Convert to YIQ\n    float   YPrime  = dot (color, kRGBToYPrime);\n    float   I      = dot (color, kRGBToI);\n    float   Q      = dot (color, kRGBToQ);\n\n    \/\/ Calculate the hue and chroma\n    float   hue     = atan (Q, I);\n    float   chroma  = sqrt (I * I + Q * Q);\n\n    \/\/ Make the user's adjustments\n    hue += shift;\n\n    \/\/ Convert back to YIQ\n    Q = chroma * sin (hue);\n    I = chroma * cos (hue);\n\n    \/\/ Convert back to RGB\n    vec4    yIQ   = vec4 (YPrime, I, Q, 0.0);\n    color.r = dot (yIQ, kYIQToR);\n    color.g = dot (yIQ, kYIQToG);\n    color.b = dot (yIQ, kYIQToB);\n\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float i = iGlobalTime;\n    float scale = 4.0;\n\tvec2 uv = fragCoord.xy \/ iResolution.yy*scale-scale*.5;\n    vec4 c = vec4(1.0);\n    float a = atan(uv.y,uv.x);\n    mat2 m = mat2(sin(a+PI*.75),cos(a+sin(i*.2)-1.),-sin(a+PI),cos(a));\n    uv*=m;   \n    \n    float d = length(uv);    \n    a+=+sin(d*4.-i*2.)*.4;\n    a+= (iMouse.y\/iResolution.y)*5.;\n    d+= sin(a*6.0+i)*d;\n    \n    c.g = mod(d*.5-i,1.0);\n    c.g -= mod(c.g,.5);\n    c.r = mod(a\/PI*6.0,1.0);\n    c.r -= mod(c.r,.5);\n    c.b = length(c.rg);\n    c.rgb +=.5;\n    c.rgb = mix(vec3(0.), c.rgb, clamp(d+sin(a*4.0+i)*.1-.3,0.0,1.0));\n\tfragColor = hue(c,2.0+iMouse.x*.01);\n}","name":"","description":"","type":"image"}]}}