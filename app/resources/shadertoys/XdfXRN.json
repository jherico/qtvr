{"Shader":{"ver":"0.1","info":{"id":"XdfXRN","date":"1427151674","viewed":795,"name":"Tether: Blur Effect","username":"jonobr1","description":"http:\/\/tether.plaid.co.uk\/ is an interactive web application where the track is accompanied by a series of graphic shapes that gradually evolve as the music progresses. This is one effect that is composited on top of the 2D visualization.","likes":0,"published":3,"flags":0,"tags":["gradient","metaball","vignette","smooth"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/**\n * @author jonobr1 \/ http:\/\/jonobr1.com\n * https:\/\/creativecommons.org\/publicdomain\/zero\/1.0\/\n *\/\n\nfloat noise(vec2 x) {\n\treturn sin(1.5 * x.x) * sin(1.5 * x.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\t\n\n\t\/\/ time \/ speed\n\tfloat time = iGlobalTime \/ 2.0;\n\t\n\tfloat c = cos(time), s = sin(time);\t\n\tvec2 metaballs[4];\n\n\tvec4 gray = vec4(0.1, 0.1, 0.1, 1.0);\n\t\n\tvec4 sum = vec4(0.0);\n\tfloat radius = iResolution.y * 3.0;\n\t\n\t\/\/ TODO: Create uniforms from this\n\tmetaballs[0] = vec2(c * 200. + 300., s * 150. + 200.);\n\tmetaballs[1] = vec2(c * 250. + 350., sin(time * 0.25) * 100. + 200.);\n\tmetaballs[2] = vec2(cos(time * 0.33) * 300. + 350., sin(time * 1.5) * 150. + 200.);\n\tmetaballs[3] = vec2(s * 200. + 300., c * 150. + 200.);\t\n\n\t\/\/ Add all the metaball data up\n\tfor (int i = 0; i < 4; i++) {\n\t\tsum += mix(sum, gray, radius \/ distance(fragCoord.xy, metaballs[i]));\n\t}\n\n\t\/\/ Smooth out contrasts in metaballs\n\tfloat t = (sum.r + sum.g + sum.b) \/ 3.0;\n\tsum = mix(gray, sum, t);\n\tsum = 1.0 - pow(sum, vec4(0.1));\n\t\n\t\/\/ Add Vignette\n\tvec4 vignette = vec4(0.0);\n\tvignette.a = clamp(1.0 - pow((iResolution.y \/ 2.0) \/ (distance(fragCoord.xy, iResolution.xy \/ 2.0)), 0.33), 0., 1.);\n\n\t\/\/ Add Noise\n\/\/\tsum = vec4(mix(sum.rgb, vignette.rgb, vignette.a), 1.0);\n\/\/\tsum *= noise(fragCoord.xy);\n\t\n\tfragColor = sum;\n\n}","name":"","description":"","type":"image"}]}}