{"Shader":{"ver":"0.1","info":{"id":"4l23Rw","date":"1427666879","viewed":793,"name":"ngWaves0F","username":"netgrind","description":"subsystem rainbow","likes":5,"published":3,"flags":0,"tags":["waves","plasma","netgrind","arch"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float compute(vec2 p, float i){\n    float a = atan(p.y,p.x);\n    float l = length(p);\n    float d = mod(l-i*.5,1.);\n    d-=.5;\n    d = abs(d);\n    d-=sin(d)*.05+.1;\n    d = abs(d);    \n    d\/=sin(a*12.+sin(l*l+i*.3)*10.)+2.;    \n    return 1.0-smoothstep(0.,.05, d\/max(.15,p.y));    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float i=  iGlobalTime*.75;\n    vec4 c = vec4(1.0);\n\tvec2 uv = fragCoord.xy \/ iResolution.xx*2.-1.;\n    uv.y += 1.;\n    \n    float l = length(uv);\n    float a = atan(uv.y,uv.x);\n    float deg = sin(i)*2.+8.;\n    float j = sin(i)*.3;\n    float d = sin(i*3.1415)*.03;\n    uv*=mat2(sin(a*deg+j-deg)*l,cos(a*deg-deg)*l,-cos(a*deg+j-deg)*l,sin(a*deg-deg)*l);\n    \n    c.r = compute(uv,i);\n    uv.y-=d;\n    c.g = compute(uv,i);\n\tuv.y+=d*2.;\n    c.b = compute(uv,i);\n    \n\tfragColor = c;\n}","name":"","description":"","type":"image"}]}}