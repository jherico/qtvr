{"Shader":{"ver":"0.1","info":{"id":"4tBSWd","date":"1447170108","viewed":412,"name":"star field 2 ","username":"FabriceNeyret2","description":"Test for shorter starfield. This one is based on texture advection.<br\/>I'm sure it's possible to do nicer + shorter ;-)","likes":3,"published":3,"flags":0,"tags":["texture","advection","starfield","short"],"hasliked":0},"renderpass":[{"inputs":[{"id":30,"src":"\/presets\/tex16.png","ctype":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Test for shorter starfield. \n\/\/ This one is based on texture advection and image-based stars.\n\/\/ see also https:\/\/www.shadertoy.com\/results?query=starfield&sort=newest\n\n\nfloat D=8., Z=3.;               \/\/ D: duration of advection layers, Z: zoom factor\n\n#define M(U,t) 1.3*length( texture2D(iChannel0, U\/exp2(t) ) - .5 )\n                                \/\/  variant: U\/exp2(t)+P.x, to randomise more the layers\n    \nvoid mainImage( out vec4 o,  vec2 U )\n{\n    o = vec4(0.0);\n    U = U \/ iResolution.xy - .5;\n\n    \/\/ --- prepare the timings and weightings of the 3  texture layers\n\n    vec3 P = vec3(-1,0,1)\/3., T,\n         t = fract( iGlobalTime\/D + P +.5 )-.5,  \/\/ layer time\n         w = .5+.5*cos(6.28*t);                  \/\/ layer weight\n    t = t*D+Z;  \n    \n    \/\/ --- prepare the 3 texture layers\n\n    T.x = M(U,t.x),  T.y = M(-U,t.y),  T.z = M(U.yx,t.z); \/\/ avoid using same U for all layers\n    \/\/T = sin(100.*U.x\/exp2(t3))+sin(100.*U.y\/exp2(t3));  \/\/ try this for obvious pattern\n    T = smoothstep(.9,1.,T);    \/\/ try without this to see base noise (and play with D)\n    \n    \/\/ --- texture advection: cyclical weighted  sum\n\n    o += dot(w,T);\n    \/\/ o.rgb = w*T;             \/\/ try this alternative to see the 3 layers of texture advection\n}","name":"","description":"","type":"image"}]}}