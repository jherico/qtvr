{"Shader":{"ver":"0.1","info":{"id":"XlfGWX","date":"1425459667","viewed":713,"name":"ngWaves07","username":"netgrind","description":"great weight presses down upon your eyes","likes":2,"published":3,"flags":0,"tags":["waves","hue","netgrind"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"vec4 hue(vec4 color, float shift) {\n\n    const vec4  kRGBToYPrime = vec4 (0.299, 0.587, 0.114, 0.0);\n    const vec4  kRGBToI     = vec4 (0.596, -0.275, -0.321, 0.0);\n    const vec4  kRGBToQ     = vec4 (0.212, -0.523, 0.311, 0.0);\n\n    const vec4  kYIQToR   = vec4 (1.0, 0.956, 0.621, 0.0);\n    const vec4  kYIQToG   = vec4 (1.0, -0.272, -0.647, 0.0);\n    const vec4  kYIQToB   = vec4 (1.0, -1.107, 1.704, 0.0);\n\n    \/\/ Convert to YIQ\n    float   YPrime  = dot (color, kRGBToYPrime);\n    float   I      = dot (color, kRGBToI);\n    float   Q      = dot (color, kRGBToQ);\n\n    \/\/ Calculate the hue and chroma\n    float   hue     = atan (Q, I);\n    float   chroma  = sqrt (I * I + Q * Q);\n\n    \/\/ Make the user's adjustments\n    hue += shift;\n\n    \/\/ Convert back to YIQ\n    Q = chroma * sin (hue);\n    I = chroma * cos (hue);\n\n    \/\/ Convert back to RGB\n    vec4    yIQ   = vec4 (YPrime, I, Q, 0.0);\n    color.r = dot (yIQ, kYIQToR);\n    color.g = dot (yIQ, kYIQToG);\n    color.b = dot (yIQ, kYIQToB);\n\n    return color;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float i = iGlobalTime;\n\tvec2 uv = fragCoord.xy \/ iResolution.xy*12.0-6.0;\n    vec4 c = vec4(1.0);\n    mat2 m = mat2(sin(length(uv+iMouse.xx*.1)+i),cos(uv.x-i*.5),sin(uv.x*uv.y),sin(cos(uv.x+iMouse.y*.01)+uv.y));\n    c.rg = atan(sin(uv.xy*m+i)*8.0)*m;\n    c.rb-=sin(uv*m+iMouse.yx*.02)*.4;\n    c.rgb = hue(normalize(c)*1.5,i*.3).rgb;\n\tfragColor = c;\n}","name":"","description":"","type":"image"}]}}