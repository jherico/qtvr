{"Shader":{"ver":"0.1","info":{"id":"ltXGRN","date":"1427496164","viewed":657,"name":"Fractal Experiment 2","username":"aiekick","description":"Fractal Experiment 2","likes":2,"published":3,"flags":0,"tags":["fractalexperiment2"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define Iterations 150\n\nprecision highp float;\n\nfloat metaline(vec2 p, vec2 o, float thick, vec2 l){\n    vec2 po = 2.*p+o;\n    return thick \/ dot(po,vec2(l.x,l.y));\n}\nfloat metaball(vec2 p, vec2 o, float radius){\n    vec2 po = p-o;\n\treturn radius \/ dot(po, po);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \/\/ vars \/ time\n    float speed = 0.5;\n    float t0 = iGlobalTime*speed;\n    float t1 = sin(t0);\n    float t2 = 0.5*t1+0.5;\n    float t3 = 0.5*sin(iGlobalTime*0.1)+0.5;\n    float zoom=1.;\n    \n    \/\/ uv\n    float ratio = iResolution.x\/iResolution.y;\n\tvec2 uv = fragCoord.xy \/ iResolution.xy*2.-1.;uv.x*=ratio;uv*=zoom;\n    vec2 mo = iMouse.xy \/ iResolution.xy*2.-1.;mo.x*=ratio;mo*=zoom;\n\n    \/\/ cadre\n    float thick=0.05;\n    float inv=1.;\n\tfloat bottom = metaline(uv,vec2(0.,2.)*zoom, thick, vec2(0.0,1.*inv));\n\tfloat top = metaline(uv,vec2(0.,-2.)*zoom, thick, vec2(0.0,-1.*inv));\n\tfloat left = metaline(uv,vec2(2.*ratio,0.)*zoom, thick, vec2(1.*inv,0.0));\n\tfloat right = metaline(uv,vec2(-2.*ratio,0.)*zoom, thick, vec2(-1.*inv,0.0));\n\tfloat rect=bottom+top+left+right;\n    \n    \/\/ map\n    vec2 uvt = uv;\n    \n    \/\/ julia\n    float ratioIter = 1.;\n    float ratioTime = t0;\n    if ( iMouse.z > 0. ) {\n        ratioIter = iMouse.y\/iResolution.y;\n        ratioTime = iMouse.x\/iResolution.x*2.-1.;\n    }\n    int nIter = int(floor(float(Iterations)*ratioIter));\n    float lX = -0.79;\n    float lY = sin(ratioTime)*0.114;\n    float julia0 = 0., julia1 = 0., x = 0., y = 0., j=0.;\n\tfor(int i=0; i<Iterations; i++) \n    {\n        if ( i == nIter ) break;\n        x = (uvt.x * uvt.x - uvt.y * uvt.y) + lX;\n        y = (uvt.y * uvt.x + uvt.x * uvt.y) + lY;\n        uvt.x = x;\n        uvt.y = y;\n       \tj = mix(j, length(uvt*0.2)\/dot(x,y*x), y\/x*0.2);\n        if ( j >= 0.2 && j <= 8.5) julia0 += metaball(uv,vec2(0.), j);\n        else julia1 += metaball(uv,vec2(0.), j);\n    }\n    \n    float julia = julia0-julia1*0.01;\n    \n   \tfloat rt = t1*0.5;\n    float gt = t1*0.5;\n    float bt = t1*0.5;\n    \n    \/\/ color\n   \tfloat d = julia+rect;\n    float r = mix(1.\/d, d, abs(rt));\n    float g = mix(r, d, abs(gt));\n    float b = mix(g, d, abs(bt));\n    vec3 c = vec3(r,g,b);\n\tfragColor.rgb = vec3(c*0.001);\n}","name":"","description":"","type":"image"}]}}