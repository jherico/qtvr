{"Shader":{"ver":"0.1","info":{"id":"Mt2GDz","date":"1428322177","viewed":1155,"name":"Basic Sequencer with Music Utils","username":"jocopa3","description":"A really basic music sequencer that allows for special effects (panning, attack, decay, possibly reverb and delay), different instruments, chords, etc!<br\/><br\/>The song playing is an adapted verison of my song \"Void\": https:\/\/soundcloud.com\/jocopa3\/void","likes":10,"published":3,"flags":8,"tags":["music","sequencer","song"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Have fun dragging your mouse around the screen while listening to music!\n\/\/ I was to lazy to create a new \"image\" for this demo, so I recycled the image from my last project\n\nconst float s = 0.8660254037844; \/\/ sqrt(3)\/2\n\n\/\/ Creates the image on the screen\nvec3 map(vec2 pos)\n{\n    pos.xy += (-iMouse.xy) \/ iResolution.xy + 0.5;\n    pos.y += 0.15;\n    \n    \/\/ I'm too lazy to change the coordinates, so I just invert the position\n    pos.y = 1.0 - pos.y;\n    \n    \/\/ Using some dot-product magic to drop the costly sqrt for speed gains\n    vec2 aa = vec2(pos.x - 0.5, pos.y + 0.54);\n    float a = dot(aa, aa);\n    vec2 bb = vec2(pos.x - (-s + 0.5), pos.y - (1.0 - s));\n    float b = dot(bb, bb);\n    vec2 cc = vec2(pos.x - (s + 0.5), pos.y - (1.0 - s));\n    float c = dot(cc, cc);\n    \n    \/\/ Next three lines detect which region the given pos falls in\n    vec2 abc = max(sign(vec2(a, a) - vec2(b, c)), 0.0);\n    vec2 bac = max(sign(vec2(b, b) - vec2(a, c)), 0.0);\n    vec2 cab = max(sign(vec2(c, c) - vec2(a, b)), 0.0);\n    \n    \/\/ Returns blue, red, or green depending on the region the given pos falls in\n    return abc.x * abc.y * vec3(0.0, 0.0, 1.0) + \n        bac.x * bac.y * vec3(1.0, 0.0, 0.0) + \n        cab.x * cab.y * vec3(0.0, 1.0, 0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tfragColor = vec4(map(uv),1.0);\n}","name":"","description":"","type":"image"},{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ This is my horrible attempt at an easyish-to-use music sequencer\n\/\/ This sequencer is very inefficient, and is better for short sequences or patterns, not long melodies.\n\/\/ I made this in a quick half-hour, not intending for it to be useful to anyone else, however, you're free to play with it!\n\/\/ You may find some of the utilities I created useful for your own purposes, so feel free to use them!\n\n\/\/ Brief explanation:\n\/\/ This program is setup around measures, so that no matter the BPM, a measure will always be at intervals of 1\n\/\/ This program is also setup in 4\/4 time (may add options to change), so beats happen on every interval of 0.25\n\/\/ Measures are made by grouping multiple notes together by adding them all up\n\/\/ The overall song is made by playing each measure at their respective times\n\n\n\/\/ P.S., sorry for horrible formatting, I really need to read a book on that subject :p\n\n\n\/**************************************\\\n|* Global Parameters                  *|\n\\**************************************\/\n\n\n\/\/ 128 bpm is the usual speed for house\/dance music\nconst float bpm = 128.0;\n\n\/\/ How fast the music plays in relation to a minute (no need to modify)\nconst float rate = bpm\/60.0;\n\n\n\/**************************************\\\n|* Instruments                        *|\n\\**************************************\/\n\n\n\/\/ Sine wave\n#define sine(freq, time) (sin(6.28318531*time*freq))\n\n\/\/ Saw wave\n#define saw(freq, time) ((time*freq - floor(time*freq)) * 2.0 - 1.0)\n\n\/\/ Square wave\n#define square(freq, time) (sign(sin(6.28318531*time*freq)))\n\n\/\/ Triangle wave\n#define tri(freq, time) (1.0 - abs(mod(freq*time, 1.0)-2.0))\n\n\n\/**************************************\\\n|* Notes                              *|\n\\**************************************\/\n\n\n\/\/ This essentially creates a pulse\n\/\/ Evaluates to 1.0 if a note should be played during the interval, and 0.0 if the note should not be played\n\/\/ start refers to the start of the note in a measure; each beat is in intervals of 0.25\n\/\/ end refers to the end of the note in a measure\n#define note(start, end, seqTime) (max(1.0 - sign(seqTime - end), 0.0) * max(sign(seqTime - start), 0.0))\n\n\/\/ Notes C0 to B8 all in one line! (How gross!)\n\/\/ Taken from: http:\/\/www.phy.mtu.edu\/~suits\/notefreqs.html\n\/\/ Converted using a JavaScript function I ran on that webpage to convert the table into compileable code\n\/\/ For sharp\/flat notes, such as G-sharp\/A-flat, use GA[octave]\nfloat C0 = 16.35;float CD0 = 17.32;float D0 = 18.35;float DE0 = 19.45;float E0 = 20.60;float F0 = 21.83;float FG0 = 23.12;float G0 = 24.50;float GA0 = 25.96;float A0 = 27.50;float AB0 = 29.14;float B0 = 30.87;float C1 = 32.70;float CD1 = 34.65;float D1 = 36.71;float DE1 = 38.89;float E1 = 41.20;float F1 = 43.65;float FG1 = 46.25;float G1 = 49.00;float GA1 = 51.91;float A1 = 55.00;float AB1 = 58.27;float B1 = 61.74;float C2 = 65.41;float CD2 = 69.30;float D2 = 73.42;float DE2 = 77.78;float E2 = 82.41;float F2 = 87.31;float FG2 = 92.50;float G2 = 98.00;float GA2 = 103.83;float A2 = 110.00;float AB2 = 116.54;float B2 = 123.47;float C3 = 130.81;float CD3 = 138.59;float D3 = 146.83;float DE3 = 155.56;float E3 = 164.81;float F3 = 174.61;float FG3 = 185.00;float G3 = 196.00;float GA3 = 207.65;float A3 = 220.00;float AB3 = 233.08;float B3 = 246.94;float C4 = 261.63;float CD4 = 277.18;float D4 = 293.66;float DE4 = 311.13;float E4 = 329.63;float F4 = 349.23;float FG4 = 369.99;float G4 = 392.00;float GA4 = 415.30;float A4 = 440.00;float AB4 = 466.16;float B4 = 493.88;float C5 = 523.25;float CD5 = 554.37;float D5 = 587.33;float DE5 = 622.25;float E5 = 659.25;float F5 = 698.46;float FG5 = 739.99;float G5 = 783.99;float GA5 = 830.61;float A5 = 880.00;float AB5 = 932.33;float B5 = 987.77;float C6 = 1046.50;float CD6 = 1108.73;float D6 = 1174.66;float DE6 = 1244.51;float E6 = 1318.51;float F6 = 1396.91;float FG6 = 1479.98;float G6 = 1567.98;float GA6 = 1661.22;float A6 = 1760.00;float AB6 = 1864.66;float B6 = 1975.53;float C7 = 2093.00;float CD7 = 2217.46;float D7 = 2349.32;float DE7 = 2489.02;float E7 = 2637.02;float F7 = 2793.83;float FG7 = 2959.96;float G7 = 3135.96;float GA7 = 3322.44;float A7 = 3520.00;float AB7 = 3729.31;float B7 = 3951.07;float C8 = 4186.01;float CD8 = 4434.92;float D8 = 4698.63;float DE8 = 4978.03;float E8 = 5274.04;float F8 = 5587.65;float FG8 = 5919.91;float G8 = 6271.93;float GA8 = 6644.88;float A8 = 7040.00;float AB8 = 7458.62;float B8 = 7902.13;\n\n\n\/**************************************\\\n|* Utilities                          *|\n\\**************************************\/\n\n\n\/\/ Effects that return a float (such as attack, decay, sustain, release, adsr, volume, etc.) are multiplied by\n\/\/ the notes that you wish to modify with that effect\n\n\/\/ Effects that return a vec2 (such as panning, delay, reverb, etc.) are done after all the desired notes have \n\/\/ been played\n\n\/\/ More to come in the future!\n\n\/\/ A hacky linear decay\nfloat decay(float seqTime, float start, float length, float amount)\n{\n    return 1.0 - clamp((seqTime - start) \/ length, 0.0, amount);\n}\n\n\/\/ Pans the given instrument by a certain amount\n\/\/ Set amount to -1.0 for left-panning, set to 0.0 for center, set to 1.0 for right-panning\nvec2 pan(float inst, float amount)\n{\n    amount = (amount + 1.0) \/ 2.0;\n    return vec2(inst * (1.0 - amount), inst * amount);\n}\n\n\n\/**************************************\\\n|* Main Song                          *|\n\\**************************************\/\n\n\n\/\/ Adapted verison of my song \"Void\": https:\/\/soundcloud.com\/jocopa3\/void\n\nvec2 measure1(float time);\nvec2 measure2(float time);\nvec2 measure3(float time);\nvec2 measure4(float time);\nvec2 measure5(float time);\nvec2 measure6(float time);\nvec2 measure7(float time);\n\nvec2 mainSound( float time )\n{\n    \/\/ 8 measure sequence\n    float seqTime = mod(time * rate \/ 4.0, 8.0);\n    \n    vec2 sound = vec2(0.0);\n    \n    float panAmount = mod(seqTime*8.0, 2.0)*0.125 - 0.0625;\n    \n    if(seqTime < 1.0){\n    \tsound += measure1(time);\n    }else if(seqTime < 2.0){\n        sound += measure2(time);\n    }else if(seqTime < 3.0){\n        sound += measure3(time);\n    }else if(seqTime < 4.0){\n        sound += measure4(time);\n    }else if(seqTime < 5.0){\n        sound += measure1(time);\n\t}else if(seqTime < 6.0){\n        sound += measure5(time);\n\t}else if(seqTime < 7.0){\n        sound += measure6(time);\n    }else{\n        sound += measure7(time);\n    }\n    \n    return pan(sound.x, panAmount);\n}\n\n\n\/**************************************\\\n|* Individual Measures                *|\n\\**************************************\/\n\n\nvec2 measure1(float time)\n{\n    float seqTime = mod(time * rate \/ 4.0, 1.0);\n    \n    float notes = \n        decay(seqTime, 0.0, 0.125, 0.5) * (\n        note(0.0, 0.125, seqTime) * saw(F3, time) * 0.25 +\n        note(0.0, 0.125, seqTime) * saw(C4, time) * 0.25 +\n\t\tnote(0.0, 0.125, seqTime) * saw(GA4, time) * 0.25) +\n        \n        decay(seqTime, 0.125, 0.125, 0.5) * (\n        note(0.125, 0.25, seqTime) * saw(F3, time) * 0.25 +\n        note(0.125, 0.25, seqTime) * saw(F4, time) * 0.25) +\n        \n        decay(seqTime, 0.25, 0.125, 0.5) * (\n        note(0.25, 0.375, seqTime) * saw(F3, time) * 0.25 +\n        note(0.25, 0.375, seqTime) * saw(C4, time) * 0.25) +\n        \n        decay(seqTime, 0.375, 0.125, 0.5) * (\n        note(0.375, 0.5, seqTime) * saw(F3, time) * 0.25 +\n        note(0.375, 0.5, seqTime) * saw(GA4, time) * 0.25) +\n        \n        decay(seqTime, 0.5, 0.125, 0.5) * (\n        note(0.5, 0.625, seqTime) * saw(F3, time) * 0.25 +\n        note(0.5, 0.625, seqTime) * saw(C4, time) * 0.25) +\n        \n        decay(seqTime, 0.625, 0.125, 0.5) * (\n        note(0.625, 0.75, seqTime) * saw(F3, time) * 0.25 + \n        note(0.625, 0.75, seqTime) * saw(GA4, time) * 0.25) +\n        \n        decay(seqTime, 0.75, 0.125, 0.5) * (\n        note(0.75, 0.875, seqTime) * saw(F3, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(C4, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(F4, time) * 0.25) +\n        \n        decay(seqTime, 0.875, 0.125, 0.5) * (\n        note(0.875, 1.0, seqTime) * saw(F3, time) * 0.25 +\n\t\tnote(0.875, 1.0, seqTime) * saw(GA4 , time) * 0.25);\n    \n    return vec2(notes);    \n}\n\nvec2 measure2(float time)\n{\n    float seqTime = mod(time * rate \/ 4.0, 1.0);\n    \n    float notes =\n        decay(seqTime, 0.0, 0.125, 0.5) * (\n        note(0.0, 0.125, seqTime) * saw(F3, time) * 0.25 +\n        note(0.0, 0.125, seqTime) * saw(C4, time) * 0.25 +\n\t\tnote(0.0, 0.125, seqTime) * saw(G4, time) * 0.25) +\n        \n        decay(seqTime, 0.125, 0.125, 0.5) * (\n        note(0.125, 0.25, seqTime) * saw(F3, time) * 0.25 +\n        note(0.125, 0.25, seqTime) * saw(DE4, time) * 0.25) +\n        \n        decay(seqTime, 0.25, 0.125, 0.5) * (\n        note(0.25, 0.375, seqTime) * saw(F3, time) * 0.25 +\n        note(0.25, 0.375, seqTime) * saw(C4, time) * 0.25) +\n        \n        decay(seqTime, 0.375, 0.125, 0.5) * (\n        note(0.375, 0.5, seqTime) * saw(F3, time) * 0.25 +\n        note(0.375, 0.5, seqTime) * saw(G4, time) * 0.25) +\n        \n        decay(seqTime, 0.5, 0.125, 0.5) * (\n        note(0.5, 0.625, seqTime) * saw(G3, time) * 0.25 +\n        note(0.5, 0.625, seqTime) * saw(AB3, time) * 0.25) +\n        \n        decay(seqTime, 0.625, 0.125, 0.5) * (\n        note(0.625, 0.75, seqTime) * saw(G3, time) * 0.25 + \n        note(0.625, 0.75, seqTime) * saw(G4, time) * 0.25) +\n        \n        decay(seqTime, 0.75, 0.125, 0.5) * (\n        note(0.75, 0.875, seqTime) * saw(G3, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(AB3, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(DE4, time) * 0.25) +\n        \n        decay(seqTime, 0.875, 0.125, 0.5) * (\n        note(0.875, 1.0, seqTime) * saw(G3, time) * 0.25 +\n\t\tnote(0.875, 1.0, seqTime) * saw(G4 , time) * 0.25);\n    \n    return vec2(notes);    \n}\n\nvec2 measure3(float time)\n{\n    float seqTime = mod(time * rate \/ 4.0, 1.0);\n    \n    float notes = \n        decay(seqTime, 0.0, 0.125, 0.5) * (\n        note(0.0, 0.125, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.0, 0.125, seqTime) * saw(GA3, time) * 0.25 +\n\t\tnote(0.0, 0.125, seqTime) * saw(GA4, time) * 0.25) +\n        \n        decay(seqTime, 0.125, 0.125, 0.5) * (\n        note(0.125, 0.25, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.125, 0.25, seqTime) * saw(CD4, time) * 0.25) +\n        \n        decay(seqTime, 0.25, 0.125, 0.5) * (\n        note(0.25, 0.375, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.25, 0.375, seqTime) * saw(GA3, time) * 0.25) +\n        \n        decay(seqTime, 0.375, 0.125, 0.5) * (\n        note(0.375, 0.5, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.375, 0.5, seqTime) * saw(GA4, time) * 0.25) +\n        \n        decay(seqTime, 0.5, 0.125, 0.5) * (\n        note(0.5, 0.625, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.5, 0.625, seqTime) * saw(GA3, time) * 0.25) +\n        \n        decay(seqTime, 0.625, 0.125, 0.5) * (\n        note(0.625, 0.75, seqTime) * saw(CD3, time) * 0.25 + \n        note(0.625, 0.75, seqTime) * saw(GA4, time) * 0.25) +\n        \n        decay(seqTime, 0.75, 0.125, 0.5) * (\n        note(0.75, 0.875, seqTime) * saw(CD3, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(GA3, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(CD4, time) * 0.25) +\n        \n        decay(seqTime, 0.875, 0.125, 0.5) * (\n        note(0.875, 1.0, seqTime) * saw(CD3, time) * 0.25 +\n\t\tnote(0.875, 1.0, seqTime) * saw(GA4 , time) * 0.25);\n    \n    return vec2(notes);    \n}\n\nvec2 measure4(float time)\n{\n    float seqTime = mod(time * rate \/ 4.0, 1.0);\n    \n    float notes = \n        decay(seqTime, 0.0, 0.125, 0.5) * (\n        note(0.0, 0.125, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.0, 0.125, seqTime) * saw(GA3, time) * 0.25 +\n\t\tnote(0.0, 0.125, seqTime) * saw(C5, time) * 0.25) +\n        \n        decay(seqTime, 0.125, 0.125, 0.5) * (\n        note(0.125, 0.25, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.125, 0.25, seqTime) * saw(CD4, time) * 0.25) +\n        \n        decay(seqTime, 0.25, 0.125, 0.5) * (\n        note(0.25, 0.375, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.25, 0.375, seqTime) * saw(GA3, time) * 0.25) +\n        \n        decay(seqTime, 0.375, 0.125, 0.5) * (\n        note(0.375, 0.5, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.375, 0.5, seqTime) * saw(C5, time) * 0.25) +\n        \n        decay(seqTime, 0.5, 0.125, 0.5) * (\n        note(0.5, 0.625, seqTime) * saw(DE3, time) * 0.25 +\n        note(0.5, 0.625, seqTime) * saw(AB3, time) * 0.25) +\n        \n        decay(seqTime, 0.625, 0.125, 0.5) * (\n        note(0.625, 0.75, seqTime) * saw(DE3, time) * 0.25 + \n        note(0.625, 0.75, seqTime) * saw(C5, time) * 0.25) +\n        \n        decay(seqTime, 0.75, 0.125, 0.5) * (\n        note(0.75, 0.875, seqTime) * saw(DE3, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(AB3, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(AB4, time) * 0.25) +\n        \n        decay(seqTime, 0.875, 0.125, 0.5) * (\n        note(0.875, 1.0, seqTime) * saw(DE3, time) * 0.25 +\n\t\tnote(0.875, 1.0, seqTime) * saw(G4 , time) * 0.25);\n    \n    return vec2(notes);    \n}\n\nvec2 measure5(float time)\n{\n    float seqTime = mod(time * rate \/ 4.0, 1.0);\n    \n    float notes = \n        decay(seqTime, 0.0, 0.125, 0.5) * (\n        note(0.0, 0.125, seqTime) * saw(F3, time) * 0.25 +\n        note(0.0, 0.125, seqTime) * saw(C4, time) * 0.25 +\n\t\tnote(0.0, 0.125, seqTime) * saw(AB4, time) * 0.25) +\n        \n        decay(seqTime, 0.125, 0.125, 0.5) * (\n        note(0.125, 0.25, seqTime) * saw(F3, time) * 0.25 +\n        note(0.125, 0.25, seqTime) * saw(DE4, time) * 0.25) +\n        \n        decay(seqTime, 0.25, 0.125, 0.5) * (\n        note(0.25, 0.375, seqTime) * saw(F3, time) * 0.25 +\n        note(0.25, 0.375, seqTime) * saw(C4, time) * 0.25) +\n        \n        decay(seqTime, 0.375, 0.125, 0.5) * (\n        note(0.375, 0.5, seqTime) * saw(F3, time) * 0.25 +\n        note(0.375, 0.5, seqTime) * saw(AB4, time) * 0.25) +\n        \n        decay(seqTime, 0.5, 0.125, 0.5) * (\n        note(0.5, 0.625, seqTime) * saw(C3, time) * 0.25 +\n        note(0.5, 0.625, seqTime) * saw(GA3, time) * 0.25) +\n        \n        decay(seqTime, 0.625, 0.125, 0.5) * (\n        note(0.625, 0.75, seqTime) * saw(C3, time) * 0.25 + \n        note(0.625, 0.75, seqTime) * saw(AB4, time) * 0.25) +\n        \n        decay(seqTime, 0.75, 0.125, 0.5) * (\n        note(0.75, 0.875, seqTime) * saw(C3, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(GA3, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(DE4, time) * 0.25) +\n        \n        decay(seqTime, 0.875, 0.125, 0.5) * (\n        note(0.875, 1.0, seqTime) * saw(C3, time) * 0.25 +\n\t\tnote(0.875, 1.0, seqTime) * saw(AB4 , time) * 0.25);\n    \n    return vec2(notes);    \n}\n\nvec2 measure6(float time)\n{\n    float seqTime = mod(time * rate \/ 4.0, 1.0);\n    \n    float notes = \n        decay(seqTime, 0.0, 0.125, 0.5) * (\n        note(0.0, 0.125, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.0, 0.125, seqTime) * saw(F3, time) * 0.25 +\n\t\tnote(0.0, 0.125, seqTime) * saw(C5, time) * 0.25) +\n        \n        decay(seqTime, 0.125, 0.125, 0.5) * (\n        note(0.125, 0.25, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.125, 0.25, seqTime) * saw(CD4, time) * 0.25) +\n        \n        decay(seqTime, 0.25, 0.125, 0.5) * (\n        note(0.25, 0.375, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.25, 0.375, seqTime) * saw(F3, time) * 0.25) +\n        \n        decay(seqTime, 0.375, 0.125, 0.5) * (\n        note(0.375, 0.5, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.375, 0.5, seqTime) * saw(C5, time) * 0.25) +\n        \n        decay(seqTime, 0.5, 0.125, 0.5) * (\n        note(0.5, 0.625, seqTime) * saw(CD3, time) * 0.25 +\n        note(0.5, 0.625, seqTime) * saw(F3, time) * 0.25) +\n        \n        decay(seqTime, 0.625, 0.125, 0.5) * (\n        note(0.625, 0.75, seqTime) * saw(CD3, time) * 0.25 + \n        note(0.625, 0.75, seqTime) * saw(C5, time) * 0.25) +\n        \n        decay(seqTime, 0.75, 0.125, 0.5) * (\n        note(0.75, 0.875, seqTime) * saw(CD3, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(F3, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(CD4, time) * 0.25) +\n        \n        decay(seqTime, 0.875, 0.125, 0.5) * (\n        note(0.875, 1.0, seqTime) * saw(CD3, time) * 0.25 +\n\t\tnote(0.875, 1.0, seqTime) * saw(C5 , time) * 0.25);\n    \n    return vec2(notes);    \n}\n\nvec2 measure7(float time)\n{\n    float seqTime = mod(time * rate \/ 4.0, 1.0);\n    \n    float notes = \n        decay(seqTime, 0.0, 0.125, 0.5) * (\n        note(0.0, 0.125, seqTime) * saw(GA3, time) * 0.25 +\n        note(0.0, 0.125, seqTime) * saw(C4, time) * 0.25 +\n\t\tnote(0.0, 0.125, seqTime) * saw(C5, time) * 0.25) +\n        \n        decay(seqTime, 0.125, 0.125, 0.5) * (\n        note(0.125, 0.25, seqTime) * saw(GA3, time) * 0.25 +\n        note(0.125, 0.25, seqTime) * saw(F4, time) * 0.25) +\n        \n        decay(seqTime, 0.25, 0.125, 0.5) * (\n        note(0.25, 0.375, seqTime) * saw(GA3, time) * 0.25 +\n        note(0.25, 0.375, seqTime) * saw(C4, time) * 0.25) +\n        \n        decay(seqTime, 0.375, 0.125, 0.5) * (\n        note(0.375, 0.5, seqTime) * saw(GA3, time) * 0.25 +\n        note(0.375, 0.5, seqTime) * saw(C5, time) * 0.25) +\n        \n        decay(seqTime, 0.5, 0.125, 0.5) * (\n        note(0.5, 0.625, seqTime) * saw(G3, time) * 0.25 +\n        note(0.5, 0.625, seqTime) * saw(AB3, time) * 0.25) +\n        \n        decay(seqTime, 0.625, 0.125, 0.5) * (\n        note(0.625, 0.75, seqTime) * saw(G3, time) * 0.25 + \n        note(0.625, 0.75, seqTime) * saw(C5, time) * 0.25) +\n        \n        decay(seqTime, 0.75, 0.125, 0.5) * (\n        note(0.75, 0.875, seqTime) * saw(G3, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(AB3, time) * 0.25 + \n        note(0.75, 0.875, seqTime) * saw(AB4, time) * 0.25) +\n        \n        decay(seqTime, 0.875, 0.125, 0.5) * (\n        note(0.875, 1.0, seqTime) * saw(G3, time) * 0.25 +\n\t\tnote(0.875, 1.0, seqTime) * saw(G4 , time) * 0.25);\n    \n    return vec2(notes);    \n}","name":"","description":"","type":"sound"}]}}