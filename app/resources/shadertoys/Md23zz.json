{"Shader":{"ver":"0.1","info":{"id":"Md23zz","date":"1383088483","viewed":1632,"name":"Texture Isolines","username":"iq","description":"Another test integrating isolines of a texture","likes":3,"published":3,"flags":0,"tags":["2d","texture","isolines","integral"],"hasliked":0},"renderpass":[{"inputs":[{"id":3,"src":"\/presets\/tex02.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \/\/---------------------------------\n    \/\/ input\n    \/\/---------------------------------\n\tvec2 p = fragCoord.xy \/ iResolution.xy;\n\n    \/\/---------------------------------\n    \/\/ integrate isolines\n    \/\/---------------------------------\n\tfloat lg = 0.0;\n\tvec2 uv = 0.2*vec2( p.x, 1.0-p.y );\n\tvec2 e = 1.0\/iChannelResolution[0].xy;\n\tfor( int i=0; i<128; i++ )\n\t{\n\t\t\n\t\tfloat h  = dot( texture2D(iChannel0, uv,               3.5).xyz, vec3(0.333) );\n\t\tfloat h1 = dot( texture2D(iChannel0, uv+vec2(e.x,0.0), 3.5).xyz, vec3(0.333) );\n\t\tfloat h2 = dot( texture2D(iChannel0, uv+vec2(0.0,e.y), 3.5).xyz, vec3(0.333) );\n\t\t\n        \/\/ gradient\n\t\tvec2 g = ( vec2( (h1-h), (h2-h) )\/e );\n\t\t\n        \/\/ isoline\t\t\n\t\tvec2 f = g.yx*vec2(-1.0,1.0);\n\t\t\n\t\tuv -= 0.004*f\/iChannelResolution[0].xy;\n\t\t\n\t\tlg += (0.5 + 0.5*sin(atan(f.x,f.y)))\/128.0;\n\t}\n\tvec3 col = texture2D(iChannel0, uv).xyz;\n\n\t\/\/---------------------------------\n    \/\/ color\n    \/\/---------------------------------\n\tcol = col*col*(3.0-2.0*col);\n\tcol = col*col*(3.0-2.0*col);\n\tcol = col*col*(3.0-2.0*col);\n\t\n    \/\/---------------------------------\n    \/\/ lighting\n    \/\/---------------------------------\n\tfloat f = dot( col, vec3(0.33) );\n\tvec3 nor = normalize( vec3( dFdx(f), 25.0\/iResolution.x, dFdy(f) ) );\n\tfloat dif = pow( clamp( dot( nor, vec3(0.57703,0.57703,-0.57703) ), 0.0, 1.0 ), 4.0 );\n\tcol += 0.14*vec3(dif);\n\n\tcol *= mix( vec3(0.6,0.75,0.6), vec3(1.0,1.1,0.8), lg );\n\t\t\n\n\t\/\/---------------------------------\n    \/\/ output\n    \/\/---------------------------------\n\tcol *= 0.5 + 0.5*pow( 16.0*p.x*(1.0-p.x)*p.y*(1.0-p.y), 0.2 );\n\tfragColor = vec4(col, 1.0);\n}\n","name":"","description":"","type":"image"}]}}