{"Shader":{"ver":"0.1","info":{"id":"4lj3W1","date":"1428601307","viewed":747,"name":"Matrix Tunnel v3","username":"hunter","description":"audio multiplied by itself.  red color is bass, green mids, blue treb.","likes":2,"published":3,"flags":4,"tags":["2d","fft","color","audio","visualizer","microphone"],"hasliked":0},"renderpass":[{"inputs":[{"id":32,"src":"\/presets\/mic.png","ctype":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/\n\/\/ Color version of: https:\/\/www.shadertoy.com\/view\/XlXGDf\n\/\/\n\/\/ Based on: https:\/\/www.shadertoy.com\/view\/4dfSRS\n\/\/\n\n#define PI 3.14159\n\n\/\/ not the best way to do this, but it works\nvec4 audioEq() {\n    float vol = 0.0;\n    \n    \/\/ bass\n    float lows = 0.0;\n    for(float i=0.;i<85.; i++){\n        float v =  texture2D(iChannel0, vec2(i\/85., 0.0)).x;\n        lows += v*v;\n        vol += v*v;\n    }\n    lows \/= 85.0;\n    lows = sqrt(lows);\n    \n    \/\/ mids\n    float mids = 0.0;\n    for(float i=85.;i<255.; i++){\n        float v =  texture2D(iChannel0, vec2(i\/170., 0.0)).x;\n        mids += v*v;\n        vol += v*v;\n    }\n    mids \/= 170.0;\n    mids = sqrt(mids);\n    \n    \/\/ treb\n    float highs = 0.0;\n    for(float i=255.;i<512.; i++){\n        float v =  texture2D(iChannel0, vec2(i\/255., 0.0)).x;\n        highs += v*v;\n        vol += v*v;\n    }\n    highs \/= 255.0;\n    highs = sqrt(highs);\n    \n    vol \/= 512.;\n    vol = sqrt(vol);\n    \n    return vec4( lows * 1.5, mids * 1.25, highs * 1.0, vol ); \/\/ bass, mids, treb, volume\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    uv = abs( 2.05 * ( uv - 0.5 ) );\n\n    vec4 eq = audioEq();\n\tfloat theta = 1.0 * ( 1.0 \/ ( PI * 0.5 ) ) * atan( uv.x, uv.y);\n    \n    float l = length( uv );\n    float a = 0.01 - l; \/\/vignette\n    uv = vec2( theta, l );\n\n    float t1 = texture2D( iChannel0, vec2( uv.x, 0.9 ) ).x;\n    float t2 = texture2D( iChannel0, vec2( uv.y, 0.9 ) ).x;\n\n    float x = t1 * t2;\n    float y = x * a * 6.0;\n    float r = cos(x) + y;\n    \n    float red   = sin( r * ( 4.0 * PI ) * eq.r );\n    float green = sin( r * ( 2.0 * PI ) * eq.g );\n    float blue  = sin( r * ( 1.0 * PI ) * eq.b );\n\n    vec3 c = vec3( red * cos( y ), green * cos( y ), blue * cos( y ) );\n    \n\tfragColor = vec4( c, 1.0); \n}","name":"","description":"","type":"image"}]}}