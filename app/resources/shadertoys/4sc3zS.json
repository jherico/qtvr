{"Shader":{"ver":"0.1","info":{"id":"4sc3zS","date":"1450312343","viewed":222,"name":"MegaWave 3","username":"aiekick","description":"MegaWave ,3","likes":8,"published":3,"flags":0,"tags":["3","megawave"],"hasliked":0},"renderpass":[{"inputs":[{"id":8,"src":"\/presets\/tex07.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":23,"src":"\/presets\/cube01_0.png","ctype":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"id":47,"src":"\/presets\/tex19.png","ctype":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nconst vec3 ligthDir = vec3(0.,1., 0.5);\n\nvec4 pattern(vec3 p)\n{\n\tvec2 uv = p.xz\/2.;\n\tuv = vec2(length(uv)) - vec2(mod(iGlobalTime, 10.)*.1,0);\n\tvec4 tex = texture2D(iChannel1, uv, -2.2);\n\tfloat dist = dot(tex, vec4(0.01));\n\treturn vec4(dist, tex.rgb); \n}\n\nvec3 path(vec3 p)\n{\n\tp.y = p.y * 3. - 10. + cos(p.x\/3.8) *4. + sin(p.z\/3.8)*4.;\n    p.y -= texture2D(iChannel2, p.xz*0.03).x * 5. * sin(iGlobalTime * .5);\n\tp.x = cos(p.x*1.2)*4.;\n\tp.z = sin(p.z*1.2)*4.;\n\treturn p;\n}\n\nfloat obox( vec3 p, vec3 b ){ return length(max(abs(p)-b,0.0));}\n\nvec4 df(vec3 p)\n{\n\tvec3 q = path(p);\n    vec4 pat = pattern(q);\n    float y = 1. - smoothstep(0., 1., pat.x) * 3.;\n\tfloat dist = obox(q, vec3(6,1.-y,6));\n    return vec4(dist, pat.yzw);\n}\n\nvec3 nor( vec3 p, float prec )\n{\n    vec2 e = vec2( prec, 0. );\n    vec3 n = vec3(\n\t\tdf(p+e.xyy).x - df(p-e.xyy).x,\n\t\tdf(p+e.yxy).x - df(p-e.yxy).x,\n\t\tdf(p+e.yyx).x - df(p-e.yyx).x );\n    return normalize(n);\n}\n\n\/\/--------------------------------------------------------------------------\n\/\/ Grab all sky information for a given ray from camera\n\/\/ from Dave Hoskins \/\/ https:\/\/www.shadertoy.com\/view\/Xsf3zX\nvec3 GetSky(in vec3 rd, in vec3 sunDir, in vec3 sunCol)\n{\n\tfloat sunAmount = max( dot( rd, sunDir), 0.0 );\n\tfloat v = pow(1.0-max(rd.y,0.0),6.);\n\tvec3  sky = mix(vec3(.1, .2, .3), vec3(.32, .32, .32), v);\n\tsky = sky + sunCol * sunAmount * sunAmount * .25;\n\tsky = sky + sunCol * min(pow(sunAmount, 800.0)*1.5, .3);\n\treturn clamp(sky, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 f, in vec2 g )\n{\t\n\tf = vec4(0);\n\t\n\tvec2 si = iResolution.xy;\n    \n\tvec2 uv = (2.*g-si)\/min(si.x, si.y);\n\t\n\tvec3 rayOrg = vec3(0,1,iGlobalTime)*5.;\n\tvec3 camUp = vec3(0,1,0);\n\tvec3 camOrg = rayOrg + vec3(0,0,.1);\n\t\n\tfloat fov = .5;\n\tvec3 axisZ = normalize(camOrg - rayOrg);\n\tvec3 axisX = normalize(cross(camUp, axisZ));\n\tvec3 axisY = normalize(cross(axisZ, axisX));\n\tvec3 rayDir = normalize(axisZ + fov * uv.x * axisX + fov * uv.y * axisY);\n\t\n    float dMax = 80.;\n\tfloat sMin = .0001;\n\t\n\tvec4 s = vec4(sMin);\n\tfloat d = 0.;\n\tvec3 p = rayOrg;\n\t\n\tfor (float i=0.; i<150.; i++)\n\t{\n\t\tif (s.x < sMin || d > dMax) break;\n\t\ts = df(p);\n\t\td += s.x * (s.x > .1 ? .2 : .01);\n\t\tp = rayOrg + rayDir * d;\t\n\t}\n\t\n    if (d<dMax)\n\t{\n\t\tvec3 n = nor(p, .05);\n\t\tvec3 reflRay = reflect(rayDir, n);\n        vec3 cubeRefl = textureCube(iChannel0, reflRay).rgb * .45;\n\t\tf.rgb = cubeRefl + pow(.35, 15.);\n\t\tf.rgb = mix( f.rgb, vec3(.8,.9,1), 1.-exp( -0.0008*d*d ) );\n       \tf.rgb = mix(f.rgb, s.yzw, .5);\n\t}\n\telse\n\t{\n\t\tf.rgb = GetSky(rayDir, ligthDir, vec3(4.));\n\t}\n}\n","name":"","description":"","type":"image"}]}}