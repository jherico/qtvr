{"Shader":{"ver":"0.1","info":{"id":"4tSSWc","date":"1446758356","viewed":401,"name":"Phenomenon","username":"Sgw32","description":"Will be used in my game \"The Long Way\". Based on scope shader code.","likes":0,"published":3,"flags":0,"tags":["oscilloscope","triangle","scope","phenomenon","resonance"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Public Domain license\n\n#define SIZE 3.\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat time = iGlobalTime;\n    time = mod(time, 5.);\n    \n    \n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\t\n\tvec3 color = vec3(0.0, 0.0, 0.0);\n    \n    \n\tfloat piikit  = 0.5+asin(sin(SIZE*uv.x*6.28))\/5.;\n    \n    \n    if (uv.x<(1.\/(SIZE)))\n    {\n            piikit=0.5;\n    }  \n    \n    \n    if (uv.x>(1.-1.\/(SIZE)))\n    {\n            piikit=0.5;\n    }    \n    \n    float x1 = uv.x*2.;\n    \/\/float xt = time\/10.;\n    float pos = 2.+8.*pow(time,4.);\n    float xx = -pow((uv.x*pos-pos\/2.),8.);\n    \/\/xx=-pow(xx,2.);\n    \n    \/\/piikit=1.-exp(xx);\n    \n\tfloat flash = 1.-exp(xx);\n                \n\tfloat glow = (flash*0.02)\/abs(piikit - uv.y);\n                \n\tcolor = vec3(0.0, glow*0.5, 0);\n\tcolor += vec3(sqrt(glow*0.2));\n\t\n\t\n\tfragColor = vec4(color, 1.0);\n}","name":"","description":"","type":"image"}]}}