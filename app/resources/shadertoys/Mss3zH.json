{"Shader":{"ver":"0.1","info":{"id":"Mss3zH","date":"1363056994","viewed":1722,"name":"Input - Mouse","username":"iq","description":"Shows how the mouse input events work","likes":15,"published":3,"flags":0,"tags":["2d","mouse"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat distanceToSegment( vec2 a, vec2 b, vec2 p )\n{\n\tvec2 pa = p - a, ba = b - a;\n\tfloat h = clamp( dot(pa,ba)\/dot(ba,ba), 0.0, 1.0 );\n\treturn length( pa - ba*h );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy \/ iResolution.xx;\n    vec4 m = iMouse \/ iResolution.xxxx;\n\t\n\tvec3 col = vec3(0.0);\n\n\tif( m.z>0.0 )\n\t{\n\t\tfloat d = distanceToSegment( m.xy, m.zw, p );\n        col = mix( col, vec3(1.0,1.0,0.0), 1.0-smoothstep(.004,0.008, d) );\n\t}\n\n\tcol = mix( col, vec3(1.0,0.0,0.0), 1.0-smoothstep(0.03,0.035, length(p-m.xy)) );\n    col = mix( col, vec3(0.0,0.0,1.0), 1.0-smoothstep(0.03,0.035, length(p-abs(m.zw))) );\n\n\tfragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}