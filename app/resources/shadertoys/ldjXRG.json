{"Shader":{"ver":"0.1","info":{"id":"ldjXRG","date":"1425395026","viewed":660,"name":"2d function","username":"klk","description":"2d math","likes":2,"published":3,"flags":0,"tags":["2d","vect"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define float3 vec3\n#define float2 vec2\n#define float4 vec4\n\n\nfloat lv(float2 p0, float2 p1, float2 uv)\n{\n    float2 dp=normalize(p1-p0);\n    float2 dpp=float2(dp.y, -dp.x);\n    float l=abs(dot(dpp,uv-p0));\n    if((dot(dp,uv-p0)<0.0))\n        l=length(uv-p0);\n    if((dot(-dp,uv-p1)<0.0))\n        l=length(uv-p1);\n    return l;\n}\n\nfloat sx;\nfloat sy;\n\n\nfloat2 F0(float t)\n{\n\treturn 0.5+float2(cos(t*sx),sin(t*sy))*0.3;\n}\n\nfloat2 F(float t)\n{\n    t*=0.1;\n\treturn 0.5+float2(cos(t),sin(t))*sin(t*sy)*sin(t*sx)*0.3;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float size=min(iResolution.x, iResolution.y);\n    float4 mp=iMouse\/size;\n\n    float t=iGlobalTime*0.5;\n    float dt=40.75+sin(t*3.0)*0.5;\n\tvec2 uv = fragCoord.xy\/size;\n    float l=0.2;\n\tsx=mp.x-0.5;\n\tsy=mp.y-0.5;\n    \n    for(float i=0.0;i<500.01;i++)\n    {\n\t    l=min(l,lv(F(i),F(i+1.0),uv));\n    }\n\n    fragColor.r = 1.0-abs(l*l*size*size\/10.0);\n    fragColor.g=(1.0-abs(l*l*size*size\/10000.0))*0.4;\n    fragColor.b=(1.0-abs(sin(l*50.0)))\/(1.0+l*5.0);\n}","name":"","description":"","type":"image"}]}}