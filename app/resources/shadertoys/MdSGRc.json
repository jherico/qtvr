{"Shader":{"ver":"0.1","info":{"id":"MdSGRc","date":"1391556832","viewed":1602,"name":"Voronoi - metrics","username":"iq","description":"Changing the distance metric in voronoi patterns to get different shapes","likes":40,"published":3,"flags":0,"tags":["2d","voronoi","worley"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat hash1( float n ) { return fract(sin(n)*43758.5453); }\nvec2  hash2( vec2  p ) { p = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) ); return fract(sin(p)*43758.5453); }\n\n\n\nvec4 voronoi( in vec2 x, float mode )\n{\n    vec2 n = floor( x );\n    vec2 f = fract( x );\n\n\tvec3 m = vec3( 8.0 );\n\tfloat m2 = 8.0;\n    for( int j=-2; j<=2; j++ )\n    for( int i=-2; i<=2; i++ )\n    {\n        vec2 g = vec2( float(i),float(j) );\n        vec2 o = hash2( n + g );\n\n\t\t\/\/ animate\n        o = 0.5 + 0.5*sin( iGlobalTime + 6.2831*o );\n\n\t\tvec2 r = g - f + o;\n\n        \/\/ euclidean\t\t\n\t\tvec2 d0 = vec2( sqrt(dot(r,r)), 1.0 );\n        \/\/ manhattam\t\t\n\t\tvec2 d1 = vec2( 0.71*(abs(r.x) + abs(r.y)), 1.0 );\n        \/\/ triangular\t\t\n\t\tvec2 d2 = vec2( max(abs(r.x)*0.866025+r.y*0.5,-r.y), \n\t\t\t\t        step(0.0,0.5*abs(r.x)+0.866025*r.y)*(1.0+step(0.0,r.x)) );\n\n\t\tvec2 d = d0; \n\t\tif( mode<3.0 ) d=mix( d2, d0, fract(mode) );\n\t\tif( mode<2.0 ) d=mix( d1, d2, fract(mode) );\n\t\tif( mode<1.0 ) d=mix( d0, d1, fract(mode) );\n\t\t\n        if( d.x<m.x )\n        {\n\t\t\tm2 = m.x;\n            m.x = d.x;\n            m.y = hash1( dot(n+g,vec2(7.0,113.0) ) );\n\t\t\tm.z = d.y;\n        }\n\t\telse if( d.x<m2 )\n\t\t{\n\t\t\tm2 = d.x;\n\t\t}\n\n    }\n    return vec4( m, m2-m.x );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat mode = mod(iGlobalTime\/5.0,3.0);\n\tmode = floor(mode) + smoothstep( 0.8, 1.0, fract(mode) );\n\t\n    vec2 p = fragCoord.xy\/iResolution.xx;\n    vec4 c = voronoi( 8.0*p, mode );\n\n    vec3 col = 0.5 + 0.5*sin( c.y*2.5 + vec3(1.0,1.0,1.9) );\n    col *= sqrt( clamp( 1.0 - c.x, 0.0, 1.0 ) );\n\tcol *= clamp( 0.5 + (1.0-c.z\/2.0)*0.5, 0.0, 1.0 );\n\tcol *= 0.4 + 0.6*sqrt(clamp( 4.0*c.w, 0.0, 1.0 ));\n\t\n\t\n    fragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}