{"Shader":{"ver":"0.1","info":{"id":"lssGDj","date":"1379886198","viewed":3158,"name":"Ascii Art","username":"movAX13h","description":"basic bitmap to (mouse clicked ? grayscale : color) ascii (8 characters) art shader","likes":59,"published":3,"flags":0,"tags":["mouse","ascii"],"hasliked":0},"renderpass":[{"inputs":[{"id":12,"src":"\/presets\/vid01.webm","ctype":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Bitmap to ASCII (not really) fragment shader by movAX13h, September 2013\n\/\/ --- This shader is now used in Pixi JS ---\n\n\/\/ If you change the input channel texture, disable this:\n#define HAS_GREENSCREEN\n\nfloat character(float n, vec2 p) \/\/ some compilers have the word \"char\" reserved\n{\n\tp = floor(p*vec2(4.0, -4.0) + 2.5);\n\tif (clamp(p.x, 0.0, 4.0) == p.x && clamp(p.y, 0.0, 4.0) == p.y)\n\t{\n\t\tif (int(mod(n\/exp2(p.x + 5.0*p.y), 2.0)) == 1) return 1.0;\n\t}\t\n\treturn 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy;\n\tvec3 col = texture2D(iChannel0, floor(uv\/8.0)*8.0\/iResolution.xy).rgb;\t\n\t\n\t#ifdef HAS_GREENSCREEN\n\tfloat gray = (col.r + col.b)\/2.0; \/\/ skip green component\n\t#else\n\tfloat gray = (col.r + col.g + col.b)\/3.0;\n\t#endif\n\t\n\tfloat n =  65536.0;             \/\/ .\n\tif (gray > 0.2) n = 65600.0;    \/\/ :\n\tif (gray > 0.3) n = 332772.0;   \/\/ *\n\tif (gray > 0.4) n = 15255086.0; \/\/ o \n\tif (gray > 0.5) n = 23385164.0; \/\/ &\n\tif (gray > 0.6) n = 15252014.0; \/\/ 8\n\tif (gray > 0.7) n = 13199452.0; \/\/ @\n\tif (gray > 0.8) n = 11512810.0; \/\/ #\n\t\n\tvec2 p = mod(uv\/4.0, 2.0) - vec2(1.0);\n\tif (iMouse.z > 0.5)\tcol = gray*vec3(character(n, p));\n\telse col = col*character(n, p);\n\t\n\tfragColor = vec4(col, 1.0);\n}","name":"","description":"","type":"image"}]}}