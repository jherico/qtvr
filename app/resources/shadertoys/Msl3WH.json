{"Shader":{"ver":"0.1","info":{"id":"Msl3WH","date":"1369323795","viewed":2297,"name":"Warp speed","username":"Dave_Hoskins","description":"I couldn't resist playing around with the \"Cosmos\" shadertoy!<br\/>Thanks for the fractal, Kali!<br\/>Video of it:-<br\/>http:\/\/www.youtube.com\/watch?v=1eZeqKvI5_4<br\/>","likes":56,"published":3,"flags":0,"tags":["fractal","kali"],"hasliked":0},"renderpass":[{"inputs":[{"id":154,"src":"https:\/\/soundcloud.com\/reveal-sound\/j-m-jarre-oxygene-2","ctype":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ 'Warp Speed' by David Hoskins 2013.\n\/\/ I tried to find gaps and variation in the star cloud for a feeling of structure.\nfloat time = (iGlobalTime+29.) * 60.0;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat s = 0.0, v = 0.0;\n\tvec2 uv = (fragCoord.xy \/ iResolution.xy) * 2.0 - 1.0;\n\tfloat t = time*0.005;\n\tuv.x = (uv.x * iResolution.x \/ iResolution.y) + sin(t) * 0.5;\n\tfloat si = sin(t + 2.17); \/\/ ...Squiffy rotation matrix!\n\tfloat co = cos(t);\n\tuv *= mat2(co, si, -si, co);\n\tvec3 col = vec3(0.0);\n\tvec3 init = vec3(0.25, 0.25 + sin(time * 0.001) * 0.4, floor(time) * 0.0008);\n\tfor (int r = 0; r < 100; r++) \n\t{\n\t\tvec3 p = init + s * vec3(uv, 0.143);\n\t\tp.z = mod(p.z, 2.0);\n\t\tfor (int i=0; i < 10; i++)\tp = abs(p * 2.04) \/ dot(p, p) - 0.75;\n\t\tv += length(p * p) * smoothstep(0.0, 0.5, 0.9 - s) * .002;\n\t\t\/\/ Get a purple and cyan effect by biasing the RGB in different ways...\n\t\tcol +=  vec3(v * 0.8, 1.1 - s * 0.5, .7 + v * 0.5) * v * 0.013;\n\t\ts += .01;\n\t}\n\tfragColor = vec4(col, 1.0);\n}","name":"","description":"","type":"image"}]}}