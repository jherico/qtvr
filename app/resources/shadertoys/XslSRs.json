{"Shader":{"ver":"0.1","info":{"id":"XslSRs","date":"1405780303","viewed":1898,"name":"Sharbat Gula","username":"Dave_Hoskins","description":"Sharbat Gula. Iconic image from 1984<br\/>http:\/\/en.wikipedia.org\/wiki\/Afghan_Girl<br\/>Genetic algorithm. Over 1.3M random generations with 64000 chosen iterations to home in on the original image. Overlapping transparencies of 256 triangles with moving dither.","likes":21,"published":3,"flags":0,"tags":["2d","genetic","sharbatgula","geneticalgorithm"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ https:\/\/www.shadertoy.com\/view\/XslSRs\n\/\/ By David Hoskins.\n\n\/\/ Sharbat Gula. Iconic image from 1984.\n\/\/ Afghan Girl is an award-winning photograph by journalist Steve McCurry.\n\/\/ http:\/\/en.wikipedia.org\/wiki\/Afghan_Girl\n\n\/\/ Genetic algorithm. Over 1.3M random generations with 64000 chosen iterations\n\/\/ to home in on the original image.\n\/\/ Overlapping transparencies of 256 triangles with moving dither.\n\n\/\/ On Windows this will only work in the latest Chrome browser (36.0+).\n\/\/ (Hopefully, anyway)\n\n\/\/ Add noise to the triangles to make it a little clearer...\n#define ADD_DITHER\n\n\/\/ Fade in the dither for a nice effect. It may over stress your computer...\n\/\/#define FADE_IN_DITHER\n\nvec3 col = vec3(0.0);\nvec2 uv;\nconst vec2 INV_SCALE  = 1.0 \/ vec2(509.0, 509.0*450.0\/800.0);\nvec2 fcoord;\n\n\/\/========================================================================\n#ifdef ADD_DITHER\n#ifdef FADE_IN_DITHER\nvec2 randValues = vec2(0.01, 0.005) * (1.0+smoothstep(3.0, 0.0, iGlobalTime*.5)*20.0);\n#else\nconst vec2 randValues = vec2(0.01, 0.005);\n#endif\nvec2 Hash2( vec2 x )\n{\n\tfloat n = dot(x,vec2(1.12313,113.94871)) + iGlobalTime;\n    return fract(sin(n)*vec2(3758.5233,2578.1459));\n}\n#endif\n\n\/\/========================================================================\nvec2 unpackCoord(float f) \n{\n    \/\/ Needs a C++ 'modf', but sadly no...\n    return vec2(mod(f, 512.0),floor(f \/ 512.0)) * INV_SCALE;\n}\n\n\/\/========================================================================\nvec2 unpackColour(float f) \n{\n    return vec2(mod (f, 256.0),floor(f \/ 256.0)) \/ 256.0;\n}\n\n\/\/========================================================================\nvoid Tri(float pA, float pB, float pC, float pCol1, float pCol2)\n{\n\tvec2 pos = uv;\n\tvec2 a = unpackCoord(pA);\n\tvec2 b = unpackCoord(pB);\n\tvec2 c = unpackCoord(pC);\n#ifdef ADD_DITHER\n\tpos += Hash2(fcoord.xy) * randValues.x - randValues.y;\n#endif\n\n\t\/\/ Triangle test...\n\tvec2 as = pos-a;\n\tvec2 bs = pos-b;\n\tif  ( (b.x-a.x)*as.y-(b.y-a.y)*as.x > 0.0 &&\n\t\t  (a.x-c.x)*as.y-(a.y-c.y)*as.x > 0.0 &&\n    \t  (c.x-b.x)*bs.y-(c.y-b.y)*bs.x > 0.0)\n\t{\n\t\tvec2 c1 = unpackColour(pCol1);\n\t\tvec2 c2 = unpackColour(pCol2);\n\t\tif (c2.y > .24-iGlobalTime*.025)\n\t\t\tcol = mix (col, vec3(c1.x, c1.y, c2.x), c2.y); \n\t}\n}\n\n\/\/========================================================================\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fcoord = fragCoord;\n\tuv = fragCoord.xy \/ iResolution.xy;\n\t\n\t\/\/ Packed data parameters:\n\t\/\/ Tri( X1\/Y1, X2\/Y2, X3\/y3, RG, BA)\n\t\n\tTri(23490., 94141.,23995., 49878., 12444.);\n\tTri(76159., 29968.,31048., 64508., 15285.);\n\tTri(87417., 64563.,10556., 6177., 12319.);\n\tTri(52228., 28672.,-289., 13265., 7723.);\n\tTri(20242., -206.,121180., 42712., 12693.);\n\tTri(101054., 35554.,39155., 42192., 12656.);\n\tTri(33., -194.,88278., 10921., 10801.);\n\tTri(39628., 41723.,107893., 50936., 11349.);\n\tTri(63293., 41787.,86907., 64761., 14838.);\n\tTri(68248., 25395.,80775., 17556., 10042.);\n\tTri(145317., 70073.,83919., 59583., 15281.);\n\tTri(90276., 20319.,84365., 31188., 10039.);\n\tTri(82813., 59254.,77192., 40898., 14731.);\n\tTri(44579., 9424.,24769., 11946., 12101.);\n\tTri(75328., 23723.,92304., 16128., 11808.);\n\tTri(77644., 111575.,112088., 34770., 10628.);\n\tTri(72823., 76953.,98438., 6509., 10252.);\n\tTri(53687., 434.,53193., 65022., 15357.);\n\tTri(42941., -1.,49609., 47459., 14240.);\n\tTri(30837., 16948.,119., 18007., 8777.);\n\tTri(94071., 92535.,35195., 60385., 14834.);\n\tTri(80182., 139190.,144657., 16476., 9532.);\n\tTri(15434., 102451.,37888., 2147., 14339.);\n\tTri(46079., 97108.,76173., 2305., 11026.);\n\tTri(146527., 88106.,146539., 954., 9219.);\n\tTri(55226., 43978.,100802., 54266., 15269.);\n\tTri(21312., 33473.,14143., 22945., 14481.);\n\tTri(57616., 41221.,94607., 4354., 14851.);\n\tTri(3626., -472.,-461., 24531., 10873.);\n\tTri(73147., 95233.,80130., 42702., 3561.);\n\tTri(61643., 53477.,64247., 46839., 11949.);\n\tTri(30976., 37151.,90325., 47102., 15010.);\n\tTri(73014., 78193.,81784., 63229., 15354.);\n\tTri(15506., 29756.,13436., 16722., 14422.);\n\tTri(100618., 98490.,88751., 30957., 14129.);\n\tTri(78739., 91883.,82658., 44649., 11633.);\n\tTri(119168., 142569.,130280., 16480., 9540.);\n\tTri(137451., 136168.,137458., 37266., 12404.);\n\tTri(37746., 71052.,17239., 63998., 15340.);\n\tTri(16603., 34129.,36175., 51688., 9966.);\n\tTri(87200., 132157.,31355., 16966., 15152.);\n\tTri(119189., 83534.,119704., 27007., 9109.);\n\tTri(18164., 16136.,129808., 63740., 11907.);\n\tTri(53110., 79671.,35695., 41905., 15188.);\n\tTri(40448., 92221.,64527., 25171., 13103.);\n\tTri(106242., 80647.,58143., 63730., 15089.);\n\tTri(59721., 63292.,15692., 61395., 14060.);\n\tTri(95628., 37049.,81789., 60151., 8616.);\n\tTri(22296., 9460.,2299., 52165., 10381.);\n\tTri(37503., 68381.,106327., 2576., 15112.);\n\tTri(119069., 84363.,137504., 30393., 13182.);\n\tTri(25788., 20611.,-286., 33259., 14455.);\n\tTri(71817., 24648.,37664., 1551., 14085.);\n\tTri(19370., 17839.,16818., 41706., 10009.);\n\tTri(115470., 77999.,65703., 24256., 9034.);\n\tTri(88898., 17713.,22878., 58869., 15279.);\n\tTri(103681., 2108.,3135., 32543., 9969.);\n\tTri(86458., 46169.,76228., 3369., 11033.);\n\tTri(131912., 76083.,104321., 52989., 15230.);\n\tTri(48964., 126316.,42649., 31982., 7993.);\n\tTri(127301., 97640.,130904., 48360., 9603.);\n\tTri(95403., 23803.,106195., 18582., 12857.);\n\tTri(124435., 145780.,124435., 34932., 10009.);\n\tTri(84006., 16862.,18406., 3329., 8217.);\n\tTri(7252., 74071.,73043., 65269., 14578.);\n\tTri(127209., 126534.,126537., 29289., 8815.);\n\tTri(119069., 24788.,27392., 61436., 5333.);\n\tTri(42245., 22851.,48415., 54526., 14266.);\n\tTri(132419., 143109.,27890., 56564., 7854.);\n\tTri(42547., 33334.,18168., 13470., 9517.);\n\tTri(96616., 118103.,95544., 64504., 15270.);\n\tTri(113647., 114162.,62661., 32442., 14328.);\n\tTri(32201., -87.,-49., 509., 11529.);\n\tTri(69028., 53149.,30139., 1931., 10787.);\n\tTri(23757., 121554.,37554., 47051., 4424.);\n\tTri(86855., 88894.,18762., 65278., 15050.);\n\tTri(141800., 140962.,140967., 56572., 9214.);\n\tTri(82100., 69854.,100062., 63738., 2781.);\n\tTri(82468., 49670.,77358., 64568., 15214.);\n\tTri(67399., 84807.,52019., 47598., 14750.);\n\tTri(66937., 22303.,21801., 62716., 9948.);\n\tTri(39371., 84933.,-83., 28639., 13915.);\n\tTri(75083., 98700.,73021., 9509., 14891.);\n\tTri(146943., 146828.,53190., 50160., 9541.);\n\tTri(45216., 53941.,74392., 28158., 4145.);\n\tTri(125524., 75973.,115563., 256., 14592.);\n\tTri(15702., 71565.,73530., 59646., 15291.);\n\tTri(286., -196.,30570., 48850., 12729.);\n\tTri(99825., 99312.,14000., 1546., 15114.);\n\tTri(132027., 146851.,53153., 5775., 13070.);\n\tTri(-264., -196.,91000., 58622., 14999.);\n\tTri(107327., 130888.,88767., 35791., 8868.);\n\tTri(2559., 41455.,131487., 45351., 10585.);\n\tTri(41109., 18270.,46815., 3155., 14855.);\n\tTri(34159., 79243.,21631., 41186., 12376.);\n\tTri(81596., 81594.,115111., 35466., 14205.);\n\tTri(8421., 1306.,49878., 16987., 14362.);\n\tTri(51629., 33187.,72142., 16764., 15176.);\n\tTri(15871., 73648.,-2., 54098., 14270.);\n\tTri(109748., 49434.,114366., 546., 10761.);\n\tTri(62957., 74212.,79328., 59306., 10171.);\n\tTri(92671., 146943.,82904., 29606., 15165.);\n\tTri(41119., 33444.,53239., 3357., 10499.);\n\tTri(119125., 105681.,95483., 16232., 15160.);\n\tTri(19758., 25905.,101063., 5198., 15117.);\n\tTri(59947., 146432.,48128., 22123., 9544.);\n\tTri(45083., 374.,9082., 1329., 15109.);\n\tTri(-245., 318.,67961., 55805., 14997.);\n\tTri(22888., 31515.,30845., 291., 12049.);\n\tTri(62891., 10146.,53681., 40620., 13213.);\n\tTri(101247., 65186.,63152., 2365., 15105.);\n\tTri(146812., 82891.,146862., 37118., 15232.);\n\tTri(39284., 60805.,38747., 42705., 12696.);\n\tTri(35256., 61826.,41387., 57554., 13497.);\n\tTri(86256., 83708.,92404., 64969., 15243.);\n\tTri(83763., 54646.,117008., 43160., 13451.);\n\tTri(33895., 40014.,38458., 20725., 15164.);\n\tTri(17776., 16652.,10102., 5673., 14367.);\n\tTri(131567., 42823.,95732., 10561., 10008.);\n\tTri(45372., 66872.,81070., 33973., 12893.);\n\tTri(146766., 146744.,92220., 13382., 7731.);\n\tTri(71345., 12588.,105150., 29841., 13383.);\n\tTri(87503., 53663.,12791., 2598., 14602.);\n\tTri(36862., 95231.,83932., 14633., 10254.);\n\tTri(131422., 68862.,62729., 22128., 8555.);\n\tTri(-369., 134204.,0., 17559., 9511.);\n\tTri(31048., 42813.,26346., 65268., 14521.);\n\tTri(100135., 92555.,134468., 51965., 14241.);\n\tTri(84154., 66290.,72966., 57844., 11713.);\n\tTri(73357., 53125.,140622., 43254., 7812.);\n\tTri(111703., 146433.,125446., 3883., 13847.);\n\tTri(25869., 30290.,2370., 58297., 2973.);\n\tTri(94127., 118191.,114088., 16409., 12049.);\n\tTri(2369., 50047.,101683., 53245., 14236.);\n\tTri(95495., 81667.,82199., 65277., 15358.);\n\tTri(107971., -54.,511., 45312., 15188.);\n\tTri(89038., 146860.,57789., 1422., 13843.);\n\tTri(107055., 134204.,138795., 18765., 8725.);\n\tTri(81838., 63945.,77254., 51454., 13736.);\n\tTri(510., 92671.,-375., 30172., 7782.);\n\tTri(12114., 82310.,32546., 49132., 12936.);\n\tTri(29719., 14458.,26450., 12636., 14866.);\n\tTri(53604., 65194.,49832., 6472., 9246.);\n\tTri(105712., 14602.,110322., 37746., 9034.);\n\tTri(119633., 103735.,37699., 59901., 14506.);\n\tTri(88968., 121705.,112842., 64246., 3561.);\n\tTri(146532., 146432.,68613., 14131., 8213.);\n\tTri(-422., -361.,6245., 22954., 12387.);\n\tTri(94989., 63171.,246., 50640., 8347.);\n\tTri(91840., 85692.,79571., 49125., 12878.);\n\tTri(89395., 48395.,23843., 1053., 15105.);\n\tTri(70068., 18938.,121269., 63918., 4092.);\n\tTri(85854., 77688.,87413., 65277., 15355.);\n\tTri(1166., 10419.,20609., 37874., 7818.);\n\tTri(52287., 44099.,40022., 31696., 12705.);\n\tTri(128662., 77109.,130289., 262., 15110.);\n\tTri(111592., 119142.,103597., 10319., 8464.);\n\tTri(96882., 96882.,33647., 21095., 8961.);\n\tTri(124861., 373.,-48., 471., 7681.);\n\tTri(103639., 96653.,129773., 51454., 13179.);\n\tTri(146707., 70228.,30852., 788., 15114.);\n\tTri(-343., 48216.,6144., 14735., 10052.);\n\tTri(-1., 35272.,-91., 65195., 9952.);\n\tTri(142648., 134919.,33134., 49396., 10381.);\n\tTri(76659., 88948.,88410., 65018., 15357.);\n\tTri(41472., 18829.,55396., 777., 12804.);\n\tTri(124740., 93018.,97630., 14926., 8016.);\n\tTri(52224., -512.,66703., 2606., 14860.);\n\tTri(91688., 77888.,122461., 114., 9245.);\n\tTri(101164., 87329.,97149., 24216., 11319.);\n\tTri(59325., 63432.,103342., 45054., 9352.);\n\tTri(29929., 44845.,102209., 1046., 14081.);\n\tTri(33039., 95506.,40130., 64507., 5118.);\n\tTri(51584., 87436.,60764., 21663., 8825.);\n\tTri(118798., 118798.,26316., 18408., 14412.);\n\tTri(94361., 90949.,104701., 263., 15105.);\n\tTri(124342., 78081.,116632., 34683., 13993.);\n\tTri(79285., 47041.,81850., 65278., 15326.);\n\tTri(88897., 70892.,81216., 19830., 13096.);\n\tTri(44205., 21715.,43721., 11903., 14643.);\n\tTri(86680., 2316.,93336., 10077., 11545.);\n\tTri(137825., 53418.,53418., 58826., 11693.);\n\tTri(107282., 58246.,126305., 56292., 7871.);\n\tTri(122661., 13723.,127807., 4890., 7702.);\n\tTri(75546., 75546.,26522., 24137., 12062.);\n\tTri(133101., 110643.,133101., 64111., 10532.);\n\tTri(133028., 94058.,23491., 2., 15106.);\n\tTri(79211., 91503.,94563., 512., 15106.);\n\tTri(17103., 108620.,108620., 40164., 10532.);\n\tTri(54810., 136268.,135215., 8194., 13591.);\n\tTri(143042., 102435.,102437., 18372., 9752.);\n\tTri(90946., 99205.,136488., 55294., 13459.);\n\tTri(50142., 8077.,9103., 56836., 8369.);\n\tTri(33455., -235.,23842., 19033., 15152.);\n\tTri(88502., 129965.,144260., 7780., 14882.);\n\tTri(89964., 40822.,75658., 59646., 10668.);\n\tTri(108953., 138107.,121717., 28279., 11889.);\n\tTri(9267., 10254.,4138., 12449., 13359.);\n\tTri(91402., 95546.,109243., 258., 15106.);\n\tTri(55361., 55361.,35211., 31432., 13271.);\n\tTri(56852., 17620.,109743., 2054., 14855.);\n\tTri(24262., 108611.,35406., 7170., 15127.);\n\tTri(-95., 112111.,115145., 1538., 12033.);\n\tTri(146529., 146432.,43520., 65171., 12151.);\n\tTri(146545., 127557.,18432., 60., 15106.);\n\tTri(29544., 40308.,53016., 31647., 15189.);\n\tTri(511., 146942.,115135., 62546., 3049.);\n\tTri(45363., 58756.,72039., 44259., 15248.);\n\tTri(98230., 138453.,126685., 4637., 7686.);\n\tTri(13006., -325.,-285., 28597., 10851.);\n\tTri(94404., -237.,11601., 47867., 10652.);\n\tTri(89962., 77681.,86392., 65278., 15358.);\n\tTri(62625., 62976.,62469., 32948., 8944.);\n\tTri(38922., 54339.,63557., 3673., 14857.);\n\tTri(80727., 70512.,87386., 27469., 15155.);\n\tTri(23693., 8543.,11224., 4143., 10250.);\n\tTri(146457., 45074.,115805., 7467., 10767.);\n\tTri(41806., 74478.,61658., 40698., 8080.);\n\tTri(37888., 10240.,8290., 14249., 15153.);\n\tTri(146943., 146852.,12287., 64090., 15007.);\n\tTri(108359., 146762.,124162., 15192., 13355.);\n\tTri(46576., 70033.,70033., 19255., 11976.);\n\tTri(138555., 130805.,88460., 51187., 11674.);\n\tTri(139291., 12881.,10323., 21883., 10828.);\n\tTri(36271., -66.,31689., 19., 14850.);\n\tTri(109280., 127204.,103116., 13730., 8489.);\n\tTri(44544., 22736.,142936., 519., 15106.);\n\tTri(115502., 143616.,96429., 6206., 15134.);\n\tTri(133104., 70206.,70206., 52538., 10089.);\n\tTri(37226., 37738.,43868., 62440., 8620.);\n\tTri(25122., 11840.,32243., 3379., 8225.);\n\tTri(126201., 109292.,100124., 36859., 9552.);\n\tTri(63087., 48567.,63087., 50261., 11530.);\n\tTri(81956., 77361.,101427., 41255., 15187.);\n\tTri(16642., 89814.,54478., 26509., 15178.);\n\tTri(51938., 51984.,86817., 47588., 12697.);\n\tTri(129269., 75582.,119670., 42480., 11601.);\n\tTri(104326., 127327.,73608., 15479., 13869.);\n\tTri(26010., 34884.,22593., 38., 10497.);\n\tTri(39588., 145710.,130225., 6964., 14862.);\n\tTri(42534., 10752.,33926., 5963., 13337.);\n\tTri(92354., 65220.,58148., 37323., 11634.);\n\tTri(129269., 107785.,118664., 1280., 2853.);\n\tTri(137008., 143132.,131354., 21332., 12107.);\n\tTri(18210., 24910.,24352., 48891., 15297.);\n\tTri(26317., 17752.,25416., 41937., 8363.);\n\tTri(146462., 19764.,146935., 23934., 7758.);\n\tTri(95193., 115619.,74709., 12036., 8475.);\n\tTri(-512., 540.,11264., 1160., 12052.);\n\tTri(55086., 106369.,106369., 4138., 8744.);\n\tTri(32338., 17990.,25285., 11117., 14395.);\n\tTri(77066., 90383.,92918., 65277., 15358.);\n\tTri(25937., 10552.,8518., 17729., 15157.);\n\tTri(101779., 19098.,101265., 57338., 8110.);\n\tTri(75672., 38802.,42387., 17456., 11142.);\n\tTri(42306., 121548.,30887., 12367., 13859.);\n\n\tfragColor = vec4(min(col*1.35, 1.0), 1.0 );\n}\n","name":"","description":"","type":"image"}]}}