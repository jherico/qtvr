{"Shader":{"ver":"0.1","info":{"id":"lssGDn","date":"1367861261","viewed":931,"name":"Pseudo 3D Tunnel","username":"4rknova","description":"The classic tunnel effect.","likes":12,"published":3,"flags":0,"tags":["tunnel"],"hasliked":0},"renderpass":[{"inputs":[{"id":1,"src":"\/presets\/tex00.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ by nikos papadopoulos, 4rknova \/ 2013\n\/\/ WTFPL\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n\/\/ Notes\n\/\/ p: Screen coordinates in [-a,a]x[-1,1] space (aspect corrected).\n\/\/ t: The texture uv coordinates.\n\/\/\t  u: The angle between the positive x axis and p.\n\/\/\t  v: The inverse distance of p from the axis origin.\n\/\/ s: Scrolling offset to create the illusion of movement.\n\/\/ z: Texture uv scale factor.\n\/\/ m: Brightness scale factor.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2  p = (2. * fragCoord.xy \/ iResolution.xy - 1.)\n\t\t    * vec2(iResolution.x \/ iResolution.y,1.);\n\tvec2  t = vec2(atan(p.x, p.y) \/ 3.1416, 1. \/ length(p));\n\tvec2  s = iGlobalTime * vec2(.1, 1);\n\tvec2  z = vec2(3, 1);\n\tfloat m = t.y + .5;\n\n\tfragColor = vec4(texture2D(iChannel0, t * z + s).xyz \/ m, 1);\n}","name":"","description":"","type":"image"}]}}