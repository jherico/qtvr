{
	"Shader": 
	[
		{
			"ver": "0.1",
			"info": 
			{
				"id": "ldfGzr",
				"date": "1360897439",
				"viewed": 376,
				"name": "704",
				"username": "PauloFalcao",
				"description": "The GLSL version of 1k http:\/\/www.pouet.net\/prod.php?which=56992<br\/>The original code was made in 2008 using HLSL in RenderMonkey <img src=\"\/img\/emoticonHappy.png\"\/><br\/>",
				"likes": 9,
				"published": 3,
				"tags": 
				[
					"3d",
					"raymarching",
					"distancefields"
				],

				"hasliked": 0
			},

			"renderpass": 
			[
				{
					"inputs": 
					[
						
					],

					"outputs": 
					[
						
					],

					"code": "// 704 by @paulofalcao\n#pragma vr\n\nfloat time=iGlobalTime;\n\nfloat stime=sin(time);\nfloat ctime=cos(time);\n\nfloat inObj(in vec3 p){\n  float oP=length(p);\n  p.x=sin(p.x)+stime;\n  p.z=sin(p.z)+ctime;\n  return float(min(length(p)-1.5-sin(oP-time*4.0),p.y+3.0));\n}\n\nvoid main(void){\n  vec2 vPos=-1.0+2.0*gl_FragCoord.xy/iResolution.xy;\n\n  //Camera animation\n  vec3 vuv=vec3(stime,1,0);//view up vector\n  vec3 vrp=vec3(sin(time*0.7)*10.0,0,cos(time*0.9)*10.0); //view reference point\n  vec3 prp=vec3(sin(time*0.7)*20.0+vrp.x+20.0,\n                stime*4.0+4.0+vrp.y+3.0,\n                cos(time*0.6)*20.0+vrp.z+14.0); //camera position\n\n  //Camera setup\n  vec3 vpn=normalize(vrp-prp);\n  vec3 u=normalize(cross(vuv,vpn));\n  vec3 v=cross(vpn,u);\n  vec3 vcv=(prp+vpn);\n  vec3 scrCoord=vcv+vPos.x*u*iResolution.x/iResolution.y+vPos.y*v;\n  vec3 scp=normalize(iDir);\n\n  //Raymarching\n  const vec3 e = vec3(0.1,0,0);\n  const float maxd=200.0;\n\n  float s=0.1;\n  vec3 c,p,n;\n\n  //speed optimization -advance ray (simple raytracing) until plane y=2.5\n  float f=-(prp.y-2.5)/scp.y;\n  if (f>0.0) p=prp+scp*f;\n  else f=maxd;\n\n  for(int i=0;i<32;i++){\n    if (abs(s)<.01||f>maxd) break;\n    f+=s;\n    p=prp+scp*f;\n  s=inObj(p);\n  }\n \n  if (f<maxd){\n    if(p.y<-2.5){\n      if (fract(p.x*.5)>.5)\n        if (fract(p.z*.5)>.5)\n          c=vec3(0,0,0);\n        else\n          c=vec3(1,1,1);\n      else\n        if (fract(p.z*.5)>.5)\n          c = vec3(1,1,1);\n        else\n          c = vec3(0,0,0);\n      n=vec3(0,1,0);\n    }\n    else{\n      float d=length(p);\n      c=vec3((sin(d*.25-time*4.0)+1.0)/2.0,\n             (stime+1.0)/2.0,\n             (sin(d-time*4.0)+1.0)/2.0); //color\n      n=normalize(\n        vec3(s-inObj(p-e.xyy),\n             s-inObj(p-e.yxy),\n             s-inObj(p-e.yyx)));\n    }\n    float b=dot(n,normalize(prp-p));\n    gl_FragColor=vec4((b*c+pow(b,54.0))*(1.0-f*.005),1.0);\n  }\n  else gl_FragColor=vec4(0,0,0,1);\n}\n\n    ",
					"name": "",
					"description": "",
					"type": "image"
				}
			]
		}
	]
}