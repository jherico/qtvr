{"Shader":{"ver":"0.1","info":{"id":"ltX3zs","date":"1424294699","viewed":723,"name":"basic sounds","username":"dzira","description":"I have a better idea of how sounds work now so I made some basic waveforms: sine, saw, pyramid, square","likes":7,"published":3,"flags":8,"tags":["sound"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float mainSound(float time)\n{\n    float saw = 2.*fract(440.*time)-1.;\n    \n    float sine = sin(6.283185*440.*time);\n    \n    float pyr = 2.*abs(saw)-1.;\n    \n    float square = clamp(floor(saw*20.),-1.,1.);\n    \n    float r = mix(sine,saw,clamp(sin(time),0.,1.));\n    \n    r = mix(r,pyr,clamp(sin(time-3.14),0.,1.));\n    \n    r = mix(r,square,clamp(sin(time-4.7123),0.,1.));\n    \n    return r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = vec2(.03141592,6.)*(fragCoord.xy - iResolution.xy\/2.) \/ iResolution.x;\n    float s = uv.x+iGlobalTime;\n    s = mainSound(s);\n    s = clamp(floor(s\/uv.y),0.,1.);\n\tfragColor = vec4(s,s,s,1.0);\n}","name":"","description":"","type":"image"},{"inputs":[],"outputs":[{"channel":"0"}],"code":"vec2 mainSound(float time)\n{\n    float saw = 2.*fract(440.*time)-1.;\n    \n    float sine = sin(6.283185*440.*time);\n    \n    float pyr = 2.*abs(saw)-1.;\n    \n    float square = clamp(floor(saw*20.),-1.,1.);\n    \n    float r = mix(sine,saw,clamp(sin(time),0.,1.));\n    \n    r = mix(r,pyr,clamp(sin(time-3.14),0.,1.));\n    \n    r = mix(r,square,clamp(sin(time-4.7123),0.,1.));\n    \n    return vec2(r);\n}","name":"","description":"","type":"sound"}]}}