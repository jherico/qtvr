{"Shader":{"ver":"0.1","info":{"id":"MddGRS","date":"1450548342","viewed":229,"name":"Cloud shader","username":"skaven","description":"Some kind of schematic cloud.","likes":5,"published":3,"flags":0,"tags":["cloud","schematic"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float sphere(vec2 spherePos, vec2 pos, float radius)\n{\n    vec2 df = spherePos-pos;\n    return max((radius - sqrt(dot(df,df)))\/radius,0.0);\n}\n\n\nvec2 rotate(vec2 xy, float angle)\n{\n    float sn = sin(angle);\n    float cs = cos(angle);\n    return vec2(xy.x*cs-xy.y*sn, xy.y*cs + xy.x*sn);\n}\n\nfloat hash( float n ) { return fract(sin(n)*753.5453123); }\n\n\nfloat udBox( vec2 p, vec2 b )\n{\n  return length(max(abs(p)-b,0.0));\n}\n\nfloat cloud(vec2 uv)\n{\n    float intensity = sphere(vec2(0.0), uv, 0.2);\n    \n    for (int i=0;i<10;i++)\n    {\n        float ifl = float(i);\n        vec2 sph = vec2(hash(ifl), hash(ifl+67.47))*0.3;\n    \tintensity = max(intensity, sphere(rotate(sph.xy,(hash(ifl+18.47)*0.3 + 0.05)*iGlobalTime) , uv, hash(ifl+119.47)*0.16+0.05));\n    }\n    intensity = min(intensity, uv.y*10.0);\n    intensity = max(intensity, (0.02-udBox(uv, vec2(0.5,0.01))) * 10.0);\n    \n    return intensity;\n}\n\nfloat cloudSat(vec2 uv)\n{\n    float intensity = cloud(uv);\n    \n    return mix( 0.0, 1.0, smoothstep(0.06, 0.1, intensity));\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy - 0.5;\n    uv *= vec2(iResolution.x\/iResolution.y, 1.0);\n    uv *= 0.7;\n    uv.y += 0.175;\n    \n    \n    float occCloud = 0.0;\n    for (float y = -2.0; y<2.0;y+=0.5)\n    {\n        for (float x = -2.0; x<2.0;x+=0.5)\n        {\n            occCloud += cloud(uv*0.8 + vec2(x,y)*0.025 + vec2(0.08));\n        }\n\t}\n    occCloud = smoothstep(0.0,12.0,occCloud);\n    \n\n    vec3 skyColor = vec3(0.25,0.26,0.8);\n    vec3 col = mix(skyColor, skyColor*0.5, occCloud);\n        \n    col = mix(col, vec3(1.0), cloudSat(uv));\n    \/\/col = vec3(occCloud);\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}