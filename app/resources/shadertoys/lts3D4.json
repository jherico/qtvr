{"Shader":{"ver":"0.1","info":{"id":"lts3D4","date":"1422214311","viewed":732,"name":"Lorenz attractor","username":"FatumR","description":"Rough Lorenz Attractor","likes":2,"published":3,"flags":0,"tags":["procedural","2d"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define MAX_STEPS  64 \/\/ try to experiment with numb of steps\n#define THRESHOLD .01\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec2 centered_uv = uv * 2. - 1.;\n    centered_uv.x *= iResolution.x \/ iResolution.y;\n\n    \/\/ Lorenz attractor\n    \n    float x = 3.051522, y = 1.582542, z = 15.62388, x1, y1, z1;\n    float dt = 0.04;\n    float ac = 5., b = 15., c = 1.;\n    float r = mod(iGlobalTime \/ 2., 20.);\n    \n    float radius = 0.01;\n    float rez = 100.;\n    float dst = 0.;\n    \n    for (int i = 0; i < 400; i++){\n\n        x1 = x + ac*(-x+y)*dt;\n\t\ty1 = y + (r*x-y-z*x)*dt;\n\t\tz1 = z + (-c*z+x*y)*dt;\n        \n        x = x1;\ty = y1;\tz = z1;\n        \n        vec2 center = vec2(x, z - 15.) \/ 14.;\n        \/\/center.x = x;\n        \/\/center.y \/= 10.;\n        dst = length(centered_uv - center);\n        \/\/dst = step(0., dst - radius);\n        rez = min (rez, dst);\n    }\n    \n    \/\/ Color calc taken from here: https:\/\/www.shadertoy.com\/view\/ldf3DN\n    \/\/ Thanks iq.\n\tfloat c1 = pow( clamp( rez \/ 2.,    0.0, 1.0 ), 0.5 );\n\tfloat c2 = pow( clamp( r \/ 20., 0.0, 1.0 ), 2.0 );\n\tvec3 col1 = 0.5 + 0.5*sin( 3.0 + 4.0*c2 + vec3(0.0,0.5,1.0) );\n\tvec3 col = 2.0*sqrt(c1*col1);\n    \n    fragColor = vec4(vec3(col), 1.0);    \n}","name":"","description":"","type":"image"}]}}