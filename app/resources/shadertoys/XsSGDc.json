{"Shader":{"ver":"0.1","info":{"id":"XsSGDc","date":"1394112472","viewed":838,"name":"vector field","username":"FabriceNeyret2","description":"the noise color is interpreted as a vector.<br\/>F: toggle flow or gradient field<br\/>C: toggle curves or stick vectors<br\/>A: iterated offset along the field","likes":7,"published":3,"flags":16,"tags":["noise"],"hasliked":0},"renderpass":[{"inputs":[{"id":2,"src":"\/presets\/tex01.jpg","ctype":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":30,"src":"\/presets\/tex16.png","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":33,"src":"\/presets\/tex00.jpg","ctype":"keyboard","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"#define SIZE (iResolution.x\/12.) \/\/ cell size in texture coordinates\n#define ZOOM (2. *256.\/iResolution.x)\nfloat STRIP  = 1.;    \/\/ nbr of parallel lines per cell\nfloat V_ADV  = 1.;    \/\/ velocity\nfloat V_BOIL = .5;    \/\/ change speed\nfloat t = iGlobalTime;\n\nbool key_toggle(int ascii) \n{ return (texture2D(iChannel1,vec2((.5+float(ascii))\/256.,0.75)).x > 0.);}\n\nbool CONT , FLOW ,ATTRAC; \/\/ A: draw field or attractor ?\n\nvec3 flow( vec2 uv) {\n   \tvec2 iuv = floor(SIZE*(uv)+.5)\/SIZE;\n\tvec2 fuv = 2.*SIZE*(uv-iuv);\n\t\n\tvec2 pos = .01*V_ADV*vec2(cos(t)+sin(.356*t)+2.*cos(.124*t),sin(.854*t)+cos(.441*t)+2.*cos(.174*t));\tif (CONT) iuv=uv;\n\tvec3 tex = 2.*texture2D(iChannel0,iuv\/(ZOOM*SIZE)-pos).rgb-1.;\n\tfloat ft = fract(t*V_BOIL)*3.;\n\tif      (ft<1.) tex = mix(tex.rgb,tex.gbr,ft);\n\telse if (ft<2.) tex = mix(tex.gbr,tex.brg,ft-1.);\n\telse            tex = mix(tex.brg,tex.rgb,ft-2.);\n\treturn (FLOW) ? vec3(tex.y,-tex.x,tex.z): tex;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \tCONT   = key_toggle(67); \/\/ C: is field interpolated in cells ?\n \tFLOW   = key_toggle(70); \/\/ F: flow or gradient ?\n \tATTRAC = key_toggle(65); \/\/ A: draw field or attractor ?\n\n    vec2 uv = fragCoord \/ iResolution.y;\n\tvec3 col;\n    \n    if (ATTRAC) {\n    \tvec2 tex = uv;\n    \tfor(int i=0; i<15; i++) \n        \ttex = tex+.03*flow(tex).xy;\n    \t\tcol = texture2D(iChannel2,tex).rgb;\n    } else {    \n   \t\tvec2 iuv = floor(SIZE*(uv)+.5)\/SIZE;\n\t\tvec2 fuv = 2.*SIZE*(uv-iuv);\n    \tvec3 tex = flow(uv);\n   \t\tfloat v = fuv.x*tex.x+fuv.y*tex.y;     \n\t\t\/\/ v = length(fuv);\n\t\tv = sin(STRIP*v);\n\t\tcol = vec3(1.-v*v*SIZE) * mix(tex,vec3(1.),.5);\n    }\n\n\t\/\/ col = tex;\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}