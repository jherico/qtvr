{"Shader":{"ver":"0.1","info":{"id":"MslXz8","date":"1396923387","viewed":2803,"name":"Iterations - shiny","username":"iq","description":"The sixth variation of the \"Iterations\" shader. Orbit trapping for non linear operator applied repeatedly","likes":27,"published":3,"flags":0,"tags":["procedural","2d"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\t\t\t\t\t\t    \n\n\/\/ The sixth member of the \"Iterations\" collection:\n\/\/\n\/\/ Inversion:     https:\/\/www.shadertoy.com\/view\/XdXGDS\n\/\/ Worms:         https:\/\/www.shadertoy.com\/view\/ldl3W4\n\/\/ Coral:         https:\/\/www.shadertoy.com\/view\/4sXGDN\n\/\/ Guts:          https:\/\/www.shadertoy.com\/view\/MssGW4\n\/\/ Trigonometric: https:\/\/www.shadertoy.com\/view\/Mdl3RH\n\nvec3 shape( in vec2 p )\n{\n\tp *= 2.0;\n\t\n\tvec3 s = vec3( 0.0 );\n\tvec2 z = p;\n\tfor( int i=0; i<8; i++ ) \n\t{\n        \/\/ transform\t\t\n\t\tz += cos(z.yx + cos(z.yx + cos(z.yx+0.5*iGlobalTime) ) );\n\n        \/\/ orbit traps\t\t\n\t\tfloat d = dot( z-p, z-p ); \n\t\ts.x += 1.0\/(1.0+d);\n\t\ts.y += d;\n\t\ts.z += sin(atan(z.y-p.y,z.x-p.x));\n\t\t\n\t}\n\t\n\treturn s \/ 8.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n\tvec2 pc = (2.0*fragCoord.xy-iResolution.xy)\/min(iResolution.y,iResolution.x);\n\n\tvec2 pa = pc + vec2(0.04,0.0);\n\tvec2 pb = pc + vec2(0.0,0.04);\n\t\n    \/\/ shape (3 times for diferentials)\t\n\tvec3 sc = shape( pc );\n\tvec3 sa = shape( pa );\n\tvec3 sb = shape( pb );\n\n    \/\/ color\t\n\tvec3 col = mix( vec3(0.08,0.02,0.15), vec3(0.6,1.1,1.6), sc.x );\n\tcol = mix( col, col.zxy, smoothstep(-0.5,0.5,cos(0.5*iGlobalTime)) );\n\tcol *= 0.15*sc.y;\n\tcol += 0.4*abs(sc.z) - 0.1;\n\n    \/\/ light\t\n\tvec3 nor = normalize( vec3( sa.x-sc.x, 0.01, sb.x-sc.x ) );\n\tfloat dif = clamp(0.5 + 0.5*dot( nor,vec3(0.5773) ),0.0,1.0);\n\tcol *= 1.0 + 0.7*dif*col;\n\tcol += 0.3 * pow(nor.y,128.0);\n\n    \/\/ vignetting\t\n\tcol *= 1.0 - 0.1*length(pc);\n\t\n\tfragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}