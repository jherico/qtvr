{"Shader":{"ver":"0.1","info":{"id":"MlSXRV","date":"1444937675","viewed":635,"name":"ugly grass","username":"erkaman","description":"just a shader that draws some crappy 2D grass <img src=\"\/img\/emoticonHappy.png\"\/>","likes":4,"published":3,"flags":0,"tags":["2d","grass"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Eric Arneb\u00e4ck - erkaman\/2015\n\/\/ This work is licensed under a \n\/\/ Creative Commons Attribution 4.0 International License\n\n\n#define GRASS_BLADES 50\n\nfloat hash( float n ) { return fract(sin(n)*753.5453123); }\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\t\n    float n = p.x + p.y*157.0;\n    return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                   mix( hash(n+157.0), hash(n+158.0),f.x),f.y);\n}\n\n\/\/ 2D rotation matrix by approximately 36 degrees.\nmat2 m = mat2(0.8, 0.6, -0.6, 0.8);\n\nfloat fbm(vec2 r) {\n      \n    \n    float f;\n    \n    \/\/ rotate every octave to add more variation. \n    f  = 0.5000*noise( r ); r = r*m*2.01;\n    f += 0.2500*noise( r ); r = r*m*2.02;\n    f += 0.1250*noise( r ); r = r*m*2.03;\n    f += 0.0625*noise( r ); r = r*m*2.01;\n    \n    return f;   \n}\n\nfloat rand(float co){\n    return fract(sin(dot(vec2(co ,co ) ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat rand_range(float seed, float low, float high) {\n\treturn low + (high - low) * rand(seed);\n}\n\nvec3 rand_color(float seed, vec3 col, vec3 variation) {\n    return vec3(\n        col.x + rand_range(seed,-variation.x, +variation.x),\n        col.y + rand_range(seed,-variation.y, +variation.y),\n        col.z + rand_range(seed,-variation.z, +variation.z));\n}\n\n\nvec4 grass(vec2 p, int i, vec2 q, vec2 pos, float curve, float height) {\n\n    pos = q + pos;\n    pos.y += 0.5; \/\/ coordinate y=0 will represent the bottom. \n\n    float r = rand_range(float(i+200),0.002,0.005 ); \/\/ grass radius \n\n    \n    \/\/ the grass gets thinner and thinner, \n    \/\/ as it grows to the top of the screen\n    r = r * (1.0 - smoothstep(0.0,height, pos.y)); \n\n\n\n\n    float s = sign(curve); \/\/ curve value sign. \n    \/\/the grass shape is described by a function on the form\n    \/\/ x = c* y^2, where c is the curve.\n    float grass_curve = abs(pos.x - s* pow( curve*( pos.y),2.0));\n\n\n    \/\/ the grass ends at ymax. \n    float ymax = height; \n    \n    \/\/ sligthly blur the edges of the grass blade to decrease\n    \/\/ aliasing issues\n    float res = 1.0-(1.0 - smoothstep(r, r+0.006,grass_curve  )) *\n        (1.0 - smoothstep(ymax-0.1, ymax, pos.y));\n   \n    \n    \/\/ grass bottom is dark, but the blade gets gradually brighter as it\n    \/\/ grows upward.\n    vec3 bottom_color = rand_color(float(i),vec3(0.10,0.3,0.1), vec3(0.0,0.20,0.0));\n    vec3 top_color =  rand_color(float(i),vec3(0.40,0.6,0.2), vec3(0.0,0.20,0.0));\n    vec3 col = mix(bottom_color,top_color,pos.y);\n    \n   \n    \/\/ gradually make the grass color lighter as we approach the edges; \n    \/\/ makes for a slight 3D effect.\n    col = col + vec3(0.0,0.10,0.0)* (1.0-smoothstep(0.0, r,grass_curve));\n    \n\n    \/\/ add noise in order to add slight visual interest. \n    vec2 a = 104.0*vec2(p.xy);   \n    a.x *= 2.9;\n    a.y *= 0.2;\n    float f = fbm(a);\n    col = mix(col - vec3(0.0,0.05,0.0) , col + vec3(0.0,0.1,0.0) ,f);\n       \n   return vec4(col, 1.0-res);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy \/ iResolution.xy;\n\n    vec3 col = vec3(0,0,0); \/\/ black background color. \n\n    vec2 q = p - vec2(0.5,0.5);\n\n    for(int i = 0; i <GRASS_BLADES; i += 1){\n\n        float height = rand_range(float(i+2),0.1,0.9 );\n\n        \/\/ grass curve depends on the height. \n        float max_curve = 1.0 - height + 0.40;\n\n        float curve = rand_range(float(i+1),-max_curve,max_curve );\n            \n        vec2 pos = vec2(rand_range(float(i+3),-0.35,0.35 ),0.0);\n       \n        vec4 ret = grass(p,i,q,\n                         pos,\n                         curve, \n                         height);\n        \n        \/\/ blend the grass with the background. \n        col = mix(col, ret.xyz, ret.w);\n    }\n    \n   \n\tfragColor = vec4(col,1.0);\n}\n","name":"","description":"","type":"image"}]}}