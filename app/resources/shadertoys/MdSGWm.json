{"Shader":{"ver":"0.1","info":{"id":"MdSGWm","date":"1399139645","viewed":822,"name":"Benham's Disk","username":"P_Malin","description":"Do you perceive color from this greyscale shader?<br\/>(click the mouse to change the rotation speed) <br\/>http:\/\/en.wikipedia.org\/wiki\/Benham's_top","likes":5,"published":3,"flags":0,"tags":["2d","illusion"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Benham's Disk - @P_Malin\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ Do you perceive color from this greyscale shader?\n\/\/ (click the mouse to change the rotation speed) \n\/\/ http:\/\/en.wikipedia.org\/wiki\/Benham's_top\n\n#define saturate(X) clamp(X, 0.0, 1.0)\n\nfloat Ramp( const in float x, const in float fBegin, const in float fEnd, const in float fFeather )\n{\n\tfloat fBeginScale = 1.0 \/ (fFeather * 2.0);\n\tfloat fBeginOffset = (fFeather - fBegin) \/ (fFeather * 2.0);\n\tfloat fFeatherBegin = saturate(x * fBeginScale + fBeginOffset);\n\n\tfloat fEndScale = -1.0 \/ (fFeather * 2.0);\n\tfloat fEndOffset = (fEnd + fFeather) \/ (fFeather * 2.0);\n\tfloat fFeatherEnd = saturate(x * fEndScale + fEndOffset);\n\t\n\treturn min( fFeatherBegin, fFeatherEnd );\n}\n\nfloat Arc( float fAngle, float fAngleFeather, float fAngleBegin, float fAngleEnd, float fDist, float fDistFeather, float fDistBegin, float fDistEnd)\n{\n\treturn min(Ramp( fAngle, fAngleBegin, fAngleEnd, fAngleFeather ),Ramp( fDist, fDistBegin, fDistEnd, fDistFeather ));\n}\n\nfloat DiskPattern( float fAngle, float fDist, float fAngleFeather, float fDistFeather )\n{\n\tfloat fResult = 0.0;\n\n\t\/\/ Semicircle\t\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, -0.5, 0.25, fDist, fDistFeather, -10.0, 10.0) );\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, 0.75, 1.5, fDist, fDistFeather, -10.0, 10.0) );\n\n\tconst float fStripeDistWidth = 0.025;\n\tconst float fStripeDistSpacing = 0.05;\n\t\n\tfloat fStripeDist = 1.0 \/ 5.0;\n\n\tfloat fStripeAngle1;\n\tfloat fStripeAngle2;\n\t\n\tfStripeAngle1 = -0.5;\n\tfStripeAngle2 = 0.25 + 1.0 \/ 8.0;\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, fStripeAngle1, fStripeAngle2, fDist, fDistFeather, fStripeDist, fStripeDist+fStripeDistWidth) );\n\tfStripeDist += fStripeDistSpacing;\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, fStripeAngle1, fStripeAngle2, fDist, fDistFeather, fStripeDist, fStripeDist+fStripeDistWidth) );\n\tfStripeDist += fStripeDistSpacing;\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, fStripeAngle1, fStripeAngle2, fDist, fDistFeather, fStripeDist, fStripeDist+fStripeDistWidth) );\n\tfStripeDist += fStripeDistSpacing;\n\t\n\tfStripeAngle1 = 0.25 + 1.0 \/ 8.0;\n\tfStripeAngle2 = 0.25 + 2.0 \/ 8.0;\n\n\tfStripeDist += fStripeDistSpacing;\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, fStripeAngle1, fStripeAngle2, fDist, fDistFeather, fStripeDist, fStripeDist+fStripeDistWidth) );\n\tfStripeDist += fStripeDistSpacing;\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, fStripeAngle1, fStripeAngle2, fDist, fDistFeather, fStripeDist, fStripeDist+fStripeDistWidth) );\n\tfStripeDist += fStripeDistSpacing;\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, fStripeAngle1, fStripeAngle2, fDist, fDistFeather, fStripeDist, fStripeDist+fStripeDistWidth) );\n\tfStripeDist += fStripeDistSpacing;\n\n\tfStripeAngle1 = 0.25 + 2.0 \/ 8.0;\n\tfStripeAngle2 = 0.25 + 3.0 \/ 8.0;\n\n\tfStripeDist += fStripeDistSpacing;\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, fStripeAngle1, fStripeAngle2, fDist, fDistFeather, fStripeDist, fStripeDist+fStripeDistWidth) );\n\tfStripeDist += fStripeDistSpacing;\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, fStripeAngle1, fStripeAngle2, fDist, fDistFeather, fStripeDist, fStripeDist+fStripeDistWidth) );\n\tfStripeDist += fStripeDistSpacing;\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, fStripeAngle1, fStripeAngle2, fDist, fDistFeather, fStripeDist, fStripeDist+fStripeDistWidth) );\n\tfStripeDist += fStripeDistSpacing;\n\n\tfStripeAngle1 = 0.25 + 3.0 \/ 8.0;\n\tfStripeAngle2 = 1.5;\n\n\tfStripeDist += fStripeDistSpacing;\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, fStripeAngle1, fStripeAngle2, fDist, fDistFeather, fStripeDist, fStripeDist+fStripeDistWidth) );\n\tfStripeDist += fStripeDistSpacing;\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, fStripeAngle1, fStripeAngle2, fDist, fDistFeather, fStripeDist, fStripeDist+fStripeDistWidth) );\n\tfStripeDist += fStripeDistSpacing;\n\tfResult = max( fResult, Arc(fAngle, fAngleFeather, fStripeAngle1, fStripeAngle2, fDist, fDistFeather, fStripeDist, fStripeDist+fStripeDistWidth) );\n\tfStripeDist += fStripeDistSpacing;\n\n\treturn fResult;\n}\n\nfloat GetShade(vec2 fragCoord)\n{\n\tvec2 vUV = fragCoord.xy \/ iResolution.xy;\n\t\n\tvec2 vPos = vUV * 2.0 - 1.0;\n\tvPos.x *= iResolution.x \/ iResolution.y;\n\t\n\tfloat fAngle = atan(vPos.x, vPos.y) \/ (3.14159 * 2.0);\n\tfloat fDist = length(vPos);\n\t\n\tconst float fScale = 0.9;\n\t\t\n\tfDist \/= fScale; \/\/ make it slightly smaller\n\n\tfloat fSpeed = -5.0;\n\t\n\tif(iMouse.z > 0.0)\n\t{\n\t\tfloat fMouse = (iMouse.x\/iResolution.x);\n\t\tfSpeed = (fMouse - 0.5) * 20.0;\n\t}\n\t\n\tfAngle = fract(fAngle + iGlobalTime * fSpeed);\n\t\t\t\n\tconst float fShutterAngle = 1.0; \/\/ Motion blur factor\n\tfloat fAngleFeather = abs(fSpeed * fShutterAngle * (1.0 \/ 60.0));\n\tfAngleFeather = max( fAngleFeather, 0.001 );\n\tfloat fDistFeather = fScale * 2.0 \/ iResolution.y;\n\n\tfloat fShade = 0.5;\n\n\tfShade = 1.0 - DiskPattern( fAngle, fDist, fAngleFeather, fDistFeather );\n\t\n\tfloat fDiscOutline = Ramp( fDist, -0.5, 1.0, fDistFeather );\n\t\n\tfShade = mix(0.5, fShade, fDiscOutline);\n\n\t\/\/fShade = sqrt(fShade);\n\n\treturn fShade;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat fShade = GetShade(fragCoord);\n\t\n\tvec3 vCol = vec3(fShade);\t\n\t\n\tfragColor = vec4(vCol,1.0);\n\n}\n","name":"","description":"","type":"image"}]}}