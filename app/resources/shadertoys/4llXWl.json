{"Shader":{"ver":"0.1","info":{"id":"4llXWl","date":"1440631540","viewed":969,"name":"Shadertoy Paint","username":"Alway_PanicButton","description":"Mouse paint; color shifts over time as shown on border. Number keys to toggle textures and colors. Q,W change brush size. Uses a variation on the scanline render technique ( https:\/\/www.shadertoy.com\/view\/XtsSDH ) using discard to avoid drawing pixels.","likes":1,"published":3,"flags":16,"tags":["paint","userinput"],"hasliked":0},"renderpass":[{"inputs":[{"id":4,"src":"\/presets\/tex03.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":8,"src":"\/presets\/tex07.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":10,"src":"\/presets\/tex09.jpg","ctype":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":33,"src":"\/presets\/tex00.jpg","ctype":"keyboard","channel":3,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"const float KEY_1 = 49.5\/256.0;\nconst float KEY_2 = 50.5\/256.0;\nconst float KEY_3 = 51.5\/256.0;\nconst float KEY_4 = 52.5\/256.0;\n\nconst float KEY_Q = 81.5\/256.0;\nconst float KEY_W = 87.5\/256.0;\nconst float KEY_E = 69.5\/256.0;\nconst float KEY_R = 82.5\/256.0;\n\nvec3 HSVtoRGB(vec3 hsv);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec2 pointer = iMouse.xy \/ iResolution.xy;\n    \n    \n    float Q = texture2D( iChannel3, vec2( KEY_Q, 0.75 )).r;\n    float W = texture2D( iChannel3, vec2( KEY_W, 0.75 )).r;\n    \n    vec2 brush = vec2(1.) * iResolution.xy \/ iResolution.xx;\n    if( Q > .5 )\n        brush.x *= 8.;\n    if( W > .5 )\n        brush.y *= 8.;\n    \n    if( (length( (uv - pointer) * brush ) > 0.1 || iMouse.z < 0.) && (uv.x < 0.95 && uv.y < 0.95) )\n        discard;\n    pointer.x = dFdx( fragColor.x ) *1000.;\n    float pallette = mod( iGlobalTime, 8. );\n    vec2 localuv = uv - pointer + .1;\n    \n    float tex1 = texture2D( iChannel3, vec2( KEY_1, 0.75 )).r;\n    float tex2 = texture2D( iChannel3, vec2( KEY_2, 0.75 )).r;\n    float tex3 = texture2D( iChannel3, vec2( KEY_3, 0.75 )).r;\n    float tex4 = texture2D( iChannel3, vec2( KEY_4, 0.75 )).r;\n    \n    if( tex2 > .5 )\n        fragColor.rgb += texture2D( iChannel0, localuv ).rgb;\n    if( tex3 > .5 )\n        fragColor.rgb += texture2D( iChannel1, localuv ).rgb;\n    if( tex4 > .5 )\n        fragColor.rgb += texture2D( iChannel2, localuv ).rgb;\n    \n    if( !(tex1 > .5) )\n    {\n        vec3 hsv = vec3(mod(iGlobalTime, 10.) \/ 10., 0.5, 0.5 );\n        fragColor.rgb += HSVtoRGB( hsv ) \/ 255.;\n    }\n    fragColor.rgb *= abs(2.0 - mod( iGlobalTime, 4. ));\n\tfragColor.a = 1.;\n}\n\n\n\nvec3 HSVtoRGB(vec3 hsv)\n{\n\tfloat R, G, B;\n\tfloat H = hsv.x;\n\tfloat S = hsv.y;\n\tfloat V = hsv.z;\n\tif( S == 0.0 )\n    {\n        R = G = B = floor(V * 255.0);\n    }\n    else\n    {\n        float vH = H * 6.0;\n        float vI = floor( vH );\n        float   v = floor(V * 255.0);\n        float  v1 = floor(V * (1.0 - S) * 255.0);\n        float  v2 = floor(V * (1.0 - S * (vH - vI)) * 255.0);\n        float  v3 = floor(V * (1.0 - S * (1.0 - (vH - vI))) * 255.0);\n\n        if     ( vI == 0.0 ) { R =  v; G = v3; B = v1; }\n        else if( vI == 1.0 ) { R = v2; G =  v; B = v1; }\n        else if( vI == 2.0 ) { R = v1; G =  v; B = v3; }\n        else if( vI == 3.0 ) { R = v1; G = v2; B =  v; }\n        else if( vI == 4.0 ) { R = v3; G = v1; B =  v; }\n        else               { R =  v; G = v1; B = v2; }\n    }\n\treturn vec3(R,G,B);\n}","name":"","description":"","type":"image"}]}}