{"Shader":{"ver":"0.1","info":{"id":"MdsXDr","date":"1399647787","viewed":697,"name":"motion illusion 2","username":"FabriceNeyret2","description":"mouse.y to tune B\/W thickness, or T for time varying.","likes":0,"published":3,"flags":0,"tags":["illusion"],"hasliked":0},"renderpass":[{"inputs":[{"id":33,"src":"\/presets\/tex00.jpg","ctype":"keyboard","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ some examples here : http:\/\/www.psy.ritsumei.ac.jp\/~akitaoka\/uzu8e.html\n\n#define N 36. \/\/ squares on a circle\n\nfloat  R1=.7;        \/\/ square side relative to its cell.\n\n#define PI 3.1415927\nfloat  t=iGlobalTime;\nvec4 FragColor;\n\nbool keyToggle(int ascii) {\n\treturn (texture2D(iChannel2,vec2((.5+float(ascii))\/256.,0.75)).x > 0.);\n}\n\nfloat rnd(float i) { return fract(sin(i*1323.23)*1e5); } \n\t\t\t\t\t\t\t\t  \nvoid rabbit(vec2 uv) {\n\tfloat r;\n\tt = floor(3.*t);\n\tvec2 pos = vec2(1.3,1.)*(2.*vec2(rnd(t),rnd(t-543.34))-1.);\n\tuv = uv-pos;\n\tr = smoothstep(1.,.97,10.*length(uv));\n\tr += smoothstep(1.,.97,10.*4.*length(uv+vec2(.1,.0)));\t\n\tr += smoothstep(1.,.97,10.*1.5*length(uv-vec2(.05,.1)));\t\n\tuv.x *= 6.; \n\tr += smoothstep(1.,.97,10.*length(uv-vec2(.2,.2)));\n\tr += smoothstep(1.,.97,10.*length(uv-vec2(.4,.18)));\n\tr += smoothstep(1.,.97,10.*length(uv-vec2(.2,-.03)));\n\tr += smoothstep(1.,.97,10.*length(uv-vec2(.4,-.03)));\n\tFragColor += vec4(2.*r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.*(fragCoord.xy \/ iResolution.y - vec2(.85,.5));\n\n\tif (iMouse.z<=0.) {\n\t\tR1 = (keyToggle(32)) ? .8+.2*sin(t\/5.) : .9;\n\t} else {\n\t\tR1 = iMouse.y\/iResolution.y;\n\t}\n\t\n\tfloat r = length(uv), a = atan(uv.y,uv.x); \/\/ to polar\n\t\n\t\/\/ cells in polar\n\tr = 3.+log(r)*N\/6. +.5; \/\/ r*N+.5;\n\ta = N*a\/(2.*PI)+.5;\n\tfloat ix = floor(r),\n\t\t  iy = floor(a),\n\t      y = fract(r),     \t\t\/\/ 0..1\n\t      x = 2.*(fract(a)-.5);  \t\/\/ -1..1\n\n\n\tvec3 col = (mod(ix+iy,2.)<1.) ? vec3(0.,0.,(y<R1)?1.-.8*y\/R1:0.) \n\t\t\t\t\t\t\t\t  : (y<R1)?.5*vec3(vec2(.8+.2*y\/R1),0.):vec3(.9);\n\n\tFragColor = vec4(col,1.);\n\trabbit(uv);\n    fragColor=FragColor;\n}","name":"","description":"","type":"image"}]}}