{"Shader":{"ver":"0.1","info":{"id":"Xlf3RS","date":"1422737308","viewed":804,"name":"Video BillBoarding","username":"aiekick","description":"shadertoy version of BillBoard shader from qt540 sample \"qmlvideofx\" integrated in my splitter effect framework<br\/>Mouse x => control divider<br\/>Mouse Y => control billboard size","likes":11,"published":3,"flags":0,"tags":["video","billboarding"],"hasliked":0},"renderpass":[{"inputs":[{"id":12,"src":"\/presets\/vid01.webm","ctype":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ Splitter framework\n\/\/ put tranform effect in effect function\n\/\/ put source to tranform in bg function\n\/\/ getUV is the func for the define of the coord system\n\n\/\/ global yVar is the var controled by y mouse axis from range 0. to 1.\n\/\/ s => iResolution.xy\n\/\/ g => fragCoord.xy\n\/\/ m => iMouse.xy\n\/\/\/\/\/VARS\/\/\/\/\/\/\/\/\/\/\/\/\/\/\nfloat yVar;\nvec2 s,g,m;\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\n\/\/your funcs here if you want\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/ source to transform\nvec3 bg(vec2 uv)\n{\n    return texture2D(iChannel0, uv).rgg;\n}\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/ transform effect\nvec3 effect(vec2 uv, vec3 col)\n{\n    float grid = yVar * 10.+5.;\n    float step_x = 0.0015625;\n    float step_y = step_x * s.x \/ s.y;\n\tfloat offx = floor(uv.x  \/ (grid * step_x));\n    float offy = floor(uv.y  \/ (grid * step_y));\n    vec3 res = bg(vec2(offx * grid * step_x , offy * grid * step_y));\n    vec2 prc = fract(uv \/ vec2(grid * step_x, grid * step_y));\n    vec2 pw = pow(abs(prc - 0.5), vec2(2.0));\n    float  rs = pow(0.45, 2.0);\n    float gr = smoothstep(rs - 0.1, rs + 0.1, pw.x + pw.y);\n    float y = (res.r + res.g + res.b) \/ 3.0;\n    vec3 ra = res \/ y;\n    float ls = 0.3;\n    float lb = ceil(y \/ ls);\n    float lf = ls * lb + 0.3;\n    res = lf * res;\n    col = mix(res, vec3(0.1, 0.1, 0.1), gr);\n    return col;\n}\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/ screen coord system\nvec2 getUV()\n{\n    return g \/ s; \n}\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\/\/\/do not modify\/\/\/\/\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n   \ts = iResolution.xy;\n    g = fragCoord.xy;\n    m = iMouse.x==0.?m = s\/2.:iMouse.xy;\n    yVar = m.y\/s.y;\n   \tvec2 uv = getUV(); \n    vec3 tex = bg(uv);\n    vec3 col = g.x<m.x?effect(uv,tex):tex;\n   \tcol = mix( col, vec3(0.), 1.-smoothstep( 1., 2., abs(m.x-g.x) ) );    \n\tfragColor = vec4(col,1.);\n}","name":"","description":"","type":"image"}]}}