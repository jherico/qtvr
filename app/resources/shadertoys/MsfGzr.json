{"Shader":{"ver":"0.1","info":{"id":"MsfGzr","date":"1360966572","viewed":2227,"name":"To the road of ribbon","username":"XT95","description":"A raymarched tunnel with a ribbon and a reflection pass","likes":37,"published":3,"flags":0,"tags":["3d","raymarching","distancefield","reflection","ribbon"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float tunnel(vec3 p)\n{\n\treturn cos(p.x)+cos(p.y*1.5)+cos(p.z)+cos(p.y*20.)*.05;\n}\n\nfloat ribbon(vec3 p)\n{\n\treturn length(max(abs(p-vec3(cos(p.z*1.5)*.3,-.5+cos(p.z)*.2,.0))-vec3(.125,.02,iGlobalTime+3.),vec3(.0)));\n}\n\nfloat scene(vec3 p)\n{\n\treturn min(tunnel(p),ribbon(p));\n}\n\nvec3 getNormal(vec3 p)\n{\n\tvec3 eps=vec3(.1,0,0);\n\treturn normalize(vec3(scene(p+eps.xyy),scene(p+eps.yxy),scene(p+eps.yyx)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 v = -1.0 + 2.0 * fragCoord.xy \/ iResolution.xy;\n\tv.x *= iResolution.x\/iResolution.y;\n \n\tvec4 color = vec4(0.0);\n\tvec3 org   = vec3(sin(iGlobalTime)*.5,cos(iGlobalTime*.5)*.25+.25,iGlobalTime);\n\tvec3 dir   = normalize(vec3(v.x*1.6,v.y,1.0));\n\tvec3 p     = org,pp;\n\tfloat d    = .0;\n\n\t\/\/First raymarching\n\tfor(int i=0;i<64;i++)\n\t{\n\t  \td = scene(p);\n\t\tp += d*dir;\n\t}\n\tpp = p;\n\tfloat f=length(p-org)*0.02;\n\n\t\/\/Second raymarching (reflection)\n\tdir=reflect(dir,getNormal(p));\n\tp+=dir;\n\tfor(int i=0;i<32;i++)\n\t{\n\t\td = scene(p);\n\t \tp += d*dir;\n\t}\n\tcolor = max(dot(getNormal(p),vec3(.1,.1,.0)), .0) + vec4(.3,cos(iGlobalTime*.5)*.5+.5,sin(iGlobalTime*.5)*.5+.5,1.)*min(length(p-org)*.04, 1.);\n\n\t\/\/Ribbon Color\n\tif(tunnel(pp)>ribbon(pp))\n\t\tcolor = mix(color, vec4(cos(iGlobalTime*.3)*.5+.5,cos(iGlobalTime*.2)*.5+.5,sin(iGlobalTime*.3)*.5+.5,1.),.3);\n\n\t\/\/Final Color\n\tvec4 fcolor = ((color+vec4(f))+(1.-min(pp.y+1.9,1.))*vec4(1.,.8,.7,1.))*min(iGlobalTime*.5,1.);\n\tfragColor = vec4(fcolor.xyz,1.0);\n}\n","name":"","description":"","type":"image"}]}}