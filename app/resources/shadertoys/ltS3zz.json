{"Shader":{"ver":"0.1","info":{"id":"ltS3zz","date":"1426624117","viewed":659,"name":"STYLE?3","username":"Branch","description":"STYLE?3","likes":0,"published":3,"flags":0,"tags":["style3"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float roundBox(vec2 coord, vec2 pos, vec2 b, float c ){\n  return 1.-floor(length(max(abs(coord-pos)-b,c)));\n}\nfloat circle(vec2 coord, vec2 pos, float size){\n    return min(floor(distance(coord,pos)-size),0.);\n}\nfloat sdCapsule( vec2 p, vec2 a, vec2 b, float r ){\n    vec2 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)\/dot(ba,ba), 0.0, 1.0 );\n    return min(floor(length( pa - ba*h ) - r),0.);\n}\nmat2 rotate(float Angle)\n{\n    mat2 rotation = mat2(\n        vec2( cos(Angle),  sin(Angle)),\n        vec2(-sin(Angle),  cos(Angle))\n    );\n\treturn rotation;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 p = fragCoord.xy \/ iResolution.xy;\n\tfloat aspectCorrection = (iResolution.x\/iResolution.y);\n\tvec2 coordinate_entered = 2.0 * p - 1.0;\n\tvec2 coord = vec2(aspectCorrection,1.0) *coordinate_entered;\n    vec2 s = coord;\n\tfloat vignette = 1.0 \/ max(0.25 + 0.3*dot(coord,coord),1.);\n    \n\tvec3 COLOR =(vec3(0.9,0.4,0.5)\n        \t\t+vec3(0.2,0.5,0.2) );\n    if(mod(coord.y*200.+coord.x*200.,8.)<1.1){\n        COLOR -= vec3(0.05);\n    }else if(mod(coord.y*200.-coord.x*200.,8.)<1.1){\n        COLOR -= vec3(0.05);\n    }\n    coord *= rotate(iGlobalTime*0.1);\n\tcoord \/= 1.0+iGlobalTime*iGlobalTime*0.11;\n    coord += 0.01*vec2(cos(iGlobalTime),sin(iGlobalTime))\/(1.0+iGlobalTime*0.1);\n    for(float j = 0.0; j < 6.0; j+=2.0){\n    for(float i = 0.0; i < 20.0; i++){\n        float spin = iGlobalTime*.1111*sin(j);\n        float depth = 0.01*iGlobalTime+j;\n    \tfloat Tfast = max(iGlobalTime - (2.0 * depth), 0.0) * 10.0;\n        float bouncing = (0.5-0.5*cos(Tfast)\/(1.0+Tfast*Tfast*0.01));\n    \tCOLOR -= (0.4*j)*vec3(0.4+sin(j)*.1,0.4,0.3)*sdCapsule(coord, vec2(0.0), bouncing*(1.0\/(depth*2.0))*vec2(cos(spin+depth+i*3.141*0.1),sin(spin+depth+i*3.141*0.1)), 0.05\/depth);\n    }\n    for(float i = 0.0; i < 20.0; i++){\n        float spin = iGlobalTime*.1*sin(j);\n        float depth = 0.01*iGlobalTime+j;\n    \tfloat Tfast = max(iGlobalTime - 2.0 - (2.0 * depth), 0.0) * 10.0;\n        float bouncing = (0.5-0.5*cos(Tfast)\/(1.0+Tfast*Tfast*0.01));\n    \tCOLOR += (0.4*j)*vec3(1.6)*sdCapsule(coord, vec2(0.0), bouncing*(0.5\/(depth*2.0))*vec2(cos(spin+depth+i*3.141*0.1),sin(spin+depth+i*3.141*0.1)), 0.025\/depth);\n    }\n    }\n\n    coord = vec2(mod(s.x,.999)-.333,mod(s.y,.75)-0.21);\n    \n\tfragColor = vec4( texture2D(iChannel0,s).rgb*.04+.7*COLOR*vignette\n         \t\t\t\t,1.0);\n} ","name":"","description":"","type":"image"}]}}