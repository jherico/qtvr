{"Shader":{"ver":"0.1","info":{"id":"MdlGDM","date":"1372318899","viewed":1161,"name":"waterly video - test","username":"FabriceNeyret2","description":"distort a texture with noise","likes":5,"published":3,"flags":0,"tags":["procedural"],"hasliked":0},"renderpass":[{"inputs":[{"id":10,"src":"\/presets\/tex09.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":29,"src":"\/presets\/vid02.ogv","ctype":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"float SCALE = 1.;\n\n#define ANIM true\n\n\/\/ --- noise functions from https:\/\/www.shadertoy.com\/view\/XslGRr\n\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nmat3 m = mat3( 0.00,  0.80,  0.60,\n              -0.80,  0.36, -0.48,\n              -0.60, -0.48,  0.64 );\n\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return res;\n}\n\nfloat fbm( vec3 p )\n{\n    float f;\n    f  = 0.5000*noise( p ); p = m*p*2.02;\n    f += 0.2500*noise( p ); p = m*p*2.03;\n    f += 0.1250*noise( p ); p = m*p*2.01;\n    f += 0.0625*noise( p ); \n    return f;\n}\n\/\/ --- End of: Created by inigo quilez --------------------\nfloat mynoise ( vec3 p)\n{\n\t return noise(p);\n\t \/\/return .5+.5*sin(50.*noise(p));\n}\nfloat myfbm( vec3 p )\n{\n    float f;\n    f  = 0.5000*mynoise( p ); p = m*p*2.02;\n    f += 0.2500*mynoise( p ); p = m*p*2.03;\n    f += 0.1250*mynoise( p ); p = m*p*2.01;\n    f += 0.0625*mynoise( p ); p = m*p*2.05;\n    f += 0.0625\/2.*mynoise( p ); p = m*p*2.02;\n    f += 0.0625\/4.*mynoise( p );\n    return f;\n}\nfloat myfbm2( vec3 p )\n{\n    float f;\n    f  = 1. - 0.5000*mynoise( p ); p = m*p*2.02;\n    f *= 1. - 0.2500*mynoise( p ); p = m*p*2.03;\n    f *= 1. - 0.1250*mynoise( p ); p = m*p*2.01;\n    f *= 1. - 0.0625*mynoise( p ); p = m*p*2.05;\n    f *= 1. - 0.0625\/2.*mynoise( p ); p = m*p*2.02;\n    f *= 1. - 0.0625\/4.*mynoise( p );\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.y;\n\tvec3 v;\n\tvec3 p = 4.*vec3(uv,0.)+iGlobalTime*(.1,.7,1.2);\n\tfloat x = myfbm(p);\n\t\/\/v = vec3(x);\n\tv = (.5+.5*sin(x*vec3(30.,20.,10.)*SCALE))\/SCALE;\n\tfloat g = 1.;\n\t\/\/g = pow(length(v),1.);\n\t\/\/g =  .5*noise(8.*m*m*m*p)+.5; g = 2.*pow(g,3.);\n\tv *= g;\n\tvec3 Ti = texture2D(iChannel0,.02*v.xy+fragCoord.xy \/ iResolution.xy).rgb*1.4-.2;\n\tvec3 Tf = texture2D(iChannel1,.02*v.xy+fragCoord.xy \/ iResolution.xy).rgb;\n\tvec3 T=Ti;\n\t\/\/ T = Ti+(1.-Ti)*Tf; \n\tvec3 T1,T2;\n\tT1 = vec3(0.,0.,1.); T1 *= .5*(T+1.);\n\tT2 = vec3(1.,1.,1.); \/\/T2 = 1.2*Ti*vec3(1.,.8,.6)-.2;\n\tv = mix(mix(T1,1.*Tf,.5),T2,T);\n\tfragColor = vec4(v,1.0);\n\n}","name":"","description":"","type":"image"}]}}