{"Shader":{"ver":"0.1","info":{"id":"4sfGRn","date":"1357136829","viewed":2511,"name":"Radial Blur","username":"iq","description":"A GLSL version of the oldschool radialblur effect","likes":45,"published":3,"flags":0,"tags":["2d"],"hasliked":0},"renderpass":[{"inputs":[{"id":8,"src":"\/presets\/tex07.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvec3 deform( in vec2 p )\n{\n    vec2 uv;\n\n    vec2 q = vec2( sin(1.1*iGlobalTime+p.x),sin(1.2*iGlobalTime+p.y) );\n\n    float a = atan(q.y,q.x);\n    float r = sqrt(dot(q,q));\n\n    uv.x = sin(0.0+1.0*iGlobalTime)+p.x*sqrt(r*r+1.0);\n    uv.y = sin(0.6+1.1*iGlobalTime)+p.y*sqrt(r*r+1.0);\n\n    return texture2D( iChannel0, uv*.3).yxx;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = -1.0 + 2.0 * fragCoord.xy \/ iResolution.xy;\n    vec2 s = p;\n\n    vec3 total = vec3(0.0);\n    vec2 d = (vec2(0.0,0.0)-p)\/40.0;\n    float w = 1.0;\n    for( int i=0; i<40; i++ )\n    {\n        vec3 res = deform(s);\n        res = smoothstep(0.0,1.0,res);\n        total += w*res;\n        w *= .99;\n        s += d;\n    }\n    total \/= 40.0;\n    float r = 3.0;\n\n\tfragColor = vec4( total*r,1.0);\n}","name":"","description":"","type":"image"}]}}