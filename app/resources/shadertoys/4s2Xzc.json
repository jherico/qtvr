{"Shader":{"ver":"0.1","info":{"id":"4s2Xzc","date":"1414495914","viewed":2474,"name":"Cave","username":"iq","description":"A 2D texture effect really, made by applying TekF's \"Retro Parallax\" shader's technique (https:\/\/www.shadertoy.com\/view\/4sSGD1) to my \"Fly\" shader (https:\/\/www.shadertoy.com\/view\/XsX3Rn). Motion blur added for fun. No raymarching used for this.","likes":19,"published":3,"flags":0,"tags":["procedural","2d","motionblur"],"hasliked":0},"renderpass":[{"inputs":[{"id":10,"src":"\/presets\/tex09.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":17,"src":"\/presets\/tex12.png","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define HSAMPLES 100    \/\/ try 512\n#define MSAMPLES   8    \/\/ try  12\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2  p = (-iResolution.xy+2.0*fragCoord.xy)\/iResolution.y;\n    float t =  12.25 + iGlobalTime;\n\t\n    float an = 0.2*sin( -0.5*t );\n    float co = cos( an ), si = sin( an );\n    p = mat2(co,-si,si,co) * p;\n    \n    float ra = texture2D( iChannel1, fragCoord.xy\/iChannelResolution[1].xy ).x;\n    \n    vec3 tot = vec3(0.0);\n    for( int j=0; j<MSAMPLES; j++ )\n    {\n        float time = t + 0.5*(1.0\/24.0)*(float(j)+ra)\/float(MSAMPLES);\n        vec2  offset = time*vec2(0.03,0.015);\n\t\n        vec3 uv;\n        for( int i=0; i<HSAMPLES; i++ )\n        {\n            uv.z = (float(i)+ra)\/float(HSAMPLES-1);\n            uv.xy = offset + vec2(p.x,1.0)\/abs(p.y) * (0.001+0.0125*uv.z) * 0.5 + sign(p.y)*0.1;\n            if( texture2D( iChannel0, uv.xy ).x < uv.z )\n                break;\n        }\n    \n        vec2  uv2 = offset + vec2(p.x-0.04,1.0)\/abs(p.y) * (0.001+0.0125*uv.z) * 0.5 + sign(p.y)*0.1;\n        float dif = clamp( texture2D(iChannel0, uv.xy).x - texture2D(iChannel0, uv2.xy).x, 0.0, 1.0 );\n        vec3  col = vec3(2.0);\n        col *= 0.2+0.9*texture2D( iChannel0, 24.0*uv.xy, 0.0 ).xyz;\n        col *= 0.5+0.5*texture2D( iChannel0, 128.0*uv.xy, 0.0 ).xyz;\n        col *= 1.0-1.0*uv.z;\n        col *= vec3(0.4,0.56,0.7)*0.7 + vec3(16.0,9.0,3.0)*dif;\n        col *= clamp(3.0*abs(p.y)  - 0.6*uv.z + 0.1,0.0,2.0);\n        tot += col;\n    }\n    tot \/= float(MSAMPLES);\n \n    fragColor = vec4( tot*smoothstep(0.0,2.0,iGlobalTime), 1.0 );\n}","name":"","description":"","type":"image"}]}}