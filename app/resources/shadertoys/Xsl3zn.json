{"Shader":{"ver":"0.1","info":{"id":"Xsl3zn","date":"1361923265","viewed":3325,"name":"Warping - texture","username":"iq","description":"Using a texture's range to deform its own domain","likes":17,"published":3,"flags":0,"tags":["2d"],"hasliked":0},"renderpass":[{"inputs":[{"id":9,"src":"\/presets\/tex08.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 0.5*fragCoord.xy \/ iResolution.xy;\n\n\tfloat d = length(uv);\n\tvec2 st = uv*0.1 + 0.2*vec2(cos(0.071*iGlobalTime+d),\n\t\t\t\t\t\t\t\tsin(0.073*iGlobalTime-d));\n\n    vec3 col = texture2D( iChannel0, st ).xyz;\n    float w = col.x;\n\tcol *= 1.0 - texture2D( iChannel0, 0.4*uv + 0.1*col.xy  ).xyy;\n\tcol *= w*2.0;\n\t\n\tcol *= 1.0 + 2.0*d;\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}