{"Shader":{"ver":"0.1","info":{"id":"MlXGRH","date":"1418426963","viewed":682,"name":"Meta Experiment 4","username":"aiekick","description":"Meta Experiment 4","likes":1,"published":3,"flags":0,"tags":["meta","metaholeexperiment"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n#define nMetaHole 17. \/\/ must be odd number (also not factor of five)\nvec2 getPos(vec2 p){\n    float ratio = iResolution.x\/iResolution.y;\n    float t = cos(iGlobalTime*1.)*10.;\n    return (p\/iResolution.xy*2.-1.)*vec2(ratio, 1.)*2.;\/\/centering -1->0->1 x & y\n}\nfloat metahole(vec2 p, vec2 o, float r1, float r2, float thick){\n    vec2 po = p-o;\n\tfloat t =  sin(iGlobalTime*1.);\n  \treturn (thick\/dot(p*t, o*t)) \/ length(vec2(dot(po+r1, po-r1),dot(po+r2, po-r2)));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = getPos(fragCoord.xy);\n\tfloat t = 0.5*sin(iGlobalTime*0.3)+0.5;\n    float t2 = sin(iGlobalTime*0.3);\n\tfloat t3 = 0.7*sin(iGlobalTime*0.3);\n    float d=0.;\n    for(float i=0.; i<6.2831; i+=6.2831\/nMetaHole){\n        d+=metahole(uv, vec2(cos(i)*t2,sin(i)*t2), 0.4, 0.4, 0.005);\n    }\n    float r = mix(1.\/d, d, abs(t3));\n    float g = mix(r, d, abs(t3));\n    float b = mix(g, d, abs(t3));\n    vec3 c = vec3(r,g,b);\n\tfragColor.rgb = vec3(c-t*2.);\n}","name":"","description":"","type":"image"}]}}