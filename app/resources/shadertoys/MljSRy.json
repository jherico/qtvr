{"Shader":{"ver":"0.1","info":{"id":"MljSRy","date":"1444737900","viewed":543,"name":"Cloudy MegaWave","username":"aiekick","description":"Cloudy MegaWave based of the <a href=\"https:\/\/www.shadertoy.com\/view\/MljXDw\"  class=\"regular\" target=\"_blank\">Cloudy Spikeball<\/a> shader from duke","likes":4,"published":3,"flags":0,"tags":["3d","raymarching","cloud","fog","cloudy","megawave"],"hasliked":0},"renderpass":[{"inputs":[{"id":30,"src":"\/presets\/tex16.png","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/* \n\tthis shader is a mix of :\n\n \tShader Cloudy spikeball from duke : https:\/\/www.shadertoy.com\/view\/MljXDw\n\tShader MegaWave 2 from me : https:\/\/www.shadertoy.com\/view\/ltjXWR\n\n\tI use the shape from megawave with the cloudy technique.\n*\/\n\nconst vec3 lightDir = vec3(0.,1., 0.5);\nconst float mPi = 3.14159;\nconst float m2Pi = 6.28318;\n\nfloat t = 0.;\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/ FROM Shader Cloudy spikeball from duke : https:\/\/www.shadertoy.com\/view\/MljXDw\nfloat pn( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = texture2D(iChannel0, (uv+ 0.5)\/256.0, -100.0 ).yx;\n\trg = vec2(rg.x + rg.y)\/2.;\n\treturn -1.0+2.4*mix( rg.x, rg.y, f.z );\n}\n\nfloat fpn(vec3 p) \n{\n\treturn pn(p*.06125)*.5 + pn(p*.125)*.25 + pn(p*.25)*.125;\n}\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\nfloat disp(vec3 p)\n{\n    p *= 30.;\n    p.xz += iGlobalTime*50.;\n\treturn fpn(p) * .5;\n}\n\nvec2 df(vec3 p)\n{\n\tvec2 res = vec2(1000.);\n\t\n\tvec3 q;\n\t\n    float dp = disp(p);\n    \n\t\/\/ mat 2\n\tq.x = cos(p.x);\n\tq.y = p.y * 5. - 21. + 10. * cos(p.x \/ 7. + t) + 10. * sin(p.z \/ 7. + t);\n\tq.z = cos(p.z);\n\tfloat sphere = length(q) - 1. + dp;\n\t\tres = vec2(sphere, 2.);\n\t\n\t\/\/ mat 3\n\tq.x = cos(p.x);\n\tq.y = p.y * 5. + 21. + 10. * cos(p.x \/ 7. + t + mPi) + 10. * sin(p.z \/ 7. + t + mPi);\n\tq.z = cos(p.z);\n\tsphere = length(q) - 1. + dp;\n\tif (sphere < res.x)\n\t\tres = vec2(sphere, 3.);\n\t\t\n\treturn res;\n}\n\n\/\/--------------------------------------------------------------------------\n\/\/ Grab all sky information for a given ray from camera\n\/\/ from Dave Hoskins \/\/ https:\/\/www.shadertoy.com\/view\/Xsf3zX\nvec3 GetSky(in vec3 rd, in vec3 sunDir, in vec3 sunCol)\n{\n\tfloat sunAmount = max( dot( rd, sunDir), 0.0 );\n\tfloat v = pow(1.0-max(rd.y,0.0),6.);\n\tvec3  sky = mix(vec3(.1, .2, .3), vec3(.32, .32, .32), v);\n\tsky = sky + sunCol * sunAmount * sunAmount * .25;\n\tsky = sky + sunCol * min(pow(sunAmount, 800.0)*1.5, .3);\n\treturn clamp(sky, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec4 f = vec4(0,0,0,1);\n\t\n\tvec2 g = fragCoord;\n\tvec2 si = iResolution.xy;\n    \n\tvec2 uv = (2.*g-si)\/min(si.x, si.y);\n\t\n\tt = iGlobalTime*0.5;\n\t\n\tvec3 rayOrg = vec3(t,0.,t)  * 5.;\n\tvec3 camUp = vec3(0,1,0);\n\tvec3 camOrg = rayOrg + vec3(1,0,1);\n\t\n\tfloat fov = 0.5;\n\tvec3 axisZ = normalize(camOrg - rayOrg);\n\tvec3 axisX = normalize(cross(camUp, axisZ));\n\tvec3 axisY = normalize(cross(axisZ, axisX));\n\tvec3 rayDir = normalize(axisZ + fov * uv.x * axisX + fov * uv.y * axisY);\n\t\n\tvec2 s = vec2(0.01);\n\tfloat d = 0.;\n\tvec3 p = rayOrg + rayDir * d;\n\t\n    vec3 sky = GetSky(rayDir, lightDir, vec3(5.));\n\t\n\tfloat dMax = 50.;\n\tfloat sMin = 0.0001;\n\t\n    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\t\/\/ FROM Shader Cloudy spikeball from duke : https:\/\/www.shadertoy.com\/view\/MljXDw\n\tfloat ld, td= 0.; \/\/ ld, td: local, total density \n\tfloat w; \/\/ w: weighting factor\n\tvec3 tc = sky*.8; \/\/ total color\n\tfloat h=.05;\n    const float stepf = 1.\/250.;\n\t\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n    \n\tfor (float i=0.; (i<1.); i+=stepf) \n\t{\n        \/\/ FROM Shader Cloudy spikeball from duke : https:\/\/www.shadertoy.com\/view\/MljXDw\n\t\tif(!((i<1.) && (s.x>sMin) && (d < dMax)&& (td < .95))) break;\n\t\t\n        s = df(p);\n\t\ts.x *= (s.x>0.001?0.1:.2) ;\n        \n        \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\t\t\/\/ FROM Shader Cloudy spikeball from duke : https:\/\/www.shadertoy.com\/view\/MljXDw\n\t\tld = (h - s.x) * step(s.x, h);\n\t\tw = (1. - td) * ld;   \n\t\ttc += w;\/\/ * hsv(w, 1., 1.) * hsv(w*3.-0.5, 1.-w*20., 1.); \n      \ttd += w + .005;\n      \ts.x = max(s.x, 0.03);\n        \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n      \t\n        d += s.x;\n\t  \tp = rayOrg + rayDir * d;\n    }\n\t\n\tf.rgb = mix( tc, sky, 1.0-exp( -0.001*d*d) );\n\n\t\/\/ vigneting from iq Shader Mike : https:\/\/www.shadertoy.com\/view\/MsXGWr\n    vec2 q = g\/si;\n    f.rgb *= 0.5 + 0.5*pow( 16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y), 0.25 );\n    \n\tfragColor = f;\n}\n","name":"","description":"","type":"image"}]}}