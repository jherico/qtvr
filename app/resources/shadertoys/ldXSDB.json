{"Shader":{"ver":"0.1","info":{"id":"ldXSDB","date":"1406338035","viewed":2465,"name":"Batman Logo","username":"iq","description":"Batman logo (sort of copied from some random image that I found online).","likes":12,"published":3,"flags":0,"tags":["procedural","2d"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ The batman logo, sort of copied from random image I found online\n\n\n#define ANIMATE\n\n\/\/-----------------------------------------------------------------------\n\nfloat ellipse( in vec2 p, in float x, in float y, in float dirx, in float diry, in float radx, in float rady )\n{\n\tvec2  q = p - vec2(x,y);\n\tfloat u = dot( q, vec2(dirx,diry) );\n\tfloat v = dot( q, vec2(diry,dirx)*vec2(-1.0,1.0) );\n\treturn dot(vec2(u*u,v*v),vec2(1.0\/(radx*radx),1.0\/(rady*rady)))-1.0;\n}\n\nfloat box( in vec2 p, in float x, in float y, in float dirx, in float diry, in float radx, in float rady )\n{\n\tvec2  q = p - vec2(x,y);\n\tfloat u = dot( q, vec2(dirx,diry) );\n\tfloat v = dot( q, vec2(diry,dirx)*vec2(-1.0,1.0) );\n\tvec2  d = abs(vec2(u,v)) - vec2(radx,rady);\n\treturn max(d.x,d.y);\n}\n\nfloat fillEllipse( in vec2 p, in float x, in float y, in float dirx, in float diry, in float radx, in float rady )\n{\n\tfloat d = ellipse(p,x,y,dirx,diry,radx,rady);\n    float w = fwidth(d);\n\treturn 1.0 - smoothstep( -w, w, d);\n}\n\nfloat strokeEllipse( in vec2 p, in float x, in float y, in float dirx, in float diry, in float radx, in float rady, in float thickness )\n{\n\tfloat d = abs(ellipse(p,x,y,dirx,diry,radx,rady)) - thickness;\n    float w = fwidth(d);\n\treturn 1.0 - smoothstep( -w, w, d);\n}\n\n\nfloat fillRectangle( in vec2 p, in float x, in float y, in float dirx, in float diry, in float radx, in float rady )\n{\n\tfloat d = box(p,x,y,dirx,diry,radx,rady);\n    float w = fwidth(d);\n\treturn 1.0 - smoothstep( -w, w, d);\n}\n\n\/\/-----------------------------------------------------------------------\n\n\/\/ batmap logo\nfloat logo( vec2 p )\n{\n\tp *= 0.66;\n\tp.x = abs(p.x);\n\t\n    vec2 q = p;\t\n\t#ifdef ANIMATE\n    q.x *= 1.0 + 0.05*q.x*sin(2.0*iGlobalTime+0.0);\n    q.y *= 1.0 + 0.05*q.x*sin(2.0*iGlobalTime+1.3);\n    #endif\t\n\t\n\t\n\tfloat f = 1.0;\n\t\n\tf = mix( f, 0.0,     fillEllipse(   q, 0.000, 0.000,  1.0, 0.0, 0.800, 0.444) );\n\tf = mix( f, 1.0,     fillEllipse(   q, 0.260, 0.300,  1.0, 0.0, 0.150, 0.167) );\n\tf = mix( f, 1.0,     fillRectangle( p, 0.180, 0.400,  1.0, 0.0, 0.070, 0.100) );\n\tf = mix( f, 1.0,     fillRectangle( p, 0.000, 0.400,  1.0, 0.0, 0.040, 0.040) );\n\tf = mix( f, 1.0,     fillRectangle( p, 0.036, 0.448,  0.6, 0.8, 0.065, 0.057) );\n\tf = mix( f, 1.0,     fillEllipse(   q, 0.200,-0.450,  1.0, 0.0, 0.200, 0.333) );\n\tf = mix( f, 1.0,     fillEllipse(   q, 0.400,-0.350, -0.8, 0.6, 0.150, 0.278) );\n    f = mix( f, 0.0, 1.0-fillEllipse(   p, 0.000, 0.000,  1.0, 0.0, 1.000, 0.556) );\n\tf = mix( f, 0.0,     strokeEllipse( p, 0.000, 0.000,  1.0, 0.0, 0.950, 0.528, 0.06) );\n\n\treturn f;\n}\n\n\/\/ blurred batmap logo\nfloat slogo( in vec2 p )\n{\n\tfloat s = 0.0;\n\tfor( int j=0; j<3; j++ )\n\tfor( int i=0; i<3; i++ )\n\t\ts += logo( p + 3.5*vec2(i-1,j-1)\/iResolution.y );\n    s \/= 9.0;\n\treturn s;\n}\n\/\/-----------------------------------------------------------------------\n\nfloat hash( float n ) { return fract(sin(n)*43758.5453); }\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0;\n    return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n               mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\n\n}\n\nfloat fbm( vec2 p )\n{\n    const mat2 m = mat2( 0.8, 0.6, -0.6, 0.8 );\n\n\tfloat f = 0.0;\n    f += 0.5000*noise( p ); p = m*p*2.02;\n    f += 0.2500*noise( p ); p = m*p*2.03;\n    f += 0.1250*noise( p ); p = m*p*2.01;\n    f += 0.0625*noise( p );\n    return f\/0.9375;\n}\n\n\/\/-----------------------------------------------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (-iResolution.xy+2.0*fragCoord.xy)\/iResolution.y;\n\n    \/\/ batman logo black and white\t\n\tfloat f = logo( p );\n\t\n    \/\/ make black and yellow\t\n    vec3 col = vec3( f, f*0.8, 0.0 );\n\n\t\/\/ add texture\n\tcol += f*3.0*smoothstep( 0.53, 0.9, fbm( 0.8*p.yx + 9.0 ) );\n\tcol *= 0.7 + 0.3*smoothstep( 0.2, 0.8, fbm( 4.0*p  + fbm(32.0*p) ) );\n\n    \/\/ smooth\t \n\tfloat s = slogo( p );\n\t\n    \/\/ calc normal\t\n\tfloat a = slogo( p );\n\tfloat b = slogo( p + vec2(2.0,0.0)\/iResolution.y );\n\tfloat c = slogo( p + vec2(0.0,2.0)\/iResolution.y );\n\tvec2 nor = normalize( vec2(b-a, c-a) );\n\t\n\n    \/\/ add specular\tborders\n\tcol += 0.3*pow(clamp(dot(nor,normalize(vec2(-1.0,1.0))),0.0,1.0),2.0);\n\tcol += 0.6*pow(clamp(dot(nor,normalize(vec2(-1.0,1.0))),0.0,1.0),8.0);\n\t\/\/ specular highlight\n\tcol += 0.8*(1.0-f)*exp(-4.0*length(p-vec2(-0.3,0.3)));\n\t\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}