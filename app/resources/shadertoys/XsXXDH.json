{"Shader":{"ver":"0.1","info":{"id":"XsXXDH","date":"1399856085","viewed":932,"name":"twist","username":"fb39ca4","description":"Haven't written a shader in a while, so I thought I would start with something simple. This is a recreation of Matthew DiVito's animated GIF of the same name, found here: http:\/\/cargocollective.com\/matthewdivito\/Animated-Gifs-02","likes":20,"published":3,"flags":0,"tags":["2d","monochrome","gif"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"const float PI = 3.14159265;\n\nvec2 rotate(vec2 v, float a) {\n\tfloat sinA = sin(a);\n\tfloat cosA = cos(a);\n\treturn vec2(v.x * cosA - v.y * sinA, v.y * cosA + v.x * sinA); \t\n}\n\nfloat square(vec2 uv, float d) {\n\treturn max(abs(uv.x), abs(uv.y)) - d;\t\n}\n\nfloat smootheststep(float edge0, float edge1, float x)\n{\n    x = clamp((x - edge0)\/(edge1 - edge0), 0.0, 1.0) * 3.14159265;\n    return 0.5 - (cos(x) * 0.5);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n\tuv.x *= iResolution.x \/ iResolution.y;\n\tuv *= 1.5;\n\t\n    float blurAmount = -0.005 * 1080.0 \/ iResolution.y;\n    \n\tfloat period = 2.0;\n\tfloat time = iGlobalTime \/ period;\n\ttime = mod(time, 1.0);\n\ttime = smootheststep(0.0, 1.0, time);\n\t\n\tfragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\tfor (int i = 0; i < 9; i++) {\n\t\tfloat n = float(i);\n\t\tfloat size = 1.0 - n \/ 9.0;\n\t\tfloat rotateAmount = (n * 0.5 + 0.25) * PI * 2.0; \n\t\tfragColor.rgb = mix(fragColor.rgb, vec3(1.0), smoothstep(0.0, blurAmount, square(rotate(uv, -rotateAmount * time), size)));\n\t\tfloat blackOffset = mix(1.0 \/ 4.0, 1.0 \/ 2.0, n \/ 9.0) \/ 9.0;\n\t\tfragColor.rgb = mix(fragColor.rgb, vec3(0.0), smoothstep(0.0, blurAmount, square(rotate(uv, -(rotateAmount + PI \/ 2.0) * time), size - blackOffset)));\n    }\n}","name":"","description":"","type":"image"}]}}