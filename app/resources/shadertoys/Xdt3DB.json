{"Shader":{"ver":"0.1","info":{"id":"Xdt3DB","date":"1452028758","viewed":231,"name":"Particle Experiment 7 : MBlurred","username":"aiekick","description":"Based on https:\/\/www.shadertoy.com\/view\/MddGWN","likes":3,"published":3,"flags":32,"tags":["blur","experiment","motion","particle","7","multipass"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tfragColor = texture2D(iChannel0, uv);\n}","name":"","description":"","type":"image"},{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\/\/ Tuned via XShade (http:\/\/www.funparadigm.com\/xshade\/)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iGlobalTime+5.;\n\tfloat z = 6.;\n\n\tconst int n = 100; \/\/ particle count\n    \n    vec3 startColor = vec3(0,0.64,0.2);\n\tvec3 endColor = vec3(0.06,0.35,0.85);\n    \n\tfloat startRadius = 0.84;\n\tfloat endRadius = 1.6;\n    \n\tfloat power = 0.51;\n\tfloat duration = 4.;\n    \n\tvec2 \n\t\ts = iResolution.xy,\n\t\tv = z*(2.*fragCoord-s)\/s.y;\n    \n    \/\/ Mouse axis y => zoom\n\tif(iMouse.z>0.) v *= iMouse.y\/s.y * 20.;\n    \n    \/\/ Mouse axis x => duration\n\tif(iMouse.z>0.) duration = iMouse.x\/s.x * 10.;\n    \n\tvec3 col = vec3(0.);\n    \n\tvec2 pm = v.yx*2.8;\n    \n\tfloat dMax = duration;\n    \n    float evo = (sin(iGlobalTime*.01+400.)*.5+.5)*99.+1.;\n\t\n\tfloat mb = 0.;\n\tfloat mbRadius = 0.;\n\tfloat sum = 0.;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tfloat d = fract(t*power+48934.4238*sin(float(i\/int(evo))*692.7398));\n    \t \t\t\n\t\tfloat tt = 0.;\n\t\t\t\n        float a = 6.28*float(i)\/float(n);\n\n        float x = d*cos(a)*duration;\n\n        float y = d*sin(a)*duration;\n        \n\t\tfloat distRatio = d\/dMax;\n        \n\t\tmbRadius = mix(startRadius, endRadius, distRatio); \n        \n\t\tvec2 p = v - vec2(x,y);\/\/*vec2(1,sin(a+3.14159\/2.));\n        \n\t\tmb = mbRadius\/dot(p,p);\n    \t\n\t\tsum += mb;\n        \n\t\tcol = mix(col, mix(startColor, endColor, distRatio), mb\/sum);\n\t}\n    \n\tsum \/= float(n);\n    \n\tcol = normalize(col) * sum;\n    \n\tsum = clamp(sum, 0., .4);\n    \n\tvec3 tex = vec3(1.);\n     \n\tcol *= smoothstep(tex, vec3(0.), vec3(sum));\n        \n\tfragColor.rgb = col * 0.05 + texture2D(iChannel0, fragCoord\/s).rgb*0.95;\n}","name":"","description":"","type":"buffer"}]}}