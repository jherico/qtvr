{"Shader":{"ver":"0.1","info":{"id":"llB3W1","date":"1428522186","viewed":1360,"name":"Fractal Audio 01","username":"relampago2048","description":"This shader is a render of the Julia Set, generated by audio input from microphone.","likes":10,"published":3,"flags":4,"tags":["fractal","mandelbrot","input","microphone"],"hasliked":0},"renderpass":[{"inputs":[{"id":32,"src":"\/presets\/mic.png","ctype":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"const int iters = 150;\n\nint fractal(vec2 p, vec2 point) {\n\tvec2 so = (-1.0 + 2.0 * point) * 0.4;\n\tvec2 seed = vec2(0.098386255 + so.x, 0.6387662 + so.y);\n\t\n\tfor (int i = 0; i < iters; i++) {\n\t\t\n\t\tif (length(p) > 2.0) {\n\t\t\treturn i;\n\t\t}\n\t\tvec2 r = p;\n\t\tp = vec2(p.x * p.x - p.y * p.y, 2.0* p.x * p.y);\n\t\tp = vec2(p.x * r.x - p.y * r.y + seed.x, r.x * p.y + p.x * r.y + seed.y);\n\t}\n\t\n\treturn 0;\t\n}\n\nvec3 color(int i) {\n\tfloat f = float(i)\/float(iters) * 2.0;\n\tf=f*f*2.;\n\treturn vec3((sin(f*2.0)), (sin(f*3.0)), abs(sin(f*7.0)));\n}\n\n\nfloat sampleMusicA() {\n\treturn 0.5 * (\n\t\ttexture2D( iChannel0, vec2( 0.15, 0.25 ) ).x + \n\t\ttexture2D( iChannel0, vec2( 0.30, 0.25 ) ).x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec2 mouse = vec2(iMouse.x\/iResolution.x,iMouse.y\/iResolution.y);\n    \n    vec2 position = 3. * (-0.5 + fragCoord.xy \/ iResolution.xy );\n\tposition.x *= iResolution.x\/iResolution.y;\n    \n    vec2 iFC = vec2(iResolution.x-fragCoord.x,iResolution.y-fragCoord.y);    \n    vec2 pos2 = 2. * (-0.5 + iFC.xy \/ iResolution.xy);\n    pos2.x*=iResolution.x\/iResolution.y;\n    \n    vec4 t3 = texture2D(iChannel0, vec2(length(position)\/2.0,0.1) );\n    float pulse = 0.5+sampleMusicA()*1.8;\n\n    vec3 invFract = color(fractal(pos2,vec2(0.55+sin(iGlobalTime\/3.+0.5)\/2.0,pulse*.9)));\n    \n    vec3 fract4 = color(fractal(position\/1.6,vec2(0.6+cos(iGlobalTime\/2.+0.5)\/2.0,pulse*.8)));\n\n    vec3 c = color(fractal(position,vec2(0.5+sin(iGlobalTime\/3.)\/2.0,pulse)));\n    \n    t3=abs(vec4(0.5,0.1,0.5,1.)-t3)*2.;\n    \n    vec4 fract01 =  vec4( c , 1.0 );\n    vec4 salida;\n    salida = fract01 \/ t3 + fract01 * t3 + vec4(invFract,0.6) + vec4(fract4,0.3);\n\tfragColor = salida;\n}","name":"","description":"","type":"image"}]}}