{"Shader":{"ver":"0.1","info":{"id":"4lSGzh","date":"1426745794","viewed":666,"name":"basic point and line","username":"GayCat","description":"study","likes":0,"published":3,"flags":0,"tags":["line","point"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"vec4 circle(vec2 pos, vec2 center, float radius, vec3 color, float antialias){   \n    \/\/ d\u4e3a\u5706\u5f62\u5185\u5916\u6240\u6709\u7684\u70b9   \n    float d = length(pos - center) - radius;   \n    \/\/ \u516c\u5f0fsmoothstep\uff1a\u5c06d\u9650\u5236\u57280\u5230antialias\u4e4b\u95f4\uff0c\u518d\u901a\u8fc7\u516c\u5f0f\u8ba1\u7b97\u63d2\u503c   \n    \/\/ \u8fd4\u56de\u4e3a0\u7684\u8868\u793a\u662f\u5706   \n    \/\/ \u8fd4\u56de\u4e3a[0-1]\u7684\u8868\u793a\u662f\u5e73\u6ed1\u533a\u57df   \n    \/\/ \u8fd4\u56de\u4e3a1\u8868\u793a\u662f\u975e\u5706\u533a\u57df   \n    float t = smoothstep (0.0,antialias,d);   \n    \/\/ \u8fd4\u56de\u4e3a1\u8868\u793a\u4e3a\u5706   \n    return vec4(color, 1.0 - t);   \n} \n\/\/ \u76f4\u7ebf\u65b9\u7a0b\u4e3a\uff1akx - y + b = 0   \nvec4 line(vec2 pos, vec2 point1, vec2 point2, float width, vec3 color, float antialias) {     \n    \/\/ \u8ba1\u7b97\u659c\u7387k   \n    float k = (point1.y - point2.y)\/(point1.x - point2.x);     \n    \/\/ \u6c42b   \n    float b = point1.y - k * point1.x;     \n    \/\/ \u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\uff1ad=|A\u00b7a+B\u00b7b+C|\/\u221a(A\u00b2+B\u00b2)   \n    \/\/ d = |kx-y+b|\/\u221a(k\u00b2+1\u00b2)   \n    float d = abs(k * pos.x - pos.y + b) \/ sqrt(k * k + 1.0);     \n    \/\/ \u516c\u5f0fsmoothstep\uff1a\u5c06d\u9650\u5236\u57280\u5230antialias\u4e4b\u95f4\uff0c\u518d\u901a\u8fc7\u516c\u5f0f\u8ba1\u7b97\u63d2\u503c   \n    \/\/ \u8fd4\u56de\u4e3a0\u8868\u793a\u662f\u5728\u7ebf\u4e0a   \n    \/\/ \u8fd4\u56de\u4e3a[0-1]\u8868\u793a\u662f\u5e73\u6ed1\u533a\u57df   \n    \/\/ \u8fd4\u56de\u4e3a1\u8868\u793a\u4e0d\u5728\u7ebf\u4e0a   \n    float t = smoothstep(width\/2.0, width\/2.0 + antialias, d);     \n    return vec4(color, 1.0 - t);     \n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    uv.y += 0.25 * sin(uv.x + 2.0 * iGlobalTime);   \n    vec4 bg = vec4(0,1,1,1);\n    vec4 cc = circle(uv, vec2(0.5,0.5),0.2,vec3(1,1,0),0.01);\n    vec4 lin = line(uv, vec2(0.1,0.5), vec2(0.9, 0.5), 0.02,vec3(0,0,1),0.01);\n\tfragColor = mix(bg,cc,cc.a);\n    fragColor = mix(fragColor,lin,lin.a);\n}","name":"","description":"","type":"image"}]}}