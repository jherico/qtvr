{"Shader":{"ver":"0.1","info":{"id":"4s33Df","date":"1452417709","viewed":257,"name":"load texture 2 : Lena","username":"FabriceNeyret2","description":"Work in progress...                      >>>  seems to not work on Firefox <<<<br\/>NB: rewind button  to resynchronise the texture to the window.","likes":8,"published":3,"flags":96,"tags":["texture","load"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":685,"src":"https:\/\/soundcloud.com\/fabricen\/lena2","ctype":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ inspired from https:\/\/www.shadertoy.com\/view\/XscGDf\n\n\/\/ I encoded the BW images with 2 lines of octave (the open source Matlab clone ) :\n\/\/\n\/\/  :  y = double(imread(\"lena.jpg\")) \/ 255;\n\/\/  :  wavwrite( 2*vec(y')-1,\"lena.wav\" );\n\/\/\n\/\/ then upload the file to soundcloud (don't forget \"allow download\" in permissions)\n\nfloat message(vec2 p) {  \/\/ the alert function to add to your shader\n    int x = int(p.x+1.)-1, y=int(p.y)-10,  i;\n    if (x<1||x>32||y<0||y>2) return -1.; \n    i = ( y==2? i=  757737252: y==1? i= 1869043565: y==0? 623593060: 0 )\/ int(exp2(float(32-x)));\n \treturn i==2*(i\/2) ? 1. : 0.;\n}\n\n\nvoid mainImage( out vec4 O, vec2 U ) \n{ \n    if (iResolution.y<200.) \/\/ alert for the icon\n        {   float c=message(U\/8.); if(c>=0.){ O=vec4(c,0,0,0);return; } }\n\n\n    O = texture2D(iChannel0, U\/iResolution.xy); \n  \/\/O = vec4 ( U. x< iChannelResolution[3].x , U.x < 512.,0,0);  \/\/ test audiobuff size\n  \/\/O = vec4 ( U. x< iSampleRate\/100. , U.x < 441.,0,0);         \/\/ test audiobuff sampling\n  \/\/O = vec4 ( U.x< iChannelTime[3]*60.,U.x<6.*60.,0,0);         \/\/ test audiobuff index\/sync\n}","name":"","description":"","type":"image"},{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":677,"src":"https:\/\/soundcloud.com\/fabricen\/lena2","ctype":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ inspired from https:\/\/www.shadertoy.com\/view\/XscGDf\n\n#define L 512. \/\/ 800.\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    O = texture2D(iChannel0, U\/R);\n\n    U =floor(U);\n    if (U.x < L) {\n        float l = iChannelResolution[3].x,\n           \/\/ i = mod( floor(iChannelTime[3]*44100.\/l)*l , L*L),\n              i = l\/2. + floor(4.*iChannelTime[3]* iSampleRate\/l)*l\/4.,\n              p = U.x+L*(iResolution.y-U.y); \n        if (p >= i && p < i+l)\n\t\t    O = texture2D(iChannel3, vec2(fract((p-i)\/l), .75));                             \n    }\n}","name":"","description":"","type":"buffer"}]}}