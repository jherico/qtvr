{"Shader":{"ver":"0.1","info":{"id":"MlXGRl","date":"1424200235","viewed":769,"name":"Parametrics Competition","username":"eiffie","description":"Here is a little competition for anyone interested. Draw the parametric curve from IQ's shader using the fewest calls to the map function. ","likes":4,"published":3,"flags":0,"tags":["parametriccurve","competition"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/33 steps by eiffie\n\n\/\/I think this is an important area to look into since the answer could be used\n\/\/on a surface as well!\n\n\/\/v2 oh crap a simple fudge factor worked better\n\n\/\/v3 just optimizing the fudge factor method\n\n\/\/v4 trying to combine the fudging and gradient - strangely 32 steps makes it disappear???\n\nvec2 map(float t){\/\/from iq's shader https:\/\/www.shadertoy.com\/view\/Xlf3zl\n\treturn 0.85*cos( t + vec2(0.0,1.0) )*(0.6+0.4*cos(t*7.0+vec2(0.0,1.0)));\n}\n\nfloat Tube(vec2 pa, vec2 ba){return length(pa-ba*clamp(dot(pa,ba)\/dot(ba,ba),0.0,1.0));}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p=(2.0*fragCoord.xy-iResolution.xy)\/iResolution.y;\n\t\n\t\/\/float t=0.0,d=length(p-map(t)),dt=0.001,d1=d;\n\t\/*for(int i=0;i<48;i++){\n\t\tt+=dt;\n\t\tfloat d2=length(p-map(t));\n\t\td=min(d,d2);\n\t\tdt\/=max(d1-d2,dt*1.25);\n\t\tdt=0.5*d2*dt;\n\t\td1=d2;\n\t}*\/\n    \/*for(int i=0;i<43;i++){\n        t+=0.4*d1;\n        d1=length(p-map(t));\n        d=min(d,d1);\n    }*\/\n    \/*vec2 p1=map(0.0),p2;\n\tfloat t=0.0,d=length(p-p1),d1=d;\n\tfor(int i=0;i<35;i++){\n\t\tt+=max(0.41*d1,0.03);\n\t\tp2=map(t);\n\t\td1=length(p-p2);\n\t\td=min(d,Tube(p-p1,p2-p1));\n\t\tp1=p2;\n\t}*\/\n    vec2 p1=map(0.0),p2;\n\tfloat t=0.0,d=length(p-p1),d1=d,dt=d1*0.41;\n\tfor(int i=0;i<33;i++){\n\t\tt+=max(dt,0.03);\n\t\tp2=map(t);\n\t\tfloat d2=length(p-p2);\n\t\td=min(d,Tube(p-p1,p2-p1));\n        dt\/=max(d1-d2+0.7,0.0);\n        dt=d2*clamp(dt,0.41,0.55);\n\t\tp1=p2;\n        d1=d2;\n\t}\n\n\td=smoothstep(0.0,0.01,d);\n\tvec3 col=vec3(sqrt(d),d*d,d);\n\tfragColor = vec4(col,1.0);\n}\n","name":"","description":"","type":"image"}]}}