{"Shader":{"ver":"0.1","info":{"id":"ltjGRd","date":"1431566972","viewed":692,"name":"Caf\u00e9 Wall","username":"NBickford","description":"A quick implementation of the Caf\u00e9 Wall illusion - with another trick added. Also, antialiased!","likes":6,"published":3,"flags":0,"tags":["2d","opticalillusion","antialiased","quick"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define ss 4\n#define pi 3.1415926535897\n#define rotation 1.\n\nfloat round(float v, float d){\n    return ceil(v\/d-0.5)*d;\n}\n\n\nfloat checkerboard(vec2 uv){\n    vec2 p=mod(uv-vec2(0.5),1.0);\n    return mod(step(p.x,0.5)+step(p.y,0.5),2.0);\n}\n\nvec2 rot(vec2 uv, float r){\n    float cr=cos(r),sr=sin(r);\n    return vec2(cr*uv.x-sr*uv.y,sr*uv.x+cr*uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float tv=0.0;\n    float t=iGlobalTime*0.67;\n    \n    for(int xp=0;xp<ss;xp++){\n        for(int yp=0;yp<ss;yp++){\n\tvec2 uv = 2.0*(fragCoord.xy-iResolution.xy*0.5+vec2(xp,yp)\/float(ss))\/iResolution.x;\n    uv*=4.0;\n    \n    uv=rot(uv,0.01*rotation*sin(pi*t));\n    \n    \n    uv.x=uv.x-round(uv.y-0.25,0.5)*t;\n\tfloat v=checkerboard(uv);\n    \n    if(abs(round(uv.y,0.5)-uv.y)<0.01) v=0.5;\n            tv+=v;\n        }\n    }\n    tv=tv\/float(ss*ss);\n    fragColor=vec4(tv,tv,tv,1.0);\n}","name":"","description":"","type":"image"}]}}