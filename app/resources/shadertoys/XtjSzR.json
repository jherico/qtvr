{"Shader":{"ver":"0.1","info":{"id":"XtjSzR","date":"1441050653","viewed":901,"name":"Worley Tunnely","username":"akaitora","description":"A Worley Tunnel","likes":7,"published":3,"flags":0,"tags":["tunnel","worely"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Endless Tunnel\n\/\/ By: Brandon Fogerty\n\/\/ bfogerty at gmail dot com\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n\nvec2 hash( vec2 p )\n{\n\tmat2 m = mat2( \t34789.23472, 28371.2387,\n\t\t      \t58217.2387, 947823.213 );\n\t\n    p = mod( p, 4. );\n    \n\treturn fract( sin( m * p ) * 48938.43982 );\n}\n\nfloat v( vec2 p )\n{\n    p.x = mod(p.x,4.0);\n\tvec2 g = floor( p );\n\tvec2 f = fract( p );\n\t\n\tvec2 res = vec2( 1.0 );\n\tfor( int y = -1; y <= 1; y++ )\n\t{\n\t\tfor( int x = -1; x <= 1; x++ )\n\t\t{\n\t\t\tvec2 off = vec2( x, y );\n\t\t\tfloat h = distance( off + hash( g + off), f );\n\t\t\t\n\t\t\tif( h < res.x )\n\t\t\t{\n\t\t\t\tres.y = res.x;\n\t\t\t\tres.x = h;\n\t\t\t}\n            else if( h < res.y )\n            {\n                res.y = h;\n            }\n\t\t}\n\t}\n\t\n\treturn res.y - res.x;\n}\n\n\nvec3 tunnel( vec2 p, float scrollSpeed, float rotateSpeed )\n{    \n    float a = 2.0 * atan( p.x, p.y );\n\n    a *= (3.0 \/ 3.141596);\n    \n    float r = length(p) * 0.9;\n    vec2 uvp = vec2( 0.4\/r + (iGlobalTime*scrollSpeed), a + (iGlobalTime*rotateSpeed));\t\n    vec3 finalColor = vec3( v( uvp * 1.0 ) );\n    finalColor *= r * 5.0;\n\t\n    return finalColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy \/ iResolution.xy;\n    float timeSpeedX = iGlobalTime * 0.3;\n    float timeSpeedY = iGlobalTime * 0.2;\n    vec2 p = uv + vec2( -0.50+cos(timeSpeedX)*0.2, -0.5-sin(timeSpeedY)*0.3 );\n\n    vec3 finalColor = tunnel( p , 1.0, 0.0);\n\n    fragColor = vec4( finalColor, 1.0 );\n}","name":"","description":"","type":"image"}]}}