{"Shader":{"ver":"0.1","info":{"id":"ltBSzV","date":"1445045370","viewed":622,"name":"Another Cloudy Tunnel 3","username":"aiekick","description":"Vairation of <a href=\"https:\/\/www.shadertoy.com\/view\/XlSSzV\"  class=\"regular\" target=\"_blank\">Another Cloudy 2<\/a> <br\/>More cloudy, smoothy, less artefact, and better optimised for fullscreen..<br\/>but close to cam there is some artefact some time. how can i do antialiased on this ?","likes":12,"published":3,"flags":0,"tags":["anothercloudytunnel3"],"hasliked":0},"renderpass":[{"inputs":[{"id":30,"src":"\/presets\/tex16.png","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\/\/ Tuned via XShade (http:\/\/www.funparadigm.com\/xshade\/)\n\n\/* \n\tvariation more cloudy of Another Cloudy Tunnel 2 : \n\t\thttps:\/\/www.shadertoy.com\/view\/XlSSzV\n\n\tthe cloudy famous tech come from the shader of duke : https:\/\/www.shadertoy.com\/view\/MljXDw\n        Himself a Port of a demo by Las => http:\/\/www.pouet.net\/topic.php?which=7920&page=29&x=14&y=9\n*\/\n\nfloat t;\nfloat cosPath(vec3 p, vec3 dec){return dec.x * cos(p.z * dec.y + dec.z);}\nfloat sinPath(vec3 p, vec3 dec){return dec.x * sin(p.z * dec.y + dec.z);}\n#define Tunnel(p,pos,c,s) p.xy-pos-vec2(cosPath(p, c),sinPath(p, s))\n\nfloat pn( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = texture2D(iChannel0, (uv+ 0.5)\/256.0, -100.0 ).yx;\n\treturn -1.0+2.4*mix( rg.x, rg.y, f.z );\n}\n\nfloat df(vec3 p)\n{\n\tfloat pnNoise = pn(p*.26)*1.98 + pn(p*.26)*.62 + pn(p*1.17)*.39;\n\tfloat path = sinPath(p ,vec3(5.704,0.3828,0.16));\n    float bt = min(p.y, -p.y) + 12.;\n\tfloat df;\n    vec4 vec, var;\n\tfor (float i=0.;i<4.;i++)\n\t{\n\t\tvar = vec4(0.35,2.5,5.8,0) + vec4(0.5,0.06,0,5) * i;\n\t\tvec.xy = Tunnel(p, vec2(path, 0.), var.xyz, var.zxy);\n\t\tdf = var.w - min(length(vec.xy), length(vec.zw));\n\t\tvec.zw = vec.xy;\t\n\t}\n\treturn min(df, bt) + pnNoise;\n}\n\nvec3 cam(vec2 uv, vec3 ro, vec3 cu, vec3 cv, float fov)\n{\n\tvec3 rov = normalize(cv-ro);\n    vec3 u = normalize(cross(cu, rov));\n    vec3 v = normalize(cross(rov, u));\n    vec3 rd = normalize(rov + fov * u * uv.x + fov * v * uv.y);\n    return rd;\n}\n\nvec4 march(vec4 f, vec3 ro, vec3 rd, float st)\n{\n\tfloat s = 1., h = .2, td = 0., d=1.,dl=0., w;\n\tvec3 p = ro;\n\tfor(float i=0.;i<100.;i++)\n\t{      \n\t\tif(s<0.1||d>40.||td>.95) break;\n        s = df(p) * .09 * i\/ 50.;\n\t\tif (s < h)\n\t\t{\n\t\t\tw = (1.-td) * (h-s) * i\/40.;\n\t\t\tf += w;\n\t\t\ttd += w;\n\t\t}\n\t\tdl += 1. - exp(-0.001 * log(d));\n\t\ttd += 0.01;\n\t\ts = max(s, st);\n\t\td+=s; \n\t\tp = ro+rd*d;\t\n   \t}\n\tdl += 3.;\n\tf.rgb \/= dl\/3.;\n\tf.rgb = mix( f.rgb, vec3(0), 1.0 - exp( -0.002*d*d) ); \/\/ fog\n\treturn f;\n}\n\nvoid mainImage( out vec4 f, in vec2 g )\n{\n\tt = iGlobalTime;\n\tf = vec4(0,0.15,0.32,1);\n    vec2 q = g\/iResolution.xy;\n    vec3 ro = vec3(cos(t*.2), sin(t*.6),t )*vec3(8.5, 10.5, 6.5);\n\tvec3 rd = cam((2.*g-iResolution.xy)\/iResolution.y, ro, vec3(0,1,0), ro + vec3(0,0,1), 3.5);\n\tf = march(f, ro, rd, 0.26);\n    f.rgb *= 0.5 + 0.5*pow( 16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y), 0.25 ); \/\/ vignette\n}\n","name":"","description":"","type":"image"}]}}