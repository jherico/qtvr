{"Shader":{"ver":"0.1","info":{"id":"MllSDj","date":"1439923652","viewed":843,"name":"DF Box Blur","username":"demofox","description":"Box blur. Use the mouse to control blur.<br\/>More information at: http:\/\/blog.demofox.org\/2015\/08\/18\/box-blur\/","likes":4,"published":3,"flags":0,"tags":["2d","blur"],"hasliked":0},"renderpass":[{"inputs":[{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/*\n\nFor more information check out my blog:\nhttp:\/\/blog.demofox.org\/2015\/08\/18\/box-blur\/\n\n*\/\n\nconst int   c_samplesX    = 15;  \/\/ must be odd\nconst int   c_samplesY    = 15;  \/\/ must be odd\nconst float c_textureSize = 512.0;\n\n\nconst float c_pixelSize = (1.0 \/ c_textureSize);\nconst int   c_halfSamplesX = c_samplesX \/ 2;\nconst int   c_halfSamplesY = c_samplesY \/ 2;\n\nvec3 BlurredPixel (in vec2 uv)\n{   \n    int c_distX = iMouse.z > 0.0\n        ? int(float(c_halfSamplesX+1) * iMouse.x \/ iResolution.x)\n        : int((sin(iGlobalTime*2.0)*0.5 + 0.5) * float(c_halfSamplesX+1));\n    \n\tint c_distY = iMouse.z > 0.0\n        ? int(float(c_halfSamplesY+1) * iMouse.y \/ iResolution.y)\n        : int((sin(iGlobalTime*2.0)*0.5 + 0.5) * float(c_halfSamplesY+1));\n    \n    float c_pixelWeight = 1.0 \/ float((c_distX*2+1)*(c_distY*2+1));\n    \n    vec3 ret = vec3(0);        \n    for (int iy = -c_halfSamplesY; iy <= c_halfSamplesY; ++iy)\n    {\n        for (int ix = -c_halfSamplesX; ix <= c_halfSamplesX; ++ix)\n        {\n            if (abs(float(iy)) <= float(c_distY) && abs(float(ix)) <= float(c_distX))\n            {\n                vec2 offset = vec2(ix, iy) * c_pixelSize;\n            \tret += texture2D(iChannel0, uv + offset).rgb * c_pixelWeight;\n            }\n        }\n    }\n    return ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy * vec2(1,-1);\n\tfragColor = vec4(BlurredPixel(uv), 1.0);\n}","name":"","description":"","type":"image"}]}}