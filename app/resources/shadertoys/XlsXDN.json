{"Shader":{"ver":"0.1","info":{"id":"XlsXDN","date":"1437359966","viewed":789,"name":"Money filter","username":"giacomo","description":"Money filter based on \"Free Engraved Illustration Effect Action for Photoshop\" - http:\/\/snip.ly\/j0gq<br\/>My website: http:\/\/kyrie.pe","likes":10,"published":3,"flags":0,"tags":["filter","effect","money","engraved"],"hasliked":0},"renderpass":[{"inputs":[{"id":11,"src":"\/presets\/vid00.ogv","ctype":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\n\/\/ Money filter by Giacomo Preciado\n\/\/ Based on: \"Free Engraved Illustration Effect Action for Photoshop\" - http:\/\/snip.ly\/j0gq\n\/\/ e-mail: giacomo@kyrie.pe\n\/\/ website: http:\/\/kyrie.pe\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy \/ iResolution.yy;\n    \n    float amplitud = 0.03;\n    float frecuencia = 10.0;\n    float gris = 1.0;\n    float divisor = 4.8 \/ iResolution.y;\n    float grosorInicial = divisor * 0.2;\n    \n    const int kNumPatrones = 6;\n    \n    \/\/ x: seno del angulo, y: coseno del angulo, z: factor de suavizado\n\tvec3 datosPatron[kNumPatrones];\n    datosPatron[0] = vec3(-0.7071, 0.7071, 3.0); \/\/ -45\n    datosPatron[1] = vec3(0.0, 1.0, 0.6); \/\/ 0\n    datosPatron[2] = vec3(0.0, 1.0, 0.5); \/\/ 0\n    datosPatron[3] = vec3(1.0, 0.0, 0.4); \/\/ 90\n    datosPatron[4] = vec3(1.0, 0.0, 0.3); \/\/ 90\n    datosPatron[5] = vec3(0.0, 1.0, 0.2); \/\/ 0\n\n    vec4 color = texture2D(iChannel0, vec2(fragCoord.x \/ iResolution.x, xy.y));\n    fragColor = color;\n    \n    for(int i = 0; i < kNumPatrones; i++)\n    {\n        float coseno = datosPatron[i].x;\n        float seno = datosPatron[i].y;\n        \n        \/\/ Rotaci\u00f3n del patr\u00f3n\n        vec2 punto = vec2(\n            xy.x * coseno - xy.y * seno,\n            xy.x * seno + xy.y * coseno\n        );\n\n        float grosor = grosorInicial * float(i + 1);\n        float dist = mod(punto.y + grosor * 0.5 - sin(punto.x * frecuencia) * amplitud, divisor);\n        float brillo = 0.3 * color.r + 0.4 * color.g + 0.3 * color.b;\n\n        if(dist < grosor && brillo < 0.75 - 0.12 * float(i))\n        {\n            \/\/ Suavizado\n            float k = datosPatron[i].z;\n            float x = (grosor - dist) \/ grosor;\n            float fx = abs((x - 0.5) \/ k) - (0.5 - k) \/ k; \n            gris = min(fx, gris);\n        }\n    }\n    \n    \n    float mx = iMouse.x;\n    if(iMouse.z < 1.0) mx = iResolution.x * 0.5;\n    if(fragCoord.x < mx) fragColor = vec4(gris, gris, gris, 1.0);\n}","name":"","description":"","type":"image"}]}}