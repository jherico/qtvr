{"Shader":{"ver":"0.1","info":{"id":"4lBXDc","date":"1448277989","viewed":273,"name":"circular interference","username":"dzozef","description":"set time scale and size scale with mouse (x and y respectively)<br\/><br\/>new option added - transparent, looks nicer but different","likes":1,"published":3,"flags":0,"tags":["retro","interference","circle"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define EXPANDING 1\n#define TRANSPARENT 1\n\n#define PI 3.14159\n\n#define COLOR1 vec3( 0.3, 0.6, 0.9 )\n#define COLOR2 vec3( 0.03, 0.6, 1.0 )\n#define COLOR3 vec3( 0.64, 0.6, 1.0 )\n\nfloat rad = (iMouse.y \/ iResolution.y)*25.0 + 8.0;\nfloat time = (iMouse.x \/ iResolution.x + 0.1) * iGlobalTime * 0.5;\n\nvec3 hsv( vec3 hsv )\n{\n\treturn mix(vec3(1.),clamp((abs(fract(hsv.x+vec3(3.,2.,1.)\/3.)*6.-3.)-1.),0.,1.),hsv.y)*hsv.z;\n}\n\nvec3 Circle( vec2 center, vec2 pos )\n{\n    float dist = length(pos - center);\n#ifdef EXPANDING\n    dist -= time*100.0;\n#endif\n    float s = sin(fract(dist\/rad)*PI*1.0);\n    float dist1 = length(pos - center + vec2(4., -4.)*((iMouse.y \/ iResolution.y)+0.3));\n#ifdef EXPANDING\n    dist1 -= time*100.0;\n#endif\n    float s1 = sin(fract(dist1\/rad)*PI*1.0); \/\/ some \"shading\"\n#ifndef TRANSPARENT\n    if (s<0.9) s = 0.0;\n    else s = s1;\n#else\n    s = s1*s1;\n#endif\n    return vec3( s );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n#ifdef TRANSPARENT\n    vec3 c = hsv(COLOR1) * Circle( iResolution.xy*vec2(0.5*sin(time*1.3)+0.5,0.5*sin( 4.0 + time*1.2)+0.5), fragCoord.xy );\n    c = mix( c, hsv(COLOR2) * Circle( iResolution.xy*vec2(0.5*cos(1.0+time*1.31)+0.5,0.5*sin( 3.0 + time*1.4)+0.5), fragCoord.xy ), 0.5 );\n    c = mix( c, hsv(COLOR3) * Circle( iResolution.xy*vec2(0.5*sin(1.1+time*1.35)+0.5,0.5*cos( time*1.6)+0.5), fragCoord.xy ), 0.5 );\n#else\n    vec3 c = hsv(COLOR1) * Circle( iResolution.xy*vec2(0.5*sin(time*1.3)+0.5,0.5*sin( 4.0 + time*1.2)+0.5), fragCoord.xy );\n    if (c == vec3(0.0)) c = hsv(COLOR2) * Circle( iResolution.xy*vec2(0.5*cos(1.0+time*1.31)+0.5,0.5*sin( 3.0 + time*1.4)+0.5), fragCoord.xy );\n    if (c == vec3(0.0)) c = hsv(COLOR3) * Circle( iResolution.xy*vec2(0.5*sin(1.1+time*1.35)+0.5,0.5*cos( time*1.6)+0.5), fragCoord.xy );\n#endif\n    fragColor = vec4( c, 1.0 );\n}","name":"","description":"","type":"image"}]}}