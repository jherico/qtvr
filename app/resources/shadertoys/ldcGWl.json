{"Shader":{"ver":"0.1","info":{"id":"ldcGWl","date":"1452696719","viewed":392,"name":"2D transition","username":"nicoptere","description":"test","likes":0,"published":3,"flags":0,"tags":["2d","gradient","transition"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\n\nvec2 project( vec2 p, vec2 a, vec2 b ){\n\n    float A = p.x - a.x;\n    float B = p.y - a.y;\n    float C = b.x - a.x;\n    float D = b.y - a.y;\n    float dot = A * C + B * D;\n    float len = C * C + D * D;\n    float t = dot \/ len;\n    return vec2( a.x + t * C, a.y + t * D );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = ( fragCoord.xy \/ iResolution.xy );\n    uv.y = 1. - uv.y;\n    \n    \n    vec2 p0 = vec2( abs( cos( iGlobalTime * .1 ) ), 0.25 );\n    vec2 p1 = vec2( 0.5,  .75 );\n    p1 = iMouse.xy \/ iResolution.xy;\n    p1.y = 1. - p1.y;\n    vec2 n = normalize(  vec2( -( p1.y - p0.y ), ( p1.x - p0.x ) ) ) * .15;\n    \n    vec2 c = p0 + (p1 - p0 ) * .5;\n    \n    vec2 a = c + n * sign( p0.x - c.x );\n    vec2 b = c + n * sign( p1.x -  c.x ) ;\n    \n    vec2 pp = project( uv, a, b ) - c;\n    \n    \n    float d = pp.x - uv.x + pp.y - uv.y ;\n    float s = sign( d );\n    pp *= s * pow( d*.95, 2. );\n    \n    float len = length( pp ) \/ length( c );\n    \n    float t = sin( iGlobalTime ) * .5 + .5;\n    \/\/t = iMouse.x \/ iResolution.x;\n    len = smoothstep( t-.001, t+.001, len );\n    float blue = 0.;\n    if( distance( uv, p0 )<.02 )\n    {\n        pp=vec2(0.,1.);\n        blue = 1.;\n    }\n    if( distance( uv, p1 )<.02 )\n    {\n        pp=vec2(1.,0.);\n        blue = .5;\n    }\n    if( distance( uv, a )<.01 )pp=vec2(0.,1.);\n    if( distance( uv, b )<.01 )pp=vec2(1.,0.);\n    if( distance( uv, c )<.01 )pp=vec2(1.,1.);\n\tfragColor = vec4( vec3(len)+vec3(pp.x, pp.y,blue) , 1.  );\n}","name":"","description":"","type":"image"}]}}