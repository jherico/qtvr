{"Shader":{"ver":"0.1","info":{"id":"MlXSDs","date":"1440586832","viewed":951,"name":"Life (Conway automata)","username":"FabriceNeyret2","description":"Conway game of life.<br\/>Sorry it gets ultra-slow with time: as long as we won't be allowed to save frame state in shadertoy, all simulations have to re-play at every time+pixel the whole duration since t=0;.","likes":1,"published":3,"flags":0,"tags":["simulation","cellularautomata"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define N 10\nbool T0[N*N],T1[N*N];\t\/\/ state of the grid cell (odd\/even time steps)\n\n#define m(i) (i<0 ? i+N : i>=N ? i-N : i) \/\/ to manage bounds through cyclicity\n#define  T(h,i,j)        ( h==0 ? T0[m(j)*N+m(i)] :      T1[m(j)*N+m(i)] )\n\/\/#define  T(h,i,j)      ( h==0 ? T0[(j)*N+i]     :      T1[(j)*N+i]     )\n#define setT(h,i,j,v)  if (h==0)  T0[(j)*N+i] = v ; else T1[(j)*N+i] = v;\n#define iT(h,i,j)        int(T(h,i,j))\n\n#define rnd(x) fract(4e4*sin(x*1654.7+4.17))\n\nvoid mainImage( out vec4 o, vec2 p )\n{\n    vec2 R = iResolution.xy;\n\tp = (p-(R-R.y)\/2.) \/ R.y;\n    if (p.x<0. || p.x >=1.) { o += .2; return; };\n    p *= float(N);\n    int P = int(p.y)*N+int(p.x);\n    \n    int T = int(mod(iGlobalTime,20.));\n    if (T<1) return;\n    \n    \/\/ --- initialization\n\tfor (int i=0; i<N*N; i++)\n    \tT0[i] = rnd(float(i))<.15;\n    \n    \/\/ --- simulation steps\n    int h=0;\n    for (int t=4; t<20; t++) {\n        if (t>T) break; \/\/ replay steps up to current time\n        for (int j=0; j<N; j++) {\n            int S[N]; \/\/ optimization: precompute vertical sums\n            for (int i=0; i<N; i++) \n                S[i] = iT(h,i,j-1) + iT(h,i,j) + iT(h,i,j+1);\n    \t    for (int i=0; i<N; i++) {\n                \/\/ compute neighborhod population\n                int c = S[m(i-1)] + S[i] + S[m(i+1)] - iT(h,i,j);\n        \t    \/\/ int c =   iT(h,i-1,j-1) + iT(h,i,j-1) + iT(h,i+1,j-1)\n            \t\/\/         + iT(h,i-1,j  )               + iT(h,i+1,j  )\n                \/\/\t       + iT(h,i-1,j+1) + iT(h,i,j+1) + iT(h,i+1,j+1);\n                \/\/ 3 neighbors -> life. 2 neighbors -> stable. otherwise -> death.\n\t            setT(1-h,i,j, c==2 ? T(h,i,j) : c==3); \n         }  }\n        h = 1-h;\n    }\n    \n    \/\/ --- display\n\tfor (int j=0; j<N; j++)\n        for (int i=0; i<N; i++)\n            if (j*N+i==P) o = vec4( T(h,i,j) );\n   \n}","name":"","description":"","type":"image"}]}}