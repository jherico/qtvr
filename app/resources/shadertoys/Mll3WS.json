{"Shader":{"ver":"0.1","info":{"id":"Mll3WS","date":"1424946060","viewed":1204,"name":"Electro-Prim's","username":"smb02dunnal","description":"(Or \"Electro-Granny\")<br\/><br\/>Simple 2D phase field with RGB band oscillation","likes":10,"published":3,"flags":0,"tags":["procedural","2d","electro"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ electro-prim's by @AlexWDunn\nprecision mediump float;\n\n#define PI (3.1416)\n\nfloat electro(vec2 pos, float d, float f, float o, float s, float a, float b)\n{\n    float ti = iGlobalTime * s;\n    \n    float theta = atan(pos.y,pos.x);\n    \n    float amp = smoothstep(0.0, 1.0, (sin(theta+iGlobalTime*2.0)*0.5+0.5)-b)*a;\n    float phase = d + sin(theta * f + o + ti *2.5) * amp;\n    \n    return sin(clamp(phase, 0.0, PI*2.0) + PI\/2.0) + 0.9999;\n}\n\nfloat triangle(vec2 pos, float r, float a, float o, float s, float f, float b, float t)\n{\n    float root2 = sqrt(2.0);\n\n    float d =  dot(pos, vec2(0.0,-1.0));\n    d = max(d, dot(pos, vec2(-root2,1.0)));\n    d = max(d, dot(pos, vec2( root2,1.0)));\n\n    return 1.0 - smoothstep(0.0, t, electro(pos, d\/r, f, o, s, a, b));\n}\n\nfloat circle(vec2 pos, float r, float a, float o, float s, float f, float b, float t)\n{\n    float d = length(pos);\n    \n    return 1.0 - smoothstep(0.0, t, electro(pos, d\/r, f, o, s, a, b));\n}\n\nfloat square(vec2 pos, float r, float a, float o, float s, float f, float b,float t)\n{\n    float d = max(abs(pos).x, abs(pos).y);\n    \n    return 1.0 - smoothstep(0.0, t, electro(pos, d\/r, f, o, s, a, b));\n}\n\nfloat shape(vec2 pos, float r, float a, float o, float s, float f, float b, float t)\n{\n    float sq = square(pos-vec2(0.0,0.0),r,a,o,s,f,b,t);\n    float ci = circle(pos+vec2(0.5,0.0),r,a,o,s,f,b,t);\n    float tri  = triangle(pos-vec2(0.5,0.0),r,a,o,s,f,b,t);\n    return max(tri, max(sq, ci));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n   const float radius = 0.06;\n   const float amp = 0.9; \n   const float freq = 5.0;\n   const float band = 0.75;\n   const float speed = 0.0;\n   const float thickness = 0.003;\n    \n   vec2 pos = fragCoord.xy \/ max(iResolution.x, iResolution.y) * vec2(2.0) - vec2(1.0);\n   pos -= vec2(0.0, -0.5);\n    \n    \n   vec3 color = vec3(0.0);\n   color.r = shape(pos, radius, amp, 0.0 *PI,-speed, freq, band, thickness);\n   color.g = shape(pos, radius, amp, 0.7 *PI, 0.0,   freq, band, thickness);\n   color.b = shape(pos, radius, amp, 1.4 *PI, speed, freq, band, thickness);\n\n   fragColor = vec4(color,1.0);\n}","name":"","description":"","type":"image"}]}}