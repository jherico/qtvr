{"Shader":{"ver":"0.1","info":{"id":"4tjSRt","date":"1445881141","viewed":572,"name":"The First Order","username":"germangb","description":"Logo of the First Order.","likes":10,"published":3,"flags":8,"tags":["2d","starwars"],"hasliked":0},"renderpass":[{"inputs":[{"id":45,"src":"\/presets\/tex17.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/#define SIMPLE\n#define INVERTED\n\n#define SPIKES 15\n#define SIDES 3\n\nmat2 rot2 (float i) {\n \treturn mat2(cos(i), sin(i), -sin(i), cos(i));   \n}\n\nfloat logo (vec2 uv, float time) {\n    float sh = 0.0;\n    vec3 pol = vec3(0.0);\n        \n    float apear = clamp((-time+0.5+1.0), 0.0, 10.0);\n    for (int i = 0; i < SIDES; i++) {\n        vec2 uvRot = rot2(float(i)*3.14159\/float(SIDES))*uv;\n        pol.x = mix(1.0, pol.x, smoothstep(0.0, 0.035, 0.5256-uvRot.x*uvRot.x));\n        pol.y = mix(1.0, pol.y, smoothstep(0.0, 0.035, 0.64-uvRot.x*uvRot.x));\n        pol.z = mix(1.0, pol.z, smoothstep(0.0, 0.035, 0.77-uvRot.x*uvRot.x));\n    }\n    \n    float p = pol.x-pol.y;\n    #ifdef INVERTED\n    p+=pol.z;\n    #endif\n    sh = mix(sh, 1.0, p);\n    \n    float r = length(uv);\n    sh = mix(1.0, sh, smoothstep(0.0, 0.03, abs(r - 0.6 + apear*0.4) - 0.02));\n    if (r < 0.6) {\n        for (int i = 0; i < SPIKES; i++) {\n            float r = texture2D(iChannel0, vec2(float(i)*(0.385+0.72))).r;\n            float apear = clamp(-((time-0.5-r + 0.8)*0.5)+1.0, 0.0, 10.0);\n            vec2 uvRot = rot2(float(i)*6.283\/float(SPIKES))*uv;\n        \tfloat a = atan(uvRot.x, uvRot.y - 0.325 - apear);\n    \t\tsh = mix(1.0, sh, smoothstep(-0.0, 0.1, abs(a)-0.15));\n        }\n    }\n    \n    #ifdef INVERTED\n    sh = 1.0-sh;\n    #endif\n    \n    return sh;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float masterTime = mod(iGlobalTime, 16.0);\n\tvec2 uv = fragCoord.xy \/ iResolution.xy * 2.0 - 1.0;\n\tuv.x *= iResolution.x\/iResolution.y;\n    uv *= clamp(masterTime, 0.0, 1.5);\n    uv = rot2(exp(-masterTime*0.25) - 0.4) * uv;\n    \n    float tt = 1.45;\n    float shake = exp(-masterTime+tt);\n    if (masterTime < tt) shake = 0.0;\n    uv.x += sin(masterTime*32.0)*0.0125 * shake;\n    uv.y += cos(masterTime*48.0)*0.0125 * shake;\n            \n    uv += (texture2D(iChannel0, uv + floor(masterTime\/0.05)*0.05).rg * 2.0 - 1.0) * 0.005;\n    \n    float t = masterTime * 6.0; \n    float sh = logo(uv, masterTime);\n    \n    #ifdef SIMPLE\n    fragColor.rgb = mix(vec3(0.0), vec3(1.0), (1.0-sh));\n    #else\n    vec2 uv2 = uv+vec2(-1.0,1.0)*0.035;\n    vec3 base = vec3(0.5, 0.0667, 0.1725);base *= 1.1;\n    \n    t = 0.0;\n    float n = texture2D(iChannel0, uv*0.1+t * 0.0012).r;\n    n += texture2D(iChannel0, uv*0.05-t * 0.0012).r;\n    n += texture2D(iChannel0, uv*0.025-t * 0.0012).r;\n    n += texture2D(iChannel0, uv*0.0125+t * 0.00012+2.).r;\n    n += texture2D(iChannel0, uv+t * 0.00012+4.).r;\n    n\/=4.5;\n    n += texture2D(iChannel0, uv+t * 0.0001).r*0.6;\n    n = clamp(n, 0.0, 1.0);\n    \n    sh *= mix(0.75, 1.0, n);\n    fragColor.rgb = mix(vec3(base*0.25), base, (1.0-sh));\n    \n    fragColor.rgb *= mix(0.825, 1.0, smoothstep(0.85, 0.9, n));\n    fragColor.rgb = mix(mix(fragColor.rgb, vec3(0.5, 0.0667, 0.1725), 0.5), fragColor.rgb, smoothstep(0.75, 0.9, n*sh));\n    \n    fragColor.rgb *= mix(1.0, 0.5, smoothstep(0.8, 1.75, length(fragCoord\/iResolution.xy*2.0-1.0)));\n    #endif\n    \n    fragColor.rgb = mix(fragColor.rgb, vec3(0.0), smoothstep(14.0, 15.0, masterTime));\n}","name":"","description":"","type":"image"},{"inputs":[],"outputs":[{"channel":"0"}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 mainSound(float time)\n{\n        float tim = mod(time, 16.0);\n    vec2 t = vec2(0.0);\n    float a = exp(-max(tim*tim - 2.0, 0.0)*0.25);\n    a *= 1.0-exp(-tim);\n    t += sin(tim*3.1415*2.0*25.0) * a;\n    t += sin(tim*3.1415*2.0*59.0) * a;\n    t += sin(tim*3.1415*2.0*107.0) * a;\n    \n    t += rand(vec2(time, time)) * a * 0.1;\n      \n    return clamp(t, -1.0, 1.0);\n}","name":"","description":"","type":"sound"}]}}