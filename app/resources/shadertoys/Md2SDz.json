{"Shader":{"ver":"0.1","info":{"id":"Md2SDz","date":"1411113541","viewed":909,"name":"Worley noise 2","username":"FabriceNeyret2","description":"3D worley noise sliced at z(t).<br\/>Worley noise is close to Perlin but using Vorono\u00ef distance as wavelet.","likes":7,"published":3,"flags":0,"tags":["voronoi","worley","short"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float rnd(float x) { return fract(1000.*sin(234.56*x)); }\nvec3 rnd3(float x) { return vec3(rnd(x),rnd(x+.1),rnd(x+.2)); }\nfloat hash(float x,float y,float z) { return (x+432.432*y-1178.65*z); }\nfloat hash(vec3 v) { return dot(v,vec3(1., 32.432, -1178.65)); }\n    \nvec4 Worley(vec3 uvw) {\n    \n   vec3 uvwi = floor(uvw);\t\t\t\t\t\t\t\/\/ cell coords\n   float dmin = 1e9, d2min=1e9, nmin=-1.;\n    \n    for (int i=-1; i<=1; i++)\t\t\t\t\t\t\/\/ visit neighborhood\n      for (int j=-1; j<=1; j++)\t\t\t\t\t\t\/\/ to find the closest point\n          for (int k=-1; k<=1; k++) \n          {\n              vec3 c = uvwi + vec3(float(i),float(j),float(k)); \/\/ neighbor cells\n              float n = hash(c);\t \t\t\t\t\t\t\t\/\/ cell ID\n              vec3 p = c + rnd3(n+.1);\t\t\t\t\t\t\t\/\/ random point in cell\n              float d = length(p-uvw);\t\t\t\t\t\t\t\/\/ dist to point\n              if (d<dmin) { d2min=dmin; dmin=d; nmin=n; }\t\t\/\/ 2 closest dists\n              else if (d<d2min) { d2min=d; }\n          }\n\treturn vec4(dmin,d2min,d2min-dmin, nmin);\t\t\t\/\/ 2 closest dists + closest ID\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 uvw = vec3(2.*(fragCoord.xy \/ iResolution.y-vec2(.9,.5)), .02*iGlobalTime);\n    float a = .2*iGlobalTime,c=cos(a),s=sin(a); uvw.xy *= mat2(c,-s,s,c);\t\/\/ rotate\n    uvw *= 20.*(.7+.5*vec3(vec2(cos(.5*iGlobalTime)),0.));\t\t\t\t\t\/\/ zoom\n\n    vec4 wor = Worley(uvw);          \n    vec3 col, ccol = mix(vec3(1.), rnd3(wor.a+.4), wor.z);\n    int mode = int(mod(.25*iGlobalTime,3.));\t\t\t\t\t\t\t\t\/\/ demo mode\n    if      (mode==0) col = vec3(wor.x);\n    else if (mode==1) col = vec3(wor.y);\n    else              col = vec3(wor.z);\n    \/\/col = pow(col,vec3(4.));   \n    \/\/col = 1.- pow(1.-col,vec3(4.));   \n    col *= ccol;\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}