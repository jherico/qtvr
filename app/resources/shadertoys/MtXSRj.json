{"Shader":{"ver":"0.1","info":{"id":"MtXSRj","date":"1437863139","viewed":856,"name":"City road","username":"Cubed","description":"New to raymarching, playing around with stuff. <br\/>Credit to I\u00f1igo Qu\u00edlez for the distance field functions, which I've mutilated horribly. <img src=\"\/img\/emoticonHappy.png\"\/>","likes":7,"published":3,"flags":0,"tags":["basic","raymarch"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"vec3 opRep(vec3 p, vec3 c) {\n    return mod(p,c)-0.5*c;\n}\n\nfloat opU( float d1, float d2 ) {\n    return min(d1,d2);\n}\n\nfloat sdBox( vec3 p, vec3 b ) {\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nmat2 rotation(float theta) {\n    return mat2(cos(theta), -sin(theta), sin(theta), cos(theta));\n}\n\nfloat map(vec3 p) {\n    float res = sdBox(opRep(p, vec3(11.0, 0.0, 11.0)), vec3(3.0, 8.0, 3.0));\n    res = opU(res, sdBox(opRep(p + vec3(0.0, -4.0, 5.0), vec3(0.0, 0.0, 10.0)), vec3(1.0, 0.2, 5.0)));\n    res = opU(res, sdBox(opRep(p + vec3(0.0, -4.3, 0.0), vec3(0.0, 0.0, 4.0)), vec3(0.1, 0.05, 0.8)));\n    res = opU(res, p.y);\n    \n\treturn res;\n}\n\nfloat trace(vec3 o, vec3 r) {\n    float t = 0.0;\n    for (int i = 0; i < 50; i++) {\n    \tvec3 p = o + r * t;\n        float d = map(p);\n        t += d;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x \/ iResolution.y;\n    vec3 r = normalize(vec3(uv, 1.0));\n    r.yz *= rotation(0.5);\n    r.xy *= rotation(sin(iGlobalTime + 10.0) * 0.5);\n    \n    float altitude = cos(iGlobalTime * 0.5) * 4.5 + 5.5;\n    vec3 o = vec3(sin(iGlobalTime * 0.5) * 1.7, altitude, iGlobalTime * 32.0);\n    float t = trace(o, r);\n    float fog = 1.0 \/ (1.0 + t * t * 0.01);  \n    vec3 fc = vec3(fog);\n\tfragColor = vec4(fc ,1.0);\n}","name":"","description":"","type":"image"}]}}