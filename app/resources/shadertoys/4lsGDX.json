{"Shader":{"ver":"0.1","info":{"id":"4lsGDX","date":"1425710024","viewed":690,"name":"ngWaves08","username":"netgrind","description":"mouse x is<br\/>r a d","likes":1,"published":3,"flags":0,"tags":["waves","netgrind","neat"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"vec4 hue(vec4 color, float shift) {\n\n    const vec4  kRGBToYPrime = vec4 (0.299, 0.587, 0.114, 0.0);\n    const vec4  kRGBToI     = vec4 (0.596, -0.275, -0.321, 0.0);\n    const vec4  kRGBToQ     = vec4 (0.212, -0.523, 0.311, 0.0);\n\n    const vec4  kYIQToR   = vec4 (1.0, 0.956, 0.621, 0.0);\n    const vec4  kYIQToG   = vec4 (1.0, -0.272, -0.647, 0.0);\n    const vec4  kYIQToB   = vec4 (1.0, -1.107, 1.704, 0.0);\n\n    \/\/ Convert to YIQ\n    float   YPrime  = dot (color, kRGBToYPrime);\n    float   I      = dot (color, kRGBToI);\n    float   Q      = dot (color, kRGBToQ);\n\n    \/\/ Calculate the hue and chroma\n    float   hue     = atan (Q, I);\n    float   chroma  = sqrt (I * I + Q * Q);\n\n    \/\/ Make the user's adjustments\n    hue += shift;\n\n    \/\/ Convert back to YIQ\n    Q = chroma * sin (hue);\n    I = chroma * cos (hue);\n\n    \/\/ Convert back to RGB\n    vec4    yIQ   = vec4 (YPrime, I, Q, 0.0);\n    color.r = dot (yIQ, kYIQToR);\n    color.g = dot (yIQ, kYIQToG);\n    color.b = dot (yIQ, kYIQToB);\n\n    return color;\n}\n\nvec2 rotate(vec2 v, float a){\n\tfloat t = atan(v.y,v.x)+a;\n    float d = length(v);\n    v.x = cos(t)*d;\n    v.y = sin(t)*d;\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = 4.0;\n    float i= iGlobalTime;\n\tvec2 uv = fragCoord.xy \/ iResolution.xy*scale - scale*.5;\n    vec4 c = vec4(1.0,0.0,1.0,1.0);\n    uv = rotate(uv,sin(length(uv.yx)+iMouse.x*.02+i));\n    mat2 m = mat2(\n    \tuv.x*uv.y,\n        uv.y,\n        dot(uv.y,uv.x+iMouse.y*.02),\n        sin(uv.y*6.0+cos(uv.x)*5.0)\n    );\n    m[0] = rotate(m[0],length(uv));\n    c.rb= mod(uv*m+i,1.0)*.5+.5;\n    c.rb = pow(c.rb,vec2(9.0));\n    c.rgb = hue(c,i).rgb;\n\tfragColor = c;\n}","name":"","description":"","type":"image"}]}}