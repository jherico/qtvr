{"Shader":{"ver":"0.1","info":{"id":"4tS3W3","date":"1432811566","viewed":813,"name":"Pulse waves - Visualiser","username":"uNiversal","description":"A simpler multiple waveform type visualiser based on Waves Remix by: ADOB<br\/><br\/>Made to work with Kodi Shadertoy https:\/\/github.com\/topfs2\/visualization.shadertoy","likes":2,"published":3,"flags":0,"tags":["2d","audio","visualiser"],"hasliked":0},"renderpass":[{"inputs":[{"id":34,"src":"\/presets\/mzk05.mp3","ctype":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/*\nPulse waves - Visualiser - https:\/\/www.shadertoy.com\/view\/4tS3W3\nBased on Waves Remix by: ADOB - 10th April, 2015 https:\/\/www.shadertoy.com\/view\/4ljGD1\nPulse waves by: uNiversal - 28th May, 2015\nCreative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n*\/\n\nfloat squared(float value) { return value * value; }\n\nfloat getAmp(float frequency) { return texture2D(iChannel0, vec2(frequency \/ 512.0, 0)).x; }\n\nfloat getWeight(float f) {\n    return (+ getAmp(f-2.0) + getAmp(f-1.0) + getAmp(f+2.0) + getAmp(f+1.0) + getAmp(f)) \/ 5.0; }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uvTrue = fragCoord.xy \/ iResolution.xy;\n    vec2 uv = -1.0 + 2.0 * uvTrue;\n\n    float lineIntensity;\n    float glowWidth;\n    vec3 color = vec3(0.0);\n\n    for(float i = 0.0; i < 5.0; ++i) {\n\n        uv.y += (0.3 * sin(uv.y + i - 5.0 - iGlobalTime * 0.0));\n        float Y = uv.y + getWeight((i) * 20.0) *\n            (texture2D(iChannel0, vec2(uvTrue.x, 1)).x - 0.5);\n        lineIntensity = 0.5 + squared(0.6 * abs(mod(uvTrue.x + i \/ 4.3 + iGlobalTime,2.0) - 1.0));\n        glowWidth = abs(lineIntensity \/ (150.0 * Y));\n        color += vec3(glowWidth * (1.5 + sin(iGlobalTime * 0.13)),\n                      glowWidth * (1.5 - sin(iGlobalTime * 0.23)),\n                      glowWidth * (1.5 - cos(iGlobalTime * 0.19)));\n    }    \n\n    fragColor = vec4(color, 1.0);\n}","name":"","description":"","type":"image"}]}}