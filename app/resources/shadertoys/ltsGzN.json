{"Shader":{"ver":"0.1","info":{"id":"ltsGzN","date":"1419545288","viewed":383,"name":"XOR Texture","username":"4rknova","description":"A xor texture.","likes":1,"published":3,"flags":0,"tags":["xor"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ by Nikos Papadopoulos, 4rknova \/ 2014\n\/\/ Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ Use anything in the range of [1, 24]\n#define RES 24\n\nfloat xor(vec2 p)\n{\n    float r = 0.;\n   \tfor (float i = 1.; i <= 32.; ++i) {\n        float d = pow(2., i);\n    \tvec2  s = floor(mod(p \/ d, 2.));\n        r += ((s.x == s.y) ? 0. : 1.) * d;\n\t}    \n    return r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float r = pow(2., float(RES));\n    vec2  p = floor(fragCoord.xy \/ iResolution.xy * r);\n    fragColor = vec4(vec3(xor(p) \/ r), 1);\n}","name":"","description":"","type":"image"}]}}