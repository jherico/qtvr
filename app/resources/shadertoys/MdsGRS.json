{"Shader":{"ver":"0.1","info":{"id":"MdsGRS","date":"1373648440","viewed":1334,"name":"Runner","username":"Dave_Hoskins","description":"An experiment in segment animation.<br\/><br\/>DRAG AND DROP MOUSE-X FOR RUNNING SPEED.","likes":17,"published":3,"flags":0,"tags":["2d","animation","runner"],"hasliked":0},"renderpass":[{"inputs":[{"id":1,"src":"\/presets\/tex00.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":30,"src":"\/presets\/tex16.png","ctype":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":226,"src":"https:\/\/soundcloud.com\/lyricwalls\/runner","ctype":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Runner - by David Hoskins 2013\n\/\/ Shadertoy address - https:\/\/www.shadertoy.com\/view\/MdsGRS\n\n\/\/ v.1.2 Window light, particles, character detail and camera bob for a sense of motion.\n\/\/ v.1.1 Added colours and toes! \n\nfloat timeT;\nfloat backTime;\nfloat forTime;\nfloat runnerHeight;\nfloat runCycle;\nfloat speed;\nfloat material = 0.0;\nconst vec3 sunColour = vec3(1.0, 1.0, .9);\n\n#define HEAD_STYLE_1\n\/\/#define HEAD_STYLE_2\n\/\/#define HEAD_STYLE_3\n\n\/\/----------------------------------------------------------------------------\nfloat Circle(vec2 p, float b)\n{\n\treturn length(p)-b;\n}\n\n\/\/----------------------------------------------------------------------------\nfloat ShadowBlob(vec2 p, float b)\n{\n\treturn clamp(-(length(p)-b)*3.5, 0.0, 1.0);\n}\n\/\/----------------------------------------------------------------------------\nfloat Box(vec2 p, vec2 b)\n{\n\treturn length(max(abs(p)-b,0.0));\n}\n\n\/\/----------------------------------------------------------------------------\nvec2 Segment( vec2 a, vec2 b, vec2 p )\n{\n\tvec2 pa = p - a;\n\tvec2 ba = b - a;\n\tfloat h = clamp( dot(pa,ba)\/dot(ba,ba), 0.0, 1.0 );\n\treturn vec2( length( pa - ba*h ), h );\n}\n\n\/\/----------------------------------------------------------------------------\nfloat Windows(vec2 p)\n{\n\tvec2 st = p;\n\tst.x *= .8;\n\tvec2 win1 = vec2(st.x, st.y - .6);\n\t\n\t\/\/ One pane is for both sections, so only need 3...\n\twin1.x = mod(st.x+.03, 1.0)-.5;\n\tfloat d = Box(win1, vec2(.05, .26));\n\t\n\twin1.x = mod(st.x-.1, 2.0)-.5;\n\td = min(d, Box(win1, vec2(.05, .26)));\n\t\n\twin1.x = mod(st.x+.85, 2.0)-.5;\n\td = min(d, Box(win1, vec2(.1, .26)));\n\t\n\treturn d;\n}\n\n\n\/\/----------------------------------------------------------------------------\nvec2 Rotate(vec2 pos, vec2 piv, float ang)\n{\n\tmat2 m = mat2(cos(ang), sin(ang), -sin(ang), cos(ang));\n\tpos = (m * (pos-piv))+piv;\n\treturn pos;\n}\n\n\/\/-----------------------------------------------------------------------------\nfloat Hash( float n )\n{\n    \/\/return fract(sin(n)*43758.5453);\n\treturn texture2D(iChannel2, vec2(n*0.93236, n*.51323), -100.0).x;\n}\n\n\/\/-----------------------------------------------------------------------------\nfloat Noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = p.x + p.y*57.0;\n\n    float res = mix(mix( Hash(n+  0.0), Hash(n+  1.0),f.x),\n                    mix( Hash(n+ 57.0), Hash(n+ 58.0),f.x),f.y);\n\n    return res;\n}\n\n\/\/----------------------------------------------------------------------------\nfloat Noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\t\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = texture2D( iChannel2, (uv+0.5)\/256.0, -100.0 ).yx;\n\treturn mix( rg.x, rg.y, f.z );\n}\n\n\/\/----------------------------------------------------------------------------\nfloat Head( vec2 p, float s )\n{\n\tp.y *= .85;\n\tfloat d = length(p)-s;\n\tfloat h = length(p+vec2(.03, -0.02))-s*.4;\n\t#ifdef HEAD_STYLE_1\n\th -= max(s*1.0+Noise(p*40.0-vec2(.9)), 0.0)*.1;\n\t#endif\n\t#ifdef HEAD_STYLE_2\n\th -= max(s*1.0+Noise(p*vec2(34.0, 14.0)-vec2(1.3, 9.3)), 0.0)*.1;\n\t#endif\n\t#ifdef HEAD_STYLE_3\n\th -= max(s*1.0+Noise(p*89.0+vec2(13.5)), 0.0)*.1;\n\t#endif\n\th += length(p)-s;\n\tif (h < d) material = 3.0;\n\treturn min(d, h);\n}\n\n\/\/----------------------------------------------------------------------------\nfloat Smin( float a, float b )\n{\n    float k = 0.02;\n\tfloat h = clamp( 0.5 + 0.5*(b-a)\/k, 0.0, 1.0 );\n\treturn mix( b, a, h ) - k*h*(1.0-h);\n}\n\t\n\/\/----------------------------------------------------------------------------\nfloat Running( vec2 p)\n{\n\t\/\/ Oh the horror! - of magic numbers. ;)\n\tfloat d;\n\tfloat ang = -speed*.18-.15;\n\tmat2 leanM \t\t= mat2(cos(ang), sin(ang), -sin(ang), cos(ang));\n\tmat2 invLeanM \t= mat2(cos(-ang), sin(-ang), -sin(-ang), cos(-ang));\n\t\n\tp += vec2(-speed*.4, runnerHeight);\n\tp *= leanM;\n\n\tfloat headX = sin(runCycle*.25)*.015;\n\td = Head(p-vec2(.44+headX, -0.02-headX*.25), .059);\n\t\n\tfloat arm1 = sin(runCycle)*.6*(speed*.5+.1);\n\tfloat leg1 = sin(runCycle)*.7*(speed*.1+.35);\n\t\n\t\/\/ Neck...\n\tvec2 h = Segment( vec2(0.4,-0.1-0.01-headX*.5), vec2(0.42+headX,-.04), p );\n\tfloat d2 = h.x - 0.03 + h.y*0.005;\n\td = Smin(d, d2 );\n\n\t\/\/ Body...\n\th = Segment( vec2(0.4,-0.17), vec2(0.4,-.37), p );\n\td2 = h.x - 0.065 + h.y*0.02;\n\tif (d2 < 0.005)\n\t{\n\t\tif (p.y > -0.28)\n\t\t{\n\t\t\tmaterial = 5.0;\n\t\t\tif (p.y > -0.23 && p.y < -.22)\n\t\t\t{\n\t\t\t\tmaterial = 6.0;\n\t\t\t}\n\t\t}\n\t\tif (p.y < -0.31) material = 4.0;\n\t\telse\n\t\tif (p.y < -0.30) material = 0.0;\n\t\t\n\t}\n\td = min(d, d2 );\n\t\n\t\/\/ Upper leg...\n\tvec2 knee = Rotate(vec2(0.4,-.55), vec2(.4,-0.36), -leg1+.5);\n\th = Segment(vec2(0.4,-.36), knee, p );\n\td2 = h.x - 0.05 + h.y*0.015;\n\tif (d2 < 0.02)\n\t{\n\t\tmaterial = 4.0;\n\t\tif (p.y > -.31) material = 0.0;\n\t\tif (d2 < -.035) material = 2.0;\n\t}\n\td = Smin(d, d2 );\n\t\n\t\/\/ Lower leg...\n\tvec2 rotFoot = Rotate(knee+vec2(.0, -.22), knee, -(-leg1*.3+1.6));\n\trotFoot = Rotate(rotFoot, knee, smoothstep(-.2, .2, -(leg1)*.15)*5.2-1.2);\n\th = Segment(knee, rotFoot , p );\n\td2 = h.x - 0.03+ h.y*0.008;\n\tif (d2< 0.02)\n\t{\n\t\tif (Circle(rotFoot-p, .06) < 0.0)\n\t\t{\n\t\t\tmaterial = 6.0;\n\t\t}\n\t}\n\n\td = Smin(d, d2 );\n\t\n\t\/\/ Upper arm...\n\tvec2 elbow = Rotate(vec2(0.4,-.27), vec2(.4,-0.14), arm1);\n\th = Segment(vec2(0.4,-0.14),  elbow, p );\n\td2 = h.x - 0.035 + h.y*0.01;\n\tif (d2< 0.005) material = 0.0;\n\td = min(d, d2 );\n\t\/\/ Lower arm...\n\tvec2 wrist = Rotate(elbow+vec2(.0, -.15), elbow, arm1*1.5+.7+(speed-.9)*.4);\n\th = Segment(elbow,  wrist, p );\n\td2 = h.x - 0.027 + h.y*0.01;\n\tif (d2< 0.005)\n\t{\n\t\t\/\/ Wrist band using a simple circle around the wrist...\n\t\tmaterial = 0.0;\n\t\tif (Circle(wrist-p, .05) < 0.0)\n\t\t{\n\t\t\tmaterial = 5.0;\n\t\t}\n\t}\n\td = min(d, d2 );\n\t\/\/ Hand...\n\tvec2 hand = Rotate(wrist+vec2(.02, -0.01), wrist, arm1*1.5-.3+(speed-.8)*.8);\n\th = Segment(hand, wrist, p );\n\td2 = h.x - 0.024 + h.y*0.004;\n\tif (d2< 0.005) material = 0.0;\n\td = min(d, d2 );\n\n\t\/\/ Foot...\n\tvec2 toes = Rotate(rotFoot+vec2(.08, 0.0), rotFoot, smoothstep(-.1, .15, -leg1*.2)*2.4-1.7-leg1);\n\t\/\/if (toes.y < -.7) toes.y = -2.7;\n\th = Segment(rotFoot, toes, p );\n\td2 = h.x - 0.018 + h.y*0.005;\n\tif ((d2) < 0.02) material = 1.0;\n\td = Smin(d, d2 );\n\t\n\tvec2 nails = Rotate(toes+vec2(.02, 0.0), toes, smoothstep(-.14, .15, -leg1*.3)*2.4-1.7-leg1);\n\th = Segment(toes, nails, p );\n\td2 = h.x - 0.013 + h.y*0.003;\n\tif (d2 < 0.01) material = 1.0;\n\td = min(d, d2 );\n\n\t\n\tif (d >= 0.005)\n\t{\n\t\t\/\/ Do shadowed back limbs if others haven't been hit...\n\t\t\/\/ Upper arm 2...\n\t\telbow = Rotate(vec2(0.4,-.27), vec2(.4,-0.14), -arm1);\n\t\th = Segment(vec2(0.4,-0.14), elbow, p );\n\t\td2 = h.x - 0.035 + h.y*0.01;\n\t\td = min(d, d2 );\n\t\t\/\/ Lower arm 2...\n\t\t\/\/wrist = Rotate(elbow+vec2(.13, -.02), elbow, -arm1*1.8-.7);\n\t\twrist = Rotate(elbow+vec2(.0, -.15), elbow, -arm1*1.5+.7+(speed-1.2)*.4);\n\t\th = Segment(elbow,  wrist, p );\n\t\t{\n\t\t\tif (Circle(wrist-p, .05) < 0.0)\n\t\t\t{\n\t\t\t\tmaterial = 5.0;\n\t\t\t}\n\t\t}\n\n\t\td2 = h.x - 0.027 + h.y*0.01;\n\t\td = min(d, d2 );\n\t\t\/\/ Hand...\n\t\t\n\t\tvec2 hand = Rotate(wrist+vec2(.02, -0.01), wrist, -arm1*1.5-.3+(speed-.8)*.8);\n\t\th = Segment(hand, wrist, p );\n\t\td2 = h.x - 0.024 + h.y*0.004;\n\t\tif (d2< 0.005) material = 0.0;\n\t\td = min(d, d2 );\n\t\t\/\/ Upper leg...\n\t\tknee = Rotate(vec2(0.4,-.55), vec2(.4,-0.36), leg1+.5);\n\t\th = Segment(vec2(0.4,-.36), knee, p );\n\t\td2 = h.x - 0.05 + h.y*0.015;\n\t\tif (d2 < 0.005) material = 4.0;\n\t\td = Smin(d, d2 );\n\t\t\n\t\t\/\/ Lower leg...\n\t\trotFoot = Rotate(knee+vec2(.0, -.22), knee, -(leg1*.3+1.6));\n\t\trotFoot = Rotate(rotFoot, knee, smoothstep(-.2, .2, leg1*.15)*5.2-1.2);\n\t\th = Segment(knee, rotFoot, p );\n\t\td2 = h.x - 0.03+ h.y*0.008;\n\t\tif (d2< 0.02)\n\t\t{\n\t\t\tif (Circle(rotFoot-p, .06) < 0.0)\n\t\t\t{\n\t\t\t\tmaterial = 6.0;\n\t\t\t}\n\t\t}\n\n\t\td = min(d, d2 );\n\t\n\t\t\/\/ Foot...\n\t\ttoes = Rotate(rotFoot+vec2(.08, 0.0), rotFoot, smoothstep(-.1, .15, leg1*.2)*2.7-1.7+leg1);\n\/\/\t\tlimit = (vec2(toes.x, -.01+runnerHeight-speed*.08) *leanM).y;\t\t\n\/\/\t\tif (toes.y < limit) toes.y = limit;\n\t\t\n\t\th = Segment(rotFoot, toes, p );\n\t\td2 = h.x - 0.018 + h.y*0.005;\n\t\tif (d2 < 0.02) material = 1.0;\n\t\td = Smin(d, d2 );\n\t\t\n\t\tvec2 nails = Rotate(toes+vec2(.02, 0.0), toes, smoothstep(-.14, .15, leg1*.3)*2.4-1.7+leg1);\n\t\th = Segment(toes, nails, p );\n\t\td2 = h.x - 0.013 + h.y*0.003;\n\t\tif (d2 < 0.01) material = 1.0;\n\t\td = min(d, d2 );\n\n\t\tmaterial += 20.0;\n\t}\n\treturn d;\n}\n\n\/\/----------------------------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\ttimeT = iGlobalTime*1.5+33.44;\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tvec2 centre = uv*2.0-1.0;\n\tuv.x *= iResolution.x\/iResolution.y;\n\tvec3 col;\n    if (iMouse.z > 0.0)\n    {\n\t\tspeed = (iMouse.x\/iResolution.x)+.8;\n    }else\n    {\n        speed = 1.5;\n\t}\n\trunCycle = timeT*7.0*speed;\n\tbackTime = timeT * .6 *speed;\n\tforTime = timeT * speed *1.7;\n\tfloat ang = -speed*.2-.15;\n\trunnerHeight = clamp(abs(sin(runCycle-.15)), .0, .92);\n\trunnerHeight = runnerHeight*.14*(1.0\/speed*.4+.55);\n\trunnerHeight= pow(runnerHeight,1.4)*1.2-.9+ang*.2-(.15\/speed)*.1;\n\t\n\tfloat winLight = mod((forTime+uv.x-.05)*1.6, 2.0);\n\tif (winLight > 1.0) winLight = 2.0-winLight;\n\t\n\tuv.y -= runnerHeight*.3+.28;\n\t\n\twinLight = pow(winLight, 1.6)*1.4+.2;\n\t\n\tfloat w = Windows(uv+vec2(forTime, 0.0));\n\tif (w > 0.0)\n\t{\n\t\tcol = vec3(0.02, 0.02, .02);\n\t\t\/\/ Do stripes and light fades...\n\t\tif (uv.y > .13)\n\t\t{\n\t\t\tcol = texture2D(iChannel0, vec2((uv.x+forTime)*.1, .2+uv.y*.1+floor((uv.x+forTime))*.1335)).yyy * .1;\n\t\t\tcol = vec3(.3, .4, 0.5) * col + vec3(.08, .08, 0.08);\n\t\t\tcol = mix(col, vec3(.03), sin(smoothstep(0.0, .01, mod(uv.x+forTime, .07)) * 3.14159) );\n\t\t\tcol *=winLight;\n\t\t}\n\t\telse\n\t\tif (uv.y > .1)\n\t\t{\n\t\t\tcol = vec3(.2*winLight);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcol = vec3(2.5);\n\t\t\tvec2 tex = vec2(forTime*2.5+centre.x*34.3*(uv.y*uv.y+.0575), uv.y*10.);\n\t\t\tcol *= texture2D(iChannel1, tex).yzz * .3 * winLight;\n\n\t\t\t\/\/ Shadow...\n\t\t\tfloat f = clamp(.5-abs(sin(runCycle+1.77))*.3, .0, .5)*.5+.4;\n\t\t\tvec2 p = uv+vec2(-speed*.26-.38, uv.y*10.0-.3);\n\t\t\t\n\t\t\tcol *= 1.0-clamp((ShadowBlob(p, f)*(winLight+.4))*.5, 0.0, .8);\n\t\t\n\t\t}\n\t\tcol = mix(vec3(0.5), col, smoothstep(0.0, .2, sqrt(w)));\n\t\tw = 0.0;\n\t\tfloat s = .0;\n\t\tfloat att = 1.0;\n\t\tfor (int i = 0; i < 20; i++)\n\t\t{\n\t\t\tfloat x = uv.x + forTime+s*.15*centre.x;\n\t\t\tfloat d = Windows(vec2(x, uv.y-s*.3));\n\t\t\tif (d < 0.01)\n\t\t\t{\n\t\t\t\tfloat n = Noise(vec3(uv*120.0+vec2(forTime*130.0, timeT), float(i)*0.01));\n\t\t\t\tw+= (.08+.7*pow(n, 50.0))*att;\n\t\t\t}\n\t\t\ts-=.04;\n\t\t\tatt *= .9;\n\t\t}\n\t\tw = pow(w, 1.3);\n\t\tcol = mix(col, sunColour, w);\n\n\t}else\n\t{\n\t\tvec2 st = uv+vec2(backTime, 0.0);\n\t\tst = vec2(st.x * .1, .4 - centre.y*.3);\n\t\tcol = texture2D(iChannel0, st).xyz *.7;\n\t}\n\t\n\tfloat d = Running(uv);\n\tif (d < 0.005)\n\t{\n\t\tfloat shade = material >= 20.0? .4:1.0;\n\t\tmaterial = mod(material, 20.0);\n\t\tif (material <.5) col = vec3(.9, .7, .5);\n\t\telse\n\t\tif (material < 1.5) col = vec3(.0, .3, .05);\n\t\telse\n\t\tif (material < 2.5) col = vec3(.1, .4, .5);\n\t\telse\n\t\tif (material < 3.5) col = vec3(.8, .6, .1);\n\t\telse\n\t\tif (material < 4.5) col = vec3(.0, .0, .04);\n\t\telse\n\t\tif (material < 5.5) col = vec3(.2, .0, .0);\n\t\telse\n\t\tif (material < 7.5) col = vec3(1.0, 1.0, 1.0);\n\t\t\t\n\t\twinLight *= shade;\n\t\tcol *= sunColour * vec3(winLight*.75);\n\t}\n\n\tcol = sqrt(col);\n\tuv = fragCoord.xy \/ iResolution.xy;\n\tcol *= .4+.3*pow(70.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y), .6 );\t\n\tfragColor = vec4(col,1.0);\n}\n\n\/\/----------------------------------------------------------------------------\n","name":"","description":"","type":"image"}]}}