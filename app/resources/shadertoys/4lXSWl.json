{"Shader":{"ver":"0.1","info":{"id":"4lXSWl","date":"1440367104","viewed":798,"name":"random kd-tree","username":"FabriceNeyret2","description":"translate and move with mouse.<br\/>#define tunes the probabilty of subdividing.","likes":10,"published":3,"flags":0,"tags":["procedural","kdtree","short"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define P_SUBDIV .2+.2*sin(iGlobalTime)\n\/\/#define P_SUBDIV .2\n\nfloat rnd(vec4 v) { return fract(4e4*sin(dot(v,vec4(13.46,41.74,-73.36,1.172))+17.34)); }\n    \nvoid mainImage( out vec4 fragColor, vec2 uv )\n{\n    vec2 u, R=iResolution.xy, m=iMouse.xy;\n    if (m.x+m.y<1e-2*R.x) m = R*(.5+.5*sin(.1*iGlobalTime+vec2(0,1.6)));\n    uv.x -= 8.*(m.x-R.x\/2.);\n    uv \/= (1.-m.y\/R.y)*4.;\n    \n\tvec2 z = R;\n    for (int i=0; i<16; i++) {\n        u = floor(uv\/z)+.5;\n        if (rnd(vec4(z*u, z)) < P_SUBDIV) break;\n        if (rnd(vec4(z*u+.1, z))<.5) z.x \/= 3.; else z.y \/= 3.;\n    }\n    uv = z\/2.-abs(uv-z*u);\n    fragColor = min(uv.x,uv.y)<2. ? vec4(0) \n    \t\t\t: rnd(vec4(z*u+.2,z))<.8 ? vec4(1)\n\t\t\t\t: cos(6.28*rnd(vec4(z*u+1.,z))+vec4(0,2.1,-2.1,0));\n}","name":"","description":"","type":"image"}]}}