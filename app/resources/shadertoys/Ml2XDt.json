{"Shader":{"ver":"0.1","info":{"id":"Ml2XDt","date":"1447506865","viewed":509,"name":"SmallStars","username":"P_Malin","description":"My attempt to play at starfield code golf.<br\/>Along the lines of https:\/\/www.shadertoy.com\/view\/MdlXWr<br\/>","likes":9,"published":3,"flags":0,"tags":["starfield","onetweet","golf"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ SmallStars - @P_Malin\n\/\/ My attempt to play at starfield code golf.\n\/\/ Along the lines of https:\/\/www.shadertoy.com\/view\/MdlXWr\n\n\/\/ Fully initialize f by using iDate.wwww - 138 characters\n\/\/*\nvoid mainImage( out vec4 f, vec2 p )\n{\n    p=p\/2e3-.2;\n\n    float b = ceil(atan(p.x, p.y) * 6e2), h = cos(b), z = h \/ dot(p,p);\n    f = exp(fract(z + h * b + iDate.wwww) * -1e2) \/ z;\n}\n\/**\/\n\n\/\/ Ignore resolution - 136 characters\n\/*\nvoid mainImage( out vec4 f, vec2 p )\n{\n    p=p\/2e3-.2;\n\n    float b = ceil(atan(p.x, p.y) * 6e2), h = cos(b), z = h \/ dot(p,p);\n    f = exp(fract(z + h * b + iDate.wwww) * -1e2) \/ z;\n}\n\/**\/\n\n\n\/\/ remove h = abs - 147 characters\n\/*\nvoid mainImage( out vec4 f, vec2 p )\n{\n    p = p \/ iResolution.xy - .5;\n\n    float b = ceil(atan(p.x, p.y) * 4e2), h = cos(b), z = h \/ dot(p,p);\n    \n    f += exp(fract(z + h * b + iDate.w) * -1e2) \/ z;\n}\n\/**\/\n\n\n\/\/ Utter hacks 1 - 152 characters\n\/*\nvoid mainImage( out vec4 f, vec2 p )\n{\n    p = p \/ iResolution.xy - .5;\n\n    float b = ceil(atan(p.x, p.y) * 4e2), h = abs(cos(b)), z = h \/ dot(p,p);\n    \n    f += exp(fract(z + h * b + iDate.w) * -1e2) \/ z;\n}\n\/**\/\n\n\/\/ No angular falloff - \n\/\/ hash -> abs(cos()) \n\/\/ no aspect ratio correctino - 180 cahrs\n\/*\nvoid mainImage( out vec4 f, vec2 p )\n{\n    p = p \/ iResolution.xy - .5;\n\n    float t = atan(p.x, p.y) * 2e2\n    ,b = ceil(t)\n    ,r = length(p)\n    ,h = abs(cos(b))\n    ,o = h * b + iDate.w;\n    o -= ceil(h\/r + o) - .5;\n    \n    r+=h\/o;\n\tf += (1. - 1e5 * r*r) \/ o \/ o - f;\n}\n\/**\/\n\n\/\/ Simplified star shape (no longer round) - 213 cahrs\n\/*void mainImage( out vec4 f, vec2 p )\n{\n    f.xyz = iResolution;\n    p -= .5 * f.xy;\n\n    float t = atan(p.x, p.y) * 99.\n    ,b = ceil(t)\n    ,r = length(p) \/ f.x\n    ,h = fract(cos(b)*b)\n    ,o = h * b + iDate.w;\n    o -= ceil(h\/r + o) - .5;\n    \n    t += .5-b;\n    r+=h\/o;\n\tf += (.25-t * t) * (1. - 1e5 * r*r) \/o\/o - f;\n}\n\/**\/\n\n\/\/ Changed hash function, star random depth and star shape calc= 216 chars\n\/* void mainImage( out vec4 f, vec2 p )\n{\n    f.xyz = iResolution;\n    p -= .5 * f.xy;\n\n    float t = atan(p.x, p.y) * 48.\n    ,b = ceil(t)\n    ,r = length(p) \/ f.x\n    ,h = fract(cos(b)*b)\n    ,o = h * b + iDate.w;\n    o -= ceil(h\/r + o) - .5;\n    \n    t=(b-t-.5)*h*r;\n    r+=h\/o;\n    \n\tf += (1. - 1e5 * (t*t+r*r)) \/ o\/o - f;\n} \n\/**\/\n\n\n\/\/ Even more changes from Fabrice & iq = 219 chars\n\/*void mainImage( out vec4 f, vec2 p )\n{\n    f.xyz = iResolution;\n    p -= .5 * f.xy;\n\n    float t = atan(p.x, p.y) * 48.\n    ,b = ceil(t)\n    ,r = length(p) \/ f.x\n    ,h = fract(sin(b)*9.)\n    ,o = h * 9. + iDate.w;\n    o -= ceil(h\/r + o) - .5;\n    \n\tf += (1. - 4e2 * length(vec2( h\/o+r, (b-t-.5)*h*r ))) \/ o\/o - f;\n}\n*\/\n\n\n\/\/ With changes from Fabrice & iq = 222 chars\n\/*\nvoid mainImage( out vec4 f, vec2 p )\n{\n    f.xyz = iResolution;\n    p -= .5 * f.xy;\n\n    float t = atan(p.x, p.y) * 48.\n    ,r = length(p) \/ f.x\n    ,h = fract(sin(ceil(t)) * 9.)\n    ,o = h * 9. + iDate.w\n    ,c = ceil(h\/r + o) - .5 - o;\n    \n\tf = vec4(1. - 4e2 * length(vec2( h\/c-r, (fract(t)-.5)*h*r ))) \/ c\/c;\n}\n\/**\/\n\n\/\/ With changes from Fabrice = 225 chars\n\/*\nvoid mainImage( out vec4 f, vec2 p )\n{\n    f.xyz = iResolution;\n    p = (p - .5 * f.xy ) \/ f.x;\n\n    float t = atan(p.x, p.y) * 48.\n    ,r = length(p)\n    ,h = fract(sin(ceil(t)) * 9.)\n    ,o = h * 9. + iDate.w\n    ,c = ceil(h\/r + o) - .5 - o;\n    \n\tf = vec4(1. - 4e2 * length(vec2( h\/c-r, (fract(t)-.5)*h*r ))) \/ c\/c;\n}\n*\/\n\n\/\/ Original version = 255 chars - @P_Malin\n\/*\nvoid mainImage( out vec4 f, in vec2 p )\n{\n    f.xyz = iResolution;\n    p = p \/ (f.xy) - .5;\n    p.y *= f.y \/ f.x; \/\/ aspect ratio correction\n\n    float t = atan(p.x, p.y) * 48.\n    ,r = length(p)\n    ,h = fract(sin(floor(t) * 8.) * 9.)\n    ,o = h * 9. + iDate.w\n    ,c = floor(h\/r + o) + .5 - o;\n    \n    p.x = ((h \/ c) - r);\n    p.y = (fract(t) - .5) * h * r;\n    \n\tf = vec4((1. - length( p ) * 400. ) \/ (c*c));\n}\n\/**\/\n\n\n\/*\n\/\/ Pre-golf hacking\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord \/ (iResolution.xy) - 0.5;\n    p.y *= iResolution.y \/ iResolution.x;\n    \n    float theta = atan(p.x, p.y) * radians(1400.);\n    float segmentPos = fract(theta);\n    float segmentIndex = floor(theta);\n    float random = fract(sin(segmentIndex * 123.45) * 67.89);\n    float screenRadius = length(p);\n    float worldRadius = random + 0.01;\n    float worldIntersectZ = worldRadius \/ screenRadius;\n      \n    float offset = random + iGlobalTime;\n    float fClosestStarZ = floor(worldIntersectZ + offset) + 0.5 - offset;\n\n   \tfloat fClosestStarScreenRadius = worldRadius \/ fClosestStarZ;\n    \n    float screenDR = (fClosestStarScreenRadius - screenRadius);\n    float screenDA = (segmentPos - 0.5) \/ screenRadius;\n    \n    float c = 0.0;\n    c = 1.0 - length( vec2( screenDR * 200.0, screenDA * 2.0 ) );\n    c = c * 2.0 \/ max( 0.001, fClosestStarZ);\n\tfragColor = vec4(c);\n}\n\/**\/\n","name":"","description":"","type":"image"}]}}