{"Shader":{"ver":"0.1","info":{"id":"XljXz3","date":"1445463142","viewed":565,"name":"Shining Supernova","username":"hassoncs","description":"Updated https:\/\/www.shadertoy.com\/view\/XdBSDh# to blend over the original texture image.","likes":8,"published":3,"flags":0,"tags":["rays","texture","light","shine"],"hasliked":0},"renderpass":[{"inputs":[{"id":4,"src":"\/presets\/tex03.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Updated from https:\/\/www.shadertoy.com\/view\/XdBSDh#\n\n#define SPEED       (1.0 \/ 80.0)\n#define SMOOTH_DIST 0.6\n\n#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \/\/ set up our coordinate system\n    float aspectRatio = iResolution.x \/ iResolution.y;\n    vec2 uv = ((fragCoord.xy \/ iResolution.xy) - vec2(0.5,0.5));\n    uv.x *= aspectRatio;\n    \n\t\/\/ get our distance and angle\n    float dist = length(uv);\n    float angle = (atan(uv.y, uv.x) + PI) \/ (2.0 * PI);\n    \n   \t\/\/ texture lookup\n    vec3 textureDist;\n    textureDist  = texture2D(iChannel0, vec2(iGlobalTime * SPEED, angle)).xyz;\n    \n    vec3 normal = texture2D(iChannel0, uv).xyz;\n    \n    \/\/ manipulate distance\n    textureDist *= 0.4;\n    textureDist += 0.5;\n    \n    \/\/ set RGB\n\tvec3 color = vec3(0.0,0.0,0.0);\n    \n    if (dist < textureDist.x)\n        color.x += smoothstep(0.0,SMOOTH_DIST, textureDist.x - dist);\n\n    if (dist < textureDist.y)\n        color.y += smoothstep(0.0,SMOOTH_DIST, textureDist.y - dist);\n    \n    if (dist < textureDist.z)\n        color.z += smoothstep(0.0,SMOOTH_DIST, textureDist.z - dist);\n    \n    \/\/ add a background grid\n    \/\/if (fract(mod(uv.x,0.1)) < 0.005 || fract(mod(uv.y,0.1)) < 0.005)\n    \/\/    color.y += 0.5;\n    \/\/else\n    \/\/    color.y += 0.1;\n    \n    \/\/ set final color\n\tfragColor = vec4(color + normal,1.0);\n}","name":"","description":"","type":"image"}]}}