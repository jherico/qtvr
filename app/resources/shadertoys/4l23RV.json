{"Shader":{"ver":"0.1","info":{"id":"4l23RV","date":"1430470516","viewed":688,"name":"Ethereal onion","username":"Aj_","description":"An onion I came up with while learning stuff","likes":2,"published":3,"flags":0,"tags":["happy","onion"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n    \n    vec2 res = iResolution.xy\/abs(2.\/sin(iGlobalTime\/4.));\n\tvec2 position = ( (fragCoord.xy - vec2(iResolution.x\/2., iResolution.y\/2.)) \/ max(res.y, res.x)  ) ;\n\tmat2 rot;\n\tfloat ang = -45. * 0.0174532925;\n\trot[0] = vec2(cos(ang), -sin(ang));\n\trot[1] = vec2(sin(ang), cos(ang));\t\n\tposition*=rot;\n\tfloat x = position.x;\n\tfloat y = position.y;\n\tfloat u,t;\n\t\n\tfor(int i=0;i<60;i++) {\n\t\tu = x*y*y  - y*y+x +.008 ;\n\t\tt = y*x*x  - x*x+y +.008 ;\n\t\t\n\t\t\n\t\tx = u;\n\t\ty = t;\n\t\tif(dot(vec2(u,t), vec2(u,t))>.08) {\n\t\t\tbreak;\n\t\t}\n\t\t\n\t}\n\t\n\tvec3 color =  vec3((x*y))*100.;\n\n\tfragColor = vec4(vec3(color.x\/8., color.y\/4., color.z\/4.), 1.);\n}","name":"","description":"","type":"image"}]}}