{"Shader":{"ver":"0.1","info":{"id":"MllXz7","date":"1435593116","viewed":754,"name":"crowded gyros","username":"FabriceNeyret2","description":"one more variant of https:\/\/www.shadertoy.com\/view\/ltfXRM <br\/>Be sure to wait long enough ;-)","likes":6,"published":3,"flags":0,"tags":["3d","raymarching","short"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ using the base ray-marcher of Trisomie21: https:\/\/www.shadertoy.com\/view\/4tfGRB#\n\n#define T iGlobalTime\n#define r(v,t) { float a = (t)*T, c=cos(a),s=sin(a); v*=mat2(c,s,-s,c); }\n#define SQRT3_2  1.26\n\nvoid mainImage( out vec4 f, vec2 w ) {\n    vec4 p = vec4(w,0,1)\/iResolution.yyxy-.5, d,c; p.x-=.4; \/\/ init ray \n    r(p.xz,.13); r(p.yz,.2); r(p.xy,.1);   \/\/ camera rotations\n    d = p;                                 \/\/ ray dir = ray0-vec3(0)\n    p.z += 5. *T;\n    f = vec4(0);\n    float closest = 999.0; vec4 u_c=f;\n   \n    for (float i=1.; i>0.; i-=.01)  \n    {\n        vec4 u = floor(p\/8.), t = mod(p, 8.)-4., ta; \/\/ objects id + local frame\n        \/\/ r(t.xy,u.x); r(t.xz,u.y); r(t.yz,1.);     \/\/ objects rotations\n        u = sin(78.*(u+u.yzxw));                     \/\/ randomize ids\n        \/\/ t -= u;                                   \/\/ jitter positions\n        c = p\/p*1.2;\n        \n    \n \n        float x1,x2,x=1e9;\n        for (float j=2.3; j>1.; j-= .3) {\n            r(t.xy,u.x); r(t.xz,u.y); r(t.yz,u.z);\n            ta = abs(t);\n            x1 = length(t.xyz) -j*SQRT3_2;       \/\/ inside carving sphere\n            x2 = max(ta.x,max(ta.y,ta.z)) -j;    \/\/ cube\n            x2 = max(-x1,x2);                    \/\/ cube-sphere\n            x1 = length(t.xyz) -j*SQRT3_2-.1;    \/\/ outside carving sphere\n            x2 = max(x1,x2);                     \/\/ shape inter sphere\n            x = min(x,x2);                       \/\/ union with the others\n        }\n\n        x1 = length(t.xyz) -.6;                  \/\/ central spheres\n        if (x1 < closest) { closest = x1; u_c = u; } \n        x = min(x1,x);\n        if (x==x1)  c  = u*3.; \n        \/\/   else   c += u*3.*pow(abs((x-x1)),.2)*(.5+.5*sin(.5*T));  \/\/ thanks squid !\n        \n        \/\/ f = i*i*c;      \/\/ color texture + black fog \n\n        if(x<.01) \/\/ hit !\n            { f = i*i*c; break;  }  \/\/ color texture + black fog \n        p -= d*x;           \/\/ march ray\n     }\n     if (cos(.25*T)>0.) f += u_c * exp(-closest)*(.5+.5*cos(.5*T)); \/\/ thanks kuvkar ! \n}\n","name":"","description":"","type":"image"}]}}