{"Shader":{"ver":"0.1","info":{"id":"MddGD7","date":"1450255930","viewed":199,"name":"red blood cells","username":"ap","description":"red blood cells shader","likes":5,"published":3,"flags":0,"tags":["red","blood"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\n\nfloat rand(float n)\n{\n    return fract(sin(n) * 43758.5453123);\n}\n\nvec2 rand2(in vec2 p)\n{\n    return fract(vec2(sin(p.x * 591.32 + p.y * 154.077), cos(p.x * 391.32 + p.y * 49.077)));\n}\n\n#define v4White vec4(1.0, 1.0, 1.0, 1.0)\n#define v4Black vec4(0.0, 0.0, 0.0, 1.0)\n#define v4Grey  vec4(0.5, 0.5, 0.5, 1.0)\n#define v4DarkRed vec4(0.2, 0.1, 0.1, 1.0)\n#define v4LightRed vec4(0.7, 0.1, 0.1, 1.0)\n\nvec4 getRBCColor(float x)\n{\n    float poly = 0.0347197 * x + \n        \t     0.247408  * x*x +\n                 5.69306   * x*x*x -\n                 19.1026   * x*x*x*x +\n                 28.6689   * x*x*x*x*x - \n                 15.5415   * x*x*x*x*x*x + 0.2;\n    return mix(v4DarkRed, v4LightRed, poly);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord \/ iResolution.y;\n\n    float freq = 7.0;\n    float gap = 1.\/freq;\n\n    \n\n    vec2 param_pos = (uv + vec2(iGlobalTime \/ 5.0, 0.0));\n\n    \/\/param_pos = uv;\n\n    vec2 closest_center = floor(param_pos * freq + vec2(0.5)) \/ freq;\n    \n    float ballrad = (0.25 + 0.1 * rand(closest_center.x + 37.0 + closest_center.y)) * gap;\n    float jitterrad = 0.5 * gap - ballrad;\n    float far = (0.35 * gap - ballrad) \/ 0.1;\n\n    float black_or_white = 0.5 + 0.5 * sin(\n        2.0 * 3.14159 * \n        (rand((closest_center.x + 347.0) * (closest_center.y +129.0)) + iGlobalTime * 1.0));\n\n    closest_center = closest_center + jitterrad * 1.0 *\n        sin((iGlobalTime * 0.1 + rand2(closest_center)) * 6.28 +\n        sin((iGlobalTime * 0.2 + rand2(closest_center.yx)) * 6.28) +\n        sin((iGlobalTime * 0.5 + rand2(closest_center.xy * 93.0 + 127.0)) * 6.28)\n           );\n\n    float dist = length(param_pos - closest_center);  \n\n    float s = (dist * dist) \/ (ballrad * ballrad);\n\n    fragColor = mix(\n        mix(getRBCColor(dist\/ballrad), v4DarkRed, far), \n        v4DarkRed, \n        smoothstep(ballrad*0.95, ballrad*1.05, dist));\n\n}","name":"","description":"","type":"image"}]}}