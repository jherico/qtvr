{"Shader":{"ver":"0.1","info":{"id":"lsc3Rf","date":"1452202239","viewed":358,"name":"DLA fractal","username":"iq","description":"DLA fractal. You might remember this from the 90s. One of my first fractals ever. Totally misusing the GPU for this, this should be thousands of times faster. But, you know, Shadertoy...","likes":8,"published":3,"flags":32,"tags":["2d","fractal","dla"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 cen = iChannelResolution[0].xy*0.5;\n    \n    vec2 p = texture2D( iChannel0, fragCoord.xy \/ iResolution.xy, -100.0 ).xy;\n\n    vec3 col = p.x * (0.6+0.4*cos( 0.0025*p.y + vec3(0.0,0.5,1.0 )));\n\n#if 1\n    vec4 m = texture2D( iChannel0, (vec2(0.0,0.0)+0.5)\/ iChannelResolution[0].xy, -100.0 );\n    col = mix( col, vec3(1.0,1.0,0.0), 1.0-smoothstep( 2.0, 4.0, length(fragCoord-m.xy) ) );\n\n    float r = texture2D( iChannel0, (vec2(1.0,0.0)+0.5)\/ iChannelResolution[0].xy, -100.0 ).x;\n    col = mix( col, vec3(0.5,0.3,0.0), 1.0-smoothstep( 0.0, 2.0, abs(length(fragCoord-cen) - r) ) );\n#endif\n    \n\tfragColor = vec4( col,1.0);\n}","name":"","description":"","type":"image"},{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - 2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n\nfloat hash1( float n )\n{\n    return fract(sin(n)*138.5453123);\n}\n\nfloat isInside( vec2 p, vec2 c ) { vec2 d = abs(p-c-0.5) - 0.5; return -max(d.x,d.y); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 cen = 0.5*iChannelResolution[0].xy;\n    \n    \/\/-----------------------------------------------    \n    \/\/ load\n    \/\/-----------------------------------------------    \n    vec4  m = texture2D( iChannel0, (vec2(0.0,0.0)+0.5)\/ iChannelResolution[0].xy, -100.0 );\n    float r = texture2D( iChannel0, (vec2(1.0,0.0)+0.5)\/ iChannelResolution[0].xy, -100.0 ).x;\n    vec2  f = texture2D( iChannel0, fragCoord \/ iChannelResolution[0].xy, -100.0 ).xy;\n\n    \/\/-----------------------------------------------    \n    \/\/ reset\n    \/\/-----------------------------------------------    \n    if( iFrame==0 )\n\t{\n        r = 0.005*iChannelResolution[0].x;\n        if( length(fragCoord-cen) < r ) f = vec2(1.0,0.0);\n        m = vec4( cen.x+r*1.2, cen.y, -1.0, 0.0 );\n    }\n    \n    for( int k=0; k<512; k++ )\n    {\n        \/\/ move particle\n        vec2 om = m.xy;\n        m.xy += m.zw*1.0;\n\n        bool touch = false;\n\n        \/\/ if touch, stick\n        float n = texture2D( iChannel0, (m.xy+0.5) \/ iChannelResolution[0].xy, -100.0 ).x;\n        if( n>0.5 )\n        {\n            touch = true;\n            r = max( r, length(om-cen) );\n            if( isInside(fragCoord,om.xy) > 0.0 )\n            {\n                f.x = 1.0;\n                f.y = 0.1 * float(150*iFrame + k)\/150.0;\n            }\n\n        }\n\n        \/\/ if outside or touch, respawn\n        float d = length( m.xy - cen );\n        if( touch || d > r*1.1 )\n        {\n            m.x = -1.0 + 2.0*hash1( iGlobalTime*1.0 + float(k));\n            m.y = -1.0 + 2.0*hash1( iGlobalTime*1.1 + 43.17 + float(k)*3.13);\n            m.xy = cen + normalize(m.xy)*r*1.1;\n\n            m.z = -1.0 + 2.0*hash1( iGlobalTime*1.2 + 13.13 + float(k)*23.71);\n            m.w = -1.0 + 2.0*hash1( iGlobalTime*1.3 + 37.73 + float(k)*17.9 );\n            m.zw = cen + normalize(m.zw)*r*0.9;\n            m.zw = normalize( m.zw - m.xy);\n        }\n    }\n\n    \/\/-----------------------------------------------    \n    \/\/ store\n    \/\/-----------------------------------------------    \n    \n    if( fragCoord.x<1.0 && fragCoord.y < 1.0 )\n        fragColor = m;\n    else if( fragCoord.x<2.0 && fragCoord.y < 1.0 )\n        fragColor = vec4(r,0.0,0.0,0.0);\n    else\n        fragColor = vec4(f,0.0,0.0);\n}","name":"","description":"","type":"buffer"}]}}