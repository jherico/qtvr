{"Shader":{"ver":"0.1","info":{"id":"MslGD8","date":"1369238207","viewed":2180,"name":"Voronoi - basic","username":"iq","description":"Basic Voronoi pattern.","likes":31,"published":3,"flags":0,"tags":["2d","voronoi","worley"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvec2 hash( vec2 p ) { p=vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))); return fract(sin(p)*18.5453); }\n\n\/\/ return distance, and cell id\nvec2 voronoi( in vec2 x )\n{\n    vec2 n = floor( x );\n    vec2 f = fract( x );\n\n\tvec3 m = vec3( 8.0 );\n    for( int j=-1; j<=1; j++ )\n    for( int i=-1; i<=1; i++ )\n    {\n        vec2  g = vec2( float(i), float(j) );\n        vec2  o = hash( n + g );\n      \/\/vec2  r = g - f + o;\n\t    vec2  r = g - f + (0.5+0.5*sin(iGlobalTime+6.2831*o));\n\t\tfloat d = dot( r, r );\n        if( d<m.x )\n            m = vec3( d, o );\n    }\n\n    return vec2( sqrt(m.x), m.y+m.z );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy\/max(iResolution.x,iResolution.y);\n    \n    \/\/ computer voronoi patterm\n    vec2 c = voronoi( (14.0+6.0*sin(0.2*iGlobalTime))*p );\n\n    \/\/ colorize\n    vec3 col = 0.5 + 0.5*cos( c.y*6.2831 + vec3(0.0,1.0,2.0) );\t\n    col *= clamp(1.0 - 0.4*c.x*c.x,0.0,1.0);\n    col -= (1.0-smoothstep( 0.08, 0.09, c.x));\n\t\n    fragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}