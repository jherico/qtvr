{"Shader":{"ver":"0.1","info":{"id":"XtsSWj","date":"1439762093","viewed":777,"name":"Hurrying To A Talk","username":"Alway_PanicButton","description":"A quick sketch of a familiar place.","likes":5,"published":3,"flags":0,"tags":["sdf"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float t;\n#define HALF_PI 1.570796327\n\nfloat cube( vec3 p, vec3 b )\n{\n    return length(max(abs(p)-b,0.));\n}\n\nfloat repeat( float p, float frequency )\n{\n    p = mod( p + frequency*.25, frequency );\n    p = abs( p - frequency * .5 );\n    return p;\n}\n\nfloat repeatfor( float p, float frequency, float n )\n{\n    if( abs(p) < frequency * n * .4999 )\n    {\n        p = mod( p + frequency*.25, frequency );\n    \tp = abs( p - frequency * .5 );\n    }\n    else\n    {\n        p = p - mod( frequency * n * .4999 + frequency*.25, frequency );\n        p = abs(p) - frequency * n * .5;\n    }\n    return p;\n}\n\nfloat mirror( float p, float offset )\n{\n    p = abs( p );\n    p -= offset;\n    return p;\n}\n\nvec2 mirrorDiag( vec2 p, vec2 offset )\n{\n    p -= offset;\n    if( p.x < p.y )\n        p.xy = p.yx;\n    p += offset;\n    return p;\n}\n\nvec2 mirrorDiag2( vec2 p, vec2 offset )\n{\n    p -= offset;\n    if( p.x > -p.y )\n        p.xy = -p.yx;\n    p += offset;\n    return p;\n}\n\nvec2 rot2( vec2 p, float theta )\n{\n    float co = cos( theta );\n    float si = sin( theta );\n    return vec2( co * p.x + si * p.y,\n                -si * p.x + co * p.y );\n}\n\nfloat sc( vec3 p )\n{\n    p.z -= 50.;\n    vec3 pb = p;\n    pb.z = repeatfor( pb.z, 16., 25. );\n    pb.x += 25.0;\n    vec3 pb8 = pb;\n    pb8.x -= 19.5;\n    pb8.y += 1.;\n    pb8.y = mirror( pb8.y, 5. );\n    float rail = cube( pb8, vec3( 0.1, 0.1, 8.0 ) );\n    vec3 pb7 = pb;\n    pb7.x -= 19.;\n    float pillar = cube( pb7, vec3( 0.2, 10.0, 0.2 ) );\n    vec3 pb6 = pb;\n    pb6.x -= 27.0;\n    float bar6 = cube( pb6, vec3( 8.0, 1.0, 8.0 ));\n    vec3 pb5 = pb;\n    pb5.x += 0.8;\n    if( pb5.y > 10. )\n    {\n        float theta = atan( .75*(pb5.y - 10.)\/ ( pb5.x - 20.));\n        pb5.xy = rot2( pb5.xy, theta );\n    }\n    pb5.y -= 10.0;\n    pb5.y = mirror(pb5.y, 0.0);\n    pb5.y -= 10.0;\n    pb5.y = mirror( pb5.y, 0.0 );\n    pb5.z = mirror( pb5.z, 4.0 );\n    pb5.z = mirror( pb5.z, 2.0 );\n    pb5.z = abs(pb5.z);\n    pb5.z = -pb5.z;\n    pb5.y -= 3.0;\n    pb5.y = repeatfor( pb5.y, 2.4, 4.0 );\n    pb5.zy = mirrorDiag( pb5.zy, vec2(0.,1.2) );\n    float bar5 = cube( pb5, vec3( 0.1, 2.0, 0.1 ));\n    vec3 pb4 = pb;\n    pb4.x += 1.5;\n    pb4.y += 2.0;\n    float bar4 = cube( pb4, vec3( 0.75, 1., 8.));\n    vec3 pb3 = pb;\n    pb3.y -= 10.0;\n    float bar3 = cube( pb3, vec3( 1., 1., 8. ) );\n    vec3 pb2 = pb;\n    pb2.y = repeatfor( pb2.y, 2.0, 10. );\n    float bar2 = cube( pb2, vec3( 0.5, 0.5, 0.1 ));\n    vec3 pb1 = pb;\n    pb1.x = mirror( pb1.x, 0.55 );\n    float bar1 = cube( pb1, vec3( 0.25, 10.0, 0.25 ));\n    float bars = min(min(min( bar1, bar2 ), min(bar3, bar4)), \n                     min(min(bar5, bar6), min(pillar, rail)));\n    return bars;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy - .5;\n    uv.y *= iResolution.y \/ iResolution.x;\n    \n  \tt = iGlobalTime;\n    \n    vec3 dir = normalize(vec3(uv, 1.0) );\n    vec3 p = vec3( -11., -4.75, -60. );\n    \n    p.xz = rot2( p.xz, 0. );\n    \tdir.xz = rot2( dir.xz, - .25 );\n    if( iMouse.z > 0.0 )\n    \tdir.xz = rot2( dir.xz, iMouse.x \/ iResolution.x - .25 );\n    \n    p.y += sin(5. * t) * .2;\n    p.z += mod(t * 10., 16.);\n    \n    float minDist = 0.;\n    for( float i = 0.; i < 50.; i++ )\n    {\n        minDist = sc( p );\n        p += dir * minDist;\n    }\n    \n    vec3 col = vec3( 1. );\n    if( minDist < .1 )\n    {\n        col = vec3(minDist * 10.0);\n    }\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}