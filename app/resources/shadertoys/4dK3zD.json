{"Shader":{"ver":"0.1","info":{"id":"4dK3zD","date":"1453542276","viewed":68,"name":"Musical Heart","username":"hunter","description":"Heart that beats to the music.","likes":2,"published":3,"flags":64,"tags":["sound","cloud","heart","soundcloud"],"hasliked":0},"renderpass":[{"inputs":[{"id":1308,"src":"https:\/\/soundcloud.com\/xlr8r\/premiere-saand-fiddler-tigerskin-till-von-sein-remix","ctype":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Based on: https:\/\/www.shadertoy.com\/view\/4scGDs\n\/\/\n\/\/ formula SRC: http:\/\/mathworld.wolfram.com\/HeartCurve.html\n\nfloat heartRadius(float theta)\n{\n    return 2. - 2.*sin(theta) + sqrt(abs(cos(theta)))*sin(theta)\/(1.4 + sin(theta));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord.xy \/ iResolution.xy;\n    float v  = texture2D( iChannel0, vec2(1\/510,0.25) ).x;\n    \n    float red  = texture2D( iChannel0, vec2(1\/510,0.25) ).x;\n    float grn  = texture2D( iChannel0, vec2(0.5,0.5) ).x;\n    float blu  = texture2D( iChannel0, vec2(0.75,0.5) ).x;\n    \n    vec4 heartColor = vec4(red,grn,blu,1.0);\n    vec4 bgColor = vec4(0.0,0.0,0.0,1.0);\n    vec2 originalPos = (2.0 * fragCoord - iResolution.xy)\/iResolution.yy;\n    vec2 pos = originalPos;\n    pos.y -= 0.5;        \t\n    \n    float theta = atan(pos.y, pos.x);\n    float r = heartRadius(theta);\n\n    fragColor = mix(bgColor, heartColor,\n                    smoothstep(0.0, length(pos) * 0.5, r * v * 0.25 ));\n    \n}","name":"","description":"","type":"image"}]}}