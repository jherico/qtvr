{"Shader":{"ver":"0.1","info":{"id":"lljXzy","date":"1444750319","viewed":531,"name":"sunburst","username":"Macint","description":"sunburst rays","likes":1,"published":3,"flags":0,"tags":["rays"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/More compact code, as suggested by FabriceNeyret2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 \tq = fragCoord.xy \/ (iResolution.xy) - .5; \/\/vector from center to current.\n    float \tl = length(q);\n    float \tr = cos(20.*atan(q.y, q.x) + 12.*iDate.w) > 0.\n                \t? 2.\n                \t: .1 + .05*cos(10.*iDate.w);\n    \n    fragColor = \tvec4(1.,.2,0,1.)\t\/\/Base color\n        \t\t\t* smoothstep(r,r+1e-3,l)\n        \t\t\t* smoothstep(.9,.3,l);\t\/\/Vignette\n}\n\n\n\n\/\/OLD Code\n\/*\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy \/ (iResolution.xy);    \n    vec2 p = xy; \/\/current point\n    vec2 q = p - vec2(0.5,0.5); \/\/vector from center to current point.\n    vec4 col = vec4(1.0,0.2,0.0,1.0);\n    \n    float k = 20.0;\n    float ang = cos( k*atan(q.y, q.x) + 12.0*iDate[3] );\n    \n    float r;\n    if (20.0*ang > 0.0) {\n        r = 2.0;\n    } else {\n    \tr = 0.1 + 0.05*cos(10.0*iDate[3]);\n    }\n    \n    col *= smoothstep(r,r+0.001,length(q));\n    \n    col *= smoothstep(0.9,0.3,length(q)); \/\/vignette\n    \n\tfragColor = col;\n}\n*\/","name":"","description":"","type":"image"}]}}