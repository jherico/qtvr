{"Shader":{"ver":"0.1","info":{"id":"MdtGRB","date":"1450621191","viewed":232,"name":"Alien Swirl","username":"xbe","description":"Playing around with iterative function from sofiane benchaa shader: Illustrated Equations (https:\/\/www.shadertoy.com\/view\/MtBGDW).","likes":11,"published":3,"flags":0,"tags":["procedural","2d","iterativefunction"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/ Alien Swirl - xbe\n\/\/\n\/\/ Inspired by shader from sofiane benchaa\n\/\/ https:\/\/www.shadertoy.com\/view\/MtBGDW\n\/\/\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define FIELD 10.0\n#define ITERATIONMAX 16.\n#define TONE1 vec3(0.299,0.787,0.114)\n#define TONE2 vec3(0.587,0.299,0.114)\n\n\nvec2 SwirlEQ(vec3 p, float t, float it){\n\tvec2 fx = p.xy;\n    t *= 0.3;\n\tp = (abs(p*2.0));\n\tvec2 ab = vec2(2.0-p.x);\n    float i = 0.;\n    for(float i=0.; i < ITERATIONMAX; i++) {\n\t\tif (i >= it) break;\n\t\tab  += (p.xy) + cos(length(p));\n\t\tp.y += sin(ab.x - p.z - 0.5*t) * 0.5;\n\t\tp.x += sin(ab.y + t) * 0.5;\n\t\tp   -= (p.x+p.y);\n\t\tp   += sin(fx.x) * cos(fx.y);\n\t\tab  += vec2(p.y);\n\t}\n\tp   \/= FIELD;\n\tfx.x = (p.x+p.x+p.y);\n\treturn fx;\n}\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\nvec3 computeColor(vec2 fx){\n\tvec3 color = vec3(TONE1);\n\tcolor -= (fx.x);\n    if (color.y < 0.) {\n        color *= -vec3(TONE2);\n    } else {\n\t\tcolor.b += color.g*1.5;\n    }\n\treturn clamp(color,(0.0),(1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat time  = iGlobalTime;\n\tfloat ratio = iResolution.y \/ iResolution.x;\n\tfragCoord.y *= ratio;\n\tvec2 position = ( fragCoord.xy \/ iResolution.xy ) - vec2(0.5,0.5 * ratio);\n\tvec3 p = position.yxy * FIELD;\n    vec2 a = SwirlEQ(p,time,8.);\n    vec2 b = 0.9 * SwirlEQ(p,time,10.);\n    vec2 c = 0.8 * SwirlEQ(p,time,12.);\n    float m = sin(0.333 * time);\n    vec2 d = mix(b, a, abs(m) - m);\n    d = mix(d, c, clamp(m, 0., 1.));\n\tvec3 color = computeColor(d);\n\tfragColor = vec4( color, 1.0 );\n\n}","name":"","description":"","type":"image"}]}}