{"Shader":{"ver":"0.1","info":{"id":"lsf3D7","date":"1371947013","viewed":553,"name":"AudioSurf II","username":"4rknova","description":"Yet another audio visualization.","likes":12,"published":3,"flags":0,"tags":["visualization","audio"],"hasliked":0},"renderpass":[{"inputs":[{"id":19,"src":"\/presets\/mzk02.mp3","ctype":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ by Nikos Papadopoulos, 4rknova \/ 2013\n\/\/ Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n#define\tPI         3.14159265359\n#define THICKNESS  .4\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat u = fragCoord.x \/ iResolution.x;\n\tfloat fft = texture2D(iChannel0, vec2(u,.25)).x;  \n\tfloat wav = texture2D(iChannel0, vec2(u,.75)).x;\n\t\n\tvec2 uv = fragCoord.xy \/ iResolution.xy * 2. - 1.;\n\tvec2 wv = uv + vec2(0., wav - .5);\n\n\tfloat f = pow(abs(fft * tan(iGlobalTime - uv.y \/ wv.y)), .1);\n\tfloat h = pow(abs(wv.x - pow(abs(uv.y), cos(fft * PI * .25))), f);\n\tfloat g = abs(THICKNESS * .02 \/ (sin(wv.y) * h));\n\n\tvec3 c = g * clamp(vec3(fft, fract(fft) \/ fract(wav), g * wav), 0., 1.);\n\t\n\tfragColor = vec4(c, 1);\n}","name":"","description":"","type":"image"}]}}