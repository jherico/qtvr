{"Shader":{"ver":"0.1","info":{"id":"MtSGWd","date":"1433534939","viewed":683,"name":"Electric Bubbles","username":"heyx3","description":"Messing around with Voroni noise.","likes":4,"published":3,"flags":0,"tags":["noise","bubbles","voroni"],"hasliked":0},"renderpass":[{"inputs":[{"id":30,"src":"\/presets\/tex16.png","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"#define VORONI_SCALE_1 16.0\n#define VORONI_SCALE_2 16.0\n\n#define TIME_SCALE_1 0.004412\n#define TIME_SCALE_2 0.01\n\n\nfloat smooth(float f)\n{\n\treturn f * f * (3.0 - (2.0 * f));\n}\n\nvec2 randPos(vec2 pos, float timeScale)\n{\n    return pos + texture2D(iChannel0,\n                           (pos * 0.15) +\n                           (timeScale * iGlobalTime)).xy;\n}\n\nfloat voroniNoise(vec2 pos, float scale, float timeScale)\n{\n    pos *= scale;\n    vec2 gridPos = floor(pos + vec2(0.0001));\n    \n    vec3 constVals = vec3(-1.0, 0.0, 1.0);\n    return min(distance(pos, randPos(gridPos, timeScale)),\n           min(distance(pos, randPos(gridPos + constVals.xx, timeScale)),\n           min(distance(pos, randPos(gridPos + constVals.xy, timeScale)),\n           min(distance(pos, randPos(gridPos + constVals.xz, timeScale)),\n           min(distance(pos, randPos(gridPos + constVals.yx, timeScale)),\n           min(distance(pos, randPos(gridPos + constVals.yz, timeScale)),\n           min(distance(pos, randPos(gridPos + constVals.zx, timeScale)),\n           min(distance(pos, randPos(gridPos + constVals.zy, timeScale)),\n               distance(pos, randPos(gridPos + constVals.zz, timeScale))))))))));\n}\n\n\n\/\/Given two Voroni noise values, outputs the final color.\nvec3 getFinalColor(float bubble, float electric)\n{\n    return vec3(bubble * 0.45, 0.0, (bubble * 0.25) + electric);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.x;\n    \n    \/\/Generate the \"bubbles\" Voroni noise layer.\n    float dist1 = voroniNoise(uv, VORONI_SCALE_1, TIME_SCALE_1);\n    float col1 = 0.5 + 0.5 * sin(dist1 * 20.0);\n    \n    \/\/Generate the \"electricity\" Voroni noise layer.\n    float dist2 = voroniNoise(uv, VORONI_SCALE_2, TIME_SCALE_2);\n    float col2 = smooth(smooth(pow(dist2, 2.0)));\n\n    fragColor = vec4(getFinalColor(col1, col2), 1.0);\n}","name":"","description":"","type":"image"}]}}