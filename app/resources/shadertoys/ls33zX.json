{"Shader":{"ver":"0.1","info":{"id":"ls33zX","date":"1451266634","viewed":185,"name":"Aqua Bubbles","username":"BreakfastBrew","description":"Bloop Bloop","likes":7,"published":3,"flags":0,"tags":["blobs","bubbles","aqua"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float noise(vec3 p) \/\/ Based off Las^Mercury and XT95 \"Flame\" shader I made this Aqua version.\n{\n\tvec3 i = floor(p);\n\tvec4 a = dot(i, vec3(1., 57., 21.)) + vec4(0., 57., 21., 78.);\n\tvec3 f = cos((p-i)*acos(-1.))*(-.5)+.5;\n\ta = mix(tan(a+2.),tan(1.+a), f.x);\n\ta.xy = mix(a.xz, a.yw, f.y);\n\treturn mix(a.x, a.y, f.z);\n}\n\nfloat sphere(vec3 p, vec4 spr)\n{\n\treturn length(spr.xyz-p) - spr.w;\n}\n\nfloat flame(vec3 p)\n{\n\tfloat d = sphere(p*vec3(1,1,1), vec4(.0,-2.,.0,1.));\n\treturn d + (noise(p+vec3(.2,iGlobalTime*1.,.0)));\n}\n\nfloat scene(vec3 p)\n{\n\treturn min(5.-length(p) , abs(flame(p)) );\n}\n\nvec4 raymarch(vec3 org, vec3 dir)\n{\n\tfloat d = 0.0, glow = 0.0, eps = 0.1;\n\tvec3  p = org;\n\tbool glowed = false;\n\t\n\tfor(int i=0; i<64; i++)\n\t{\n\t\td = scene(p) + eps;\n\t\tp += d * dir;\n\t\tif( d>eps )\n\t\t{\n\t\t\tif(flame(p) < .0)\n\t\t\t\tglowed=true;\n\t\t\tif(glowed)\n       \t\t\tglow = float(i)\/64.;\n\t\t}\n\t}\n\treturn vec4(p,glow);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 v = -1.0 + 2.0 * fragCoord.xy \/ iResolution.xy;\n\tv.x *= iResolution.x\/iResolution.y;\n\t\n\tvec3 org = vec3(0., -2., 4.);\n\tvec3 dir = normalize(vec3(v.x*1.6, -v.y, -1.5));\n\t\n\tvec4 p = raymarch(org, dir);\n\tfloat glow = p.w;\n\t\n\tvec4 col = mix(vec4(1,-1,-1,1), vec4(-1,1,1,-1), p.y*.01+.9);\n\t\n\tfragColor = mix(vec4(0.), col, pow(glow*4.,3.1));\n\n}","name":"","description":"","type":"image"}]}}