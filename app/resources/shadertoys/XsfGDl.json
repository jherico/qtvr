{"Shader":{"ver":"0.1","info":{"id":"XsfGDl","date":"1381471736","viewed":1334,"name":"TV CRT Pixels","username":"iq","description":"CRT monitor pixels (red, green and blue subpixels).","likes":12,"published":3,"flags":0,"tags":["2d"],"hasliked":0},"renderpass":[{"inputs":[{"id":12,"src":"\/presets\/vid01.webm","ctype":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":17,"src":"\/presets\/tex12.png","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define PIXELSIZE 3.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 cor;\n\t\n\tcor.x =  fragCoord.x\/PIXELSIZE;\n\tcor.y = (fragCoord.y+PIXELSIZE*1.5*mod(floor(cor.x),2.0))\/(PIXELSIZE*3.0);\n\t\n\tvec2 ico = floor( cor );\n\tvec2 fco = fract( cor );\n\t\n\tvec3 pix = step( 1.5, mod( vec3(0.0,1.0,2.0) + ico.x, 3.0 ) );\n\tvec3 ima = texture2D( iChannel1,PIXELSIZE*ico*vec2(1.0,3.0)\/iResolution.xy ).xyz;\n\t\n\tvec3 col = pix*dot( pix, ima );\n\n    col *= step( abs(fco.x-0.5), 0.4 );\n    col *= step( abs(fco.y-0.5), 0.4 );\n\t\n\tcol *= 1.2;\n\tfragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}