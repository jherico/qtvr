{"Shader":{"ver":"0.1","info":{"id":"XlfGzX","date":"1423589005","viewed":760,"name":"More Spirograph","username":"eiffie","description":"If this crashes anyone's browser let me know. Its just a simplified version of my last shader with a \"gradient\" check to slow down the stepping. ","likes":4,"published":3,"flags":0,"tags":["spirograph","rollingfractal","orbitfractal"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/More Spirograph by eiffie\n\/\/Trying (and failing) to make a better DE for parameterized curves.\n\n#define STEPS 200\n#define ITERS 4\n\nfloat scale;\nfloat Config(float t){\n\tfloat sgn=1.0;\n\tif(mod(t,50.0)>25.0)sgn=-1.0;\n\tt=floor(mod(t,25.0));\n\tif(t<10.0)return (2.0+t*0.25)*sgn;\n\tt-=10.0;\n\tif(t<10.0)return (2.0+t*0.33333)*sgn;\n\tt-=10.0;\n\tif(t<1.0)return 3.44955*sgn;\n\tif(t<2.0)return 2.7913*sgn;\n\tif(t<3.0)return 2.5616*sgn;\n\tif(t<4.0)return 2.4495*sgn;\n\treturn 2.30275*sgn;\n}\nvec2 F(float t){\n\tfloat a=t,r=1.0;\n\tvec2 q=vec2(0.0);\n\tfor(int j=0;j<ITERS;j++){\n\t\tq+=vec2(cos(a),sin(a))*r;\n\t\ta*=scale;r\/=abs(scale);\n\t}\n\treturn q;\n}\nvec2 DF(vec2 p, float t){\n    float d1=length(p-F(t)),dt=0.1*d1,d2=length(p-F(t+dt));\n\tdt\/=max(dt,d1-d2);\n\treturn vec2(min(d1,d2),0.4*log(d1*dt+1.0));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p=(2.0*fragCoord.xy-iResolution.xy)\/iResolution.y;\n\tp*=1.75;\n\tscale=mix(Config(iGlobalTime),Config(iGlobalTime+1.0),smoothstep(0.5,1.0,fract(iGlobalTime)));\n\tfloat t=0.0,d=100.0;\n\tfor(int i=0;i<STEPS;i++){\n\t\tvec2 v=DF(p,t);\n\t\td=min(d,v.x);\n\t\tt+=v.y;\n\t}\n\td=smoothstep(0.0,0.01,d);\n\tvec3 col=vec3(d*d*d,d*d,d);\n\tfragColor = vec4(col,1.0);\n}\n","name":"","description":"","type":"image"}]}}