{"Shader":{"ver":"0.1","info":{"id":"Xsl3zf","date":"1376016119","viewed":288,"name":"Night vision","username":"4rknova","description":"A simple night vision effect.","likes":3,"published":3,"flags":0,"tags":["filter","nightvision"],"hasliked":0},"renderpass":[{"inputs":[{"id":11,"src":"\/presets\/vid00.ogv","ctype":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"#ifdef GL_ES\nprecision highp float;\n#endif\n\nfloat hash(in float n) { return fract(sin(n)*43758.5453123); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy \/ iResolution.xy;\n\t\n\tvec2 u = p * 2. - 1.;\n\tvec2 n = u * vec2(iResolution.x \/ iResolution.y, 1.0);\n\tvec3 c = texture2D(iChannel0, p).xyz;\n    \n    if (mod(fragCoord.y * .5, 2.) > 1.)\n    {\n        fragColor = vec4(vec3(0),1);\n        return;\n    }\n\t\n\t\/\/ flicker, grain, vignette, fade in\n\tc += sin(hash(iGlobalTime)) * 0.01;\n\tc += hash((hash(n.x) + n.y) * iGlobalTime) * 0.5;\n\tc *= smoothstep(length(n * n * n * vec2(0.075, 0.4)), 1.0, 0.4);\n    c *= smoothstep(0.001, 3.5, iGlobalTime) * 1.5;\n\t\n\tc = dot(c, vec3(0.2126, 0.7152, 0.0722)) \n\t  * vec3(0.2, 1.5 - hash(iGlobalTime) * 0.1,0.4);\n\t\n\tfragColor = vec4(c,1.0);\n}","name":"","description":"","type":"image"}]}}