{"Shader":{"ver":"0.1","info":{"id":"ll2GDV","date":"1432748755","viewed":688,"name":"UnNamed 1","username":"aiekick","description":"UnNamed 1","likes":0,"published":3,"flags":0,"tags":["unnamed1"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define uTime iGlobalTime \n#define uScreenSize iResolution.xy \n\nvec2 s,g,m;\nfloat dstepf = 0.0; \/\/ perf analyse float\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\ts = uScreenSize;\n    g = fragCoord;\n    \n\tfloat timeCoef = 0.5;\n\n    float time = uTime * timeCoef;\n    float cam_a = time; \/\/ angle z\n    \n    vec3 camUp=vec3(0,1,0);\/\/Change camere up vector here\n  \tvec3 camView=vec3(0,0,0); \/\/Change camere view here\n  \tfloat prec = 0.00001; \/\/ ray marching precision\n    float RMPrec = 0.5; \/\/ ray marching tolerance precision\n    \n\tfloat cam_e = 0.; \/\/ elevation\n    \n\tfloat gmin = 0.2; \/\/ uPad1.x;\n\tfloat gmax = 1.05; \/\/ uPad1.y;\n\tfloat gt= (sin(time\/4.)*.5+.5)*(gmax-gmin)+gmin;\n\n\tfloat dmin = 2.7; \/\/ uPad.x;\n\tfloat dmax = 3.2; \/\/ uPad.y;\n\tfloat cam_d = sin(time*4.-2.)*(dmax-dmin)+dmin;\n\n\tvec2 uv = (2. * g -s )\/ min(s.y,s.x);\n    \n\tvec3 col = vec3(0.);\n    \n\tvec3 ro = vec3(-sin(cam_a), sin(cam_e), cos(cam_a))*cam_d;\n  \tvec3 rov = normalize(camView-ro);\n\tvec3 u = normalize(cross(camUp,rov));\n  \tvec3 v = cross(rov,u);\n  \tvec3 rd = normalize(rov + uv.x*u + uv.y*v);\n    \n   \tfloat d = 0.,r=0.;\n   \tvec3 p = ro+rd*d;\n   \tfloat s = prec;\n\n\tfloat f = 1.15;\/\/ uSlider;\n\n\tfor(int i=0;i<150;i++)\n   {      \n    \tif (s<prec) break;\n\n\t\tdstepf += 0.02;\/\/ uSlider1;\n\n\t\tvec3 c = abs(p) - 0.5;\n\t\tc = mod(p, c\/f*2.) - c\/f;\n\t\tr = mix(length(c), length(p) - 1., -gt);\n\n       d+=s=r*RMPrec;\n       p=ro+rd*d;\n   }\n\n\tcol = mix(col, vec3(0.8,0.9,1.0)\/*uColor*\/, 1.0-exp( -0.0005*d*d\/**uSlider3*\/ ) );\n\tcol = mix(col, vec3(0.8,0.2,0.4)\/*uColor1*\/, 0.5);\n\tcol *= dstepf;\n\t\n\tfragColor = vec4(col,1);\n}","name":"","description":"","type":"image"}]}}