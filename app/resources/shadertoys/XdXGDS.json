{"Shader":{"ver":"0.1","info":{"id":"XdXGDS","date":"1377741343","viewed":4646,"name":"Iterations - inversion","username":"iq","description":"Playing with 16 inversions of the plane (1\/z).","likes":21,"published":3,"flags":0,"tags":["2d","iterations","inversion"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy\/iResolution.xy;\n\n    \/\/ shape (16 points)\t\n\tfloat time = iGlobalTime + 47.0;\n\tvec2 z = -1.0 + 2.0*uv;\n\tvec3 col = vec3(1.0);\n\tfor( int j=0; j<16; j++ )\n\t{\n        \/\/ deform\t\t\n        float s = float(j)\/16.0;\n\t\tfloat f = 0.2*(0.5 + 1.0*fract(sin(s*113.1)*43758.5453123));\n\t\tvec2 c = 0.5*vec2( cos(f*time+17.0*s),sin(f*time+19.0*s) );\n\t\tz -= c;\n\t\tfloat zr = length( z );\n\t    float ar = atan( z.y, z.x ) + zr*0.6;\n\t    z  = vec2( cos(ar), sin(ar) )\/zr;\n\t\tz += c;\n        z += 0.05*sin(2.0*z.x);\n\n        \/\/ color\t\t\n        col -= 0.7*exp( -8.0*dot(z,z) )* (0.5+0.5*sin( 4.2*s + vec3(1.6,0.9,0.3) ));\n\t}\n    col *= 0.75 + 0.25*clamp(length(z-uv)*0.6,0.0,1.0);\n\n\t\/\/ 3d effect\n\tfloat h = dot(col,vec3(0.333));\n\tvec3 nor = normalize( vec3( dFdx(h), dFdy(h), 1.0\/iResolution.x ) );\n\tcol -= 0.05*vec3(1.0,0.9,0.5)*dot(nor,vec3(0.8,0.4,0.2));;\n\tcol += 0.25*(1.0-0.8*col)*nor.z*nor.z;\n\n    \/\/ 2d postpro\t\n\tcol *= 1.12;\n    col = pow( clamp(col,0.0,1.0), vec3(0.8) );\n\tcol *= 0.8 + 0.2*pow( 16.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y), 0.1 );\n\tfragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}