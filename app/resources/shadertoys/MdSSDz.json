{"Shader":{"ver":"0.1","info":{"id":"MdSSDz","date":"1410814867","viewed":182,"name":"Sponge Nightmare","username":"elias","description":".","likes":1,"published":3,"flags":0,"tags":["menger","sponge"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define PRECISION 0.0001\n#define DEPTH 10.0\n#define STEPS 128\n#define SCALE 2.0\n#define OFFSET 0.3\n#define ITERATIONS 20\n#define PI 3.14159265359\n\nfloat t = iGlobalTime*0.1;\nvec3 eye;\nvec3 light;\n\nvec2 uv;\nfloat map(vec3);\nvec3 march(vec3 ro,vec3 rd);\nbool hit = false;\n\nmat3 rot(vec3 a){vec3 s=sin(a);vec3 c=cos(a);return mat3(c.y*c.z,c.y*-s.z,-s.y,s.x*s.y*c.z+c.x*s.z,s.x*s.y*-s.z+c.x*c.z,s.x*c.y,c.x*s.y*c.z+-s.x*s.z,c.x*s.y*-s.z-s.x*c.z,c.x*c.y);}\nvec3 getNormal(vec3 p){vec2 e=vec2(PRECISION,0);return(normalize(vec3(map(p+e.xyy)-map(p-e.xyy),map(p+e.yxy)-map(p-e.yxy),map(p+e.yyx)-map(p-e.yyx))));}\nvec3 lookAt(vec3 o,vec3 t){vec3 d=normalize(t-o),u=vec3(1),r=cross(u,d);return(normalize(r*uv.x+cross(d,r)*uv.y+d));}\n\nfloat sdBox(vec3 p,vec3 b){vec3 d=abs(p)-b;return min(max(d.x,max(d.y,d.z)),0.0)+length(max(d,0.0));}\n\nfloat map(vec3 p)\n{  \n    p = p * rot(vec3(0,0,sin(10.0*(p.z+t))));\n    float s = 0.2; vec3 z;\n    float sponge = sdBox(mod(p,s)-s\/2.0,vec3(s));\n\n    for(float i = 0.0; i < 4.0; i++)\n    {  \n        z = mod(p-s*3.0,s*2.0)-s;\n        s \/= 3.0;\n\n        sponge = max(sponge,-sdBox(z,vec3(s+1.0,s,s)));\n        sponge = max(sponge,-sdBox(z,vec3(s,s+1.0,s)));\n        sponge = max(sponge,-sdBox(z,vec3(s,s,s+1.0)));\n    }\n\n    return sponge;\n}\n\nvec3 getColor(vec3 p)\n{\t\n\tvec3 n = getNormal(p);\n\tvec3 l = normalize(p-eye);\n    \n    float diff = max(dot(n,l),0.2);\n    float dist = 0.1\/length(p-eye);\n    \n    vec3 col = vec3(0);\n  \n    col += vec3(dist-diff);\n    \n    return col;\n}\n\nvec3 march(vec3 ro,vec3 rd)\n{\n    float t=0.0,d;\n    \n    for(int i=0;i<STEPS;i++)\n    {\n        d=map(ro+rd*t);\n        if(d<PRECISION){hit=true;}\n        if(hit==true||t>DEPTH){break;}\n        t+=d*0.5;\n    }\n    \n    return ro+rd*t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uv = (2.0*fragCoord.xy-iResolution.xy)\/iResolution.xx;\n    eye = vec3(0,0,t);\n    \n\tvec3 p = march(eye,lookAt(eye,vec3(0,0,t+0.5)));\n\tfragColor = vec4(getColor(p),1.0);\n}","name":"","description":"","type":"image"}]}}