{"Shader":{"ver":"0.1","info":{"id":"4dXGzn","date":"1357136829","viewed":1838,"name":"Sun","username":"iq","description":"A 2D procedural smiling sun","likes":4,"published":3,"flags":0,"tags":["procedural","2d"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat segm( float a, float b, float c, float x )\n{\n    return smoothstep(a-c,a,x) - smoothstep(b,b+c,x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = fragCoord.xy\/iResolution.xy;\n\tvec2 p = (2.0*fragCoord.xy-iResolution.xy)\/min(iResolution.y,iResolution.x);\n    \n    p *= 0.65; \/\/ zoom in\n\n    float a = atan(p.x,p.y);\n    float r = length(p);\n\n    float s = 0.2 + 0.5*sin(a*17.0+1.5*iGlobalTime);\n    float d = 0.5 + 0.2*pow(s,1.0);\n    float h = r\/d;\n    float f = 1.0-smoothstep(0.92,1.0,h);\n\n    float b = pow(0.5 + 0.5*sin(3.0*iGlobalTime),500.0);\n    vec2  e = vec2( abs(p.x)-0.15,(p.y-0.1)*(1.0+10.0*b) );\n    float g = 1.0 - (segm(0.06,0.09,0.01,length(e)))*step(0.0,e.y);\n\n    float t = 0.5 + 0.5*sin(12.0*iGlobalTime);\n    vec2  m = vec2( p.x, (p.y+0.15)*(1.0+10.0*t) );\n    g *= 1.0 - (segm(0.06,0.09,0.01,length(m)));\n\n\tvec3 bcol = vec3( 0.2+0.7*q.y,0.6+0.4*q.y,1.0 );\n\tbcol *= 0.85 + 0.15*q.x*q.y;\n\tbcol *= 0.5 + 0.5*pow( 16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y), 0.25 );\n\n    fragColor = vec4( mix(bcol,vec3(1.0,0.85,0.0)*g,f), 1.0 );\n}","name":"","description":"","type":"image"}]}}