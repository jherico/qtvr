{"Shader":{"ver":"0.1","info":{"id":"Ml2SDD","date":"1443916070","viewed":651,"name":"Black And White Experiment","username":"jackdavenport","description":"A test which uses two techniques to create a B\/W effect. The left uses a dot product, and the right calculates the mean of the RGB channels. The line in the center inverts the colors.","likes":1,"published":3,"flags":0,"tags":["test","math","greyscale"],"hasliked":0},"renderpass":[{"inputs":[{"id":11,"src":"\/presets\/vid00.ogv","ctype":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tvec3 tex = texture2D(iChannel0, uv).xyz;\n    \n    float bounds = .5;\n    if(iMouse.x > 0. && iMouse.y > 0.) bounds = iMouse.x \/ iResolution.x;\n    \n    fragColor = vec4(uv.x < bounds ? clamp(dot(tex, tex), 0., 1.) : (tex.x + tex.y + tex.z) \/ 3.);\n    \n    float lineWidth = .005;\n    if(uv.x > bounds - lineWidth && uv.x < bounds + lineWidth) {\n    \n        fragColor = vec4(1.) - fragColor;\n        \n    }\n    \n}","name":"","description":"","type":"image"}]}}