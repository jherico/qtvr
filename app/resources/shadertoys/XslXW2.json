{
	"Shader": 
	[
		{
			"ver": "0.1",
			"info": 
			{
				"id": "XslXW2",
				"date": "1413915294",
				"viewed": 2207,
				"name": "Mechanical",
				"username": "iq",
				"description": "Something annoyingly mechanical",
				"likes": 16,
				"published": 3,
				"tags": 
				[
					"procedural",
					"2d",
					"sound"
				],

				"hasliked": 0
			},

			"renderpass": 
			[
				{
					"inputs": 
					[
						
					],

					"outputs": 
					[
						
					],

					"code": "\/\/ Created by inigo quilez - iq\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat fstep( float x )\n{\n    float df = fwidth(x);\n    return smoothstep( -df, df,  x);\n}\n\nfloat hash( vec2 p )\n{\n    return fract(sin(dot(p,vec2(127.1,311.7)))*43758.5453123);\n}\n\nvoid main(void)\n{\n    vec2  p = (-iResolution.xy + 2.0*gl_FragCoord.xy)\/iResolution.y;\n    vec2  q = gl_FragCoord.xy\/iResolution.xy;\n    \n    float di = hash( gl_FragCoord.xy );\n    \n    const int numSamples = 8;\n    \n    float img = 0.0;\n    float acc = 0.0;\n    for( int i=0; i<numSamples; i++ )\n    {\n        float nt = (float(i)+di)\/float(numSamples);\n            \n        float time = iGlobalTime - nt*(1.0\/24.0);\n        \n        float si = mod( floor(time*0.25), 2.0 );\n\n        float ftime = pow(clamp(4.0*fract(time),0.0,1.0),4.0);\n        float itime = floor(time);\n        float atime = (itime + ftime)*1.0 + time;\n        \n        vec2 ce = vec2(0.0,0.0);\n        ce.x = -0.30 + 1.25*(ftime - fract(time));\n        ce.y =  0.15 - 0.15*smoothstep(0.0,0.3,abs(fract(time+0.65)-0.5))*(1.0-si);\n        \n        float d = length( p - ce );\n        float a = atan( p.y - ce.y, p.x - ce.x ) + atime;\n        float r = 0.7 + 0.1*smoothstep(-0.3,0.3,cos(10.0*a));\n        float h = r - d;\n        \n        float f = fstep( h );\n        f *= fstep( abs(d-0.4) - 0.1 + 0.05*smoothstep(-0.3,0.3,cos(5.0*a)) );\n        f *= fstep( abs(d-0.1) - 0.02 );\n\n        vec2 c = vec2(d,a);\n        float pe = 6.2831\/10.0;\n        c.y = mod( a+pe*0.5, pe ) - pe*0.5;\n        c = c.x*vec2( cos(c.y), sin(c.y) );\n        f *= fstep( abs(length(c-vec2(0.6,0.0))-0.05)-0.01 );\n\n        a -= si*0.5*clamp(4.0*fract(time*4.0),0.0,1.0);\n        c = vec2(d,a);\n        c.y = mod( a+pe*0.5, pe ) - pe*0.5;\n        c = c.x*vec2( cos(c.y), sin(c.y) );\n        f *= fstep( length(c-vec2(0.2,0.0))-0.02 );\n\n        f = max( f, 1.0*fstep( -0.8-p.y+ce.y + 0.1*smoothstep(-0.3,0.3,sin(1.5+14.0*(p.x-ce.x) +10.0*atime)) ) );\n        \n        float w =1.0 - 0.2*nt;\n        img += w * f;\n        acc += w;\n    }\n    img \/= acc;\n    \n    vec3 bg = vec3(1.0- 0.6*q.y) - 0.15*hash( gl_FragCoord.yy) + 0.05*di;\n    bg = smoothstep( vec3(0.2,0.1,0.0), vec3(0.9,0.9,1.0), bg );\n    \n    vec3 fg = vec3(0.0);\n    vec3 col = mix( bg, fg, img );\n    \n    col *= pow(16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y), 0.2);\n    col *= smoothstep( 0.0, 3.0, iGlobalTime );\n\n\tgl_FragColor = vec4( col, 1.0 );\n}",
					"name": "",
					"description": "",
					"type": "image"
				},

				{
					"inputs": 
					[
						
					],

					"outputs": 
					[
						
					],

					"code": "\/\/ Created by inigo quilez - iq\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvec2 mainSound( float time )\n{\n    time -= 0.16;\n\n    float si = mod( floor(time*0.25), 2.0 );\n\n    float y = 0.0;\n\n    \n    y += 0.3*sin( 6.2831*440.0*time +  8.0*sin(0.87*6.2831*440.0*time) ) * exp(  -8.0*fract(time) );\n    y += 0.3*sin( 6.2831*440.0*time + 16.0*sin(0.87*6.2831*440.0*time) ) * exp( -10.0*fract(time) );\n    y += 0.1*sin( 6.2831*440.0*time + 32.0*sin(0.87*6.2831*440.0*time) ) * exp( -12.0*fract(time) );\n    y += 0.4*si*smoothstep(-0.2,0.2,sin( 6.2831*880.0*time + 16.0*sin(1.25*6.2831*880.0*time) ) * exp( -20.0*fract(4.0*time) ));\n\n\n    \/\/y += 0.2*sin( 6.2831*110.0*time + sin(0.5*time)*10.0*sin(1.0*6.2831*110.0*time) );\n    y += 0.6*(-1.0+2.0*fract(55.0*time)) * exp( -4.0*(fract(time+0.5)) );\n    \/\/return vec2(y);\n    y += 0.2*sin( 6.2831*1.0*time )*sin( 6.2831*440.0*time ) * exp( -1.0*(1.0-fract(time)) );\n\n    y += 0.9*(1.0-si)*smoothstep( -0.05, 0.05, sin( 150.0*exp(-40.0*fract(time+0.5) ) ) );\n    y += 0.5*(-1.0 + 2.0*fract(sin(100.0*time)*43758.5453123)*exp(-20.0*fract(time)));\n    y += 1.2*(1.0-si)*sin( 100.0*exp(-15.0*fract(time) ) );\n    \n    y *= 0.5;\n    y *= smoothstep( 0.0, 2.0, time );\n    \n    return vec2(y, y);\n}",
					"name": "",
					"description": "",
					"type": "sound"
				}
			]
		}
	]
}