{"Shader":{"ver":"0.1","info":{"id":"MlS3Rh","date":"1426790242","viewed":378,"name":"Vortex Street","username":"dr2","description":"Visualizing part of an endless train of vortices (see source for previous work).","likes":14,"published":3,"flags":0,"tags":["flow"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ \"Vortex Street\" by dr2 - 2015\n\/\/ License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n\n\/\/ Motivated by implementation of van Wijk's IBFV by eiffie (lllGDl) and andregc (4llGWl) \n\nconst vec4 cHashA4 = vec4 (0., 1., 57., 58.);\nconst vec3 cHashA3 = vec3 (1., 57., 113.);\nconst float cHashM = 43758.54;\n\nvec4 Hashv4f (float p)\n{\n  return fract (sin (p + cHashA4) * cHashM);\n}\n\nfloat Noisefv2 (vec2 p)\n{\n  vec2 i = floor (p);\n  vec2 f = fract (p);\n  f = f * f * (3. - 2. * f);\n  vec4 t = Hashv4f (dot (i, cHashA3.xy));\n  return mix (mix (t.x, t.y, f.x), mix (t.z, t.w, f.x), f.y);\n}\n\nfloat Fbm2 (vec2 p)\n{\n  float s = 0.;\n  float a = 1.;\n  for (int i = 0; i < 6; i ++) {\n    s += a * Noisefv2 (p);\n    a *= 0.5;\n    p *= 2.;\n  }\n  return s;\n}\n\nfloat tCur;\n\nvec2 VortF (vec2 q, vec2 c)\n{\n  vec2 d = q - c;\n  return 0.25 * vec2 (d.y, - d.x) \/ (dot (d, d) + 0.05);\n}\n\nvec2 FlowField (vec2 q)\n{\n  vec2 vr, c;\n  float dir = 1.;\n  c = vec2 (mod (tCur, 10.) - 20., 0.6 * dir);\n  vr = vec2 (0.);\n  for (int k = 0; k < 30; k ++) {\n    vr += dir * VortF (4. * q, c);\n    c = vec2 (c.x + 1., - c.y);\n    dir = - dir;\n  }\n  return vr;\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 uv = gl_FragCoord.xy \/ iResolution.xy - 0.5;\n  uv.x *= iResolution.x \/ iResolution.y;\n  tCur = iGlobalTime;\n  vec2 p = uv;\n  for (int i = 0; i < 10; i ++) p -= FlowField (p) * 0.03;\n  vec3 col = Fbm2 (5. * p + vec2 (-0.1 * tCur, 0.)) *\n     vec3 (0.5, 0.5, 1.);\n  fragColor = vec4 (col, 1.);\n}\n","name":"","description":"","type":"image"}]}}