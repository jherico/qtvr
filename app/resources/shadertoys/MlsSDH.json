{"Shader":{"ver":"0.1","info":{"id":"MlsSDH","date":"1436568857","viewed":730,"name":"Visualizing YUV","username":"ap","description":"Just trying to understand color spaces. Using BT.709<br\/><br\/>Luma is X axis<br\/>U is Y axis<br\/>V is time","likes":0,"published":3,"flags":0,"tags":["yuv","visualize"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float square(float x)\n{\n    return x*x;\n}\n\nfloat LinearToSRGB(const float LinearValue)\n{\n\t\tif (LinearValue <= 0.0031308)\n\t\t\t\treturn LinearValue * 12.92;\n\t\telse \n\t\t\t\treturn pow(LinearValue, (1.0\/2.4)) * (1.055) - 0.055;\n}\n\nvec3 LinearToSRGB(const vec3 LinearColor)\n{\n\treturn vec3(\n\t\tLinearToSRGB(LinearColor.x), \n\t\tLinearToSRGB(LinearColor.y), \n\t\tLinearToSRGB(LinearColor.z));\n}\n\nvec3 YUVToRGB(vec3 YUVColor)\n{\n\tvec3 ret;\n\n\tret.x = dot(YUVColor, vec3(1.0,  0.0,      1.28033));\n\tret.y = dot(YUVColor, vec3(1.0, -0.21482, -0.38059));\n\tret.z = dot(YUVColor, vec3(1.0,  2.12798,  0.0));\n\n\treturn ret;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tfragColor.xyz = (YUVToRGB(vec3(uv, square(sin(iGlobalTime)))));\n}","name":"","description":"","type":"image"}]}}