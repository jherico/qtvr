{"Shader":{"ver":"0.1","info":{"id":"lsc3D4","date":"1449619170","viewed":243,"name":"Arcade: Pacman","username":"4rknova","description":"Pacman.<br\/>Work in progress, needs cleanup.","likes":3,"published":3,"flags":0,"tags":["pacman"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ by Nikos Papadopoulos, 4rknova \/ 2015\n\/\/ Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define PI 3.14159265359\n#define EPS 5e-5\n\n#define SZ_PANE   30.0 \/\/ Resolution\n#define SZ_DOTS    4.0 \/\/ Dot size\n#define SZ_PMAN   16.0 \/\/ Pacman size\n#define DS_DOTS   32.0 \/\/ Dot distances\n#define SP_SCROLL 70.0 \/\/ Dot scrolling speed\n\nvoid bgnd(inout vec4 fb, vec2 uv, float t)\n{\n    fb = vec4(vec3(0),1);\n}\n\nvoid dots(inout vec4 fb, vec2 uv, float t)\n{\n    vec2 st = uv;\n \tst.x += t * SP_SCROLL;\n    vec2 p = vec2(2.5 * SZ_DOTS,0);\n    st.x =  mod(st.x, DS_DOTS);        \n    float r = length(st - p);    \n\tif(uv.x > -SZ_DOTS && r < SZ_DOTS) fb = vec4(1);\n}\n\nvoid ghst(inout vec4 fb, vec2 uv, float t)\n{\n    vec2 p = vec2(-SZ_PMAN * 3., 0);\n    vec2  d = uv - p;\n    float r = length(d);\n    float sz_eye   = SZ_PMAN * .3;\n    vec2 dl = d - sz_eye * vec2(-.2, .7);\n    vec2 dr = d - sz_eye * vec2(2.1, .7);\n    vec2 pl = d - sz_eye * vec2(0.4, .7);\n    vec2 pr = d - sz_eye * vec2(2.7, .7);\n\n    float wv0 = cos(PI*d.x*.3);\n    float wv1 = cos(PI*d.x*.3+PI*.85);\n        \n         if (   length(pl*pl*pl) < sz_eye\n             || length(pr*pr*pr) < sz_eye )  fb = vec4(0,0,1,1);\n    else if (   length(dl) < sz_eye \n             || length(dr) < sz_eye)         fb = vec4(1);\n    else if (r < SZ_PMAN \n             && dot(d, vec2(0,1)) >= 0.)     fb = vec4(1,0,0,1);\n    else if (dot(d, vec2(0,-1)) > 0.\n            && abs(d.x) < SZ_PMAN\n\t\t\t&& abs(d.y) < SZ_PMAN *.9 - SZ_PMAN * .15 * (fract(t*3.) > .5 ? wv0 : wv1)) {\n        fb = vec4(1,0,0,1);\n    }\n}\n\n\nvoid pman(inout vec4 fb, vec2 uv, float t)\n{\n    float r = length(uv);\n    \n    if (r < SZ_PMAN)\n    {\n        t = t * PI * .25 * (SP_SCROLL*SZ_DOTS\/(DS_DOTS));\n        if (dot(vec2(1,0), normalize(uv + vec2(SZ_PMAN * .4,0))) * sin(mod(t, PI)) < .75) {\n        \tfb = vec4(1,1,0,1);\n        }\n    }\n}\n\nvoid draw(inout vec4 fb, vec2 uv)\n{\n    float t = iGlobalTime;\n    uv = floor(uv * 2.);\n    \n    bgnd(fb, uv, t);\n    dots(fb, uv, t);\n    pman(fb, uv, t);\n    ghst(fb, uv, t);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float a = iResolution.x \/ iResolution.y;\n\tvec2 uv = (fragCoord.xy \/ iResolution.xy * 2. - 1.)\n            * vec2(a, 1) * SZ_PANE;\n    \n    draw(fragColor, uv);\n}","name":"","description":"","type":"image"}]}}