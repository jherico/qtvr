{"Shader":{"ver":"0.1","info":{"id":"ldt3W8","date":"1449445631","viewed":252,"name":"My First Julia Set","username":"kylefeng28","description":"My first attempt at using GLSL\/Shadertoy.","likes":4,"published":3,"flags":0,"tags":["fractal","juliaset"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Inspired by http:\/\/nuclear.mutantstargoat.com\/articles\/sdr_fract\/\n\n\/\/ Define new coordinate system ranges\nvec2 xRange = vec2(-1.5, 1.5);\nvec2 yRange = vec2(-1.5, 1.5);\n\n\/\/ Define Julia set constants\nconst int nIter = 100; \/\/ Number of iterations\nvec2 c = vec2(-0.4, 0.6); \/\/ c = a + bi\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    \/\/ Transform to new coordinate system\n    vec2 z = fragCoord.xy \/ iResolution.xy;\n    z.x = z.x * (xRange[1] - xRange[0]) + xRange[0];\n    z.y = z.y * (yRange[1] - yRange[0]) + yRange[0];\n    \n    \/\/ Define r, g, b components\n    float r, g, b, a = 1.0;\n    \n    \/\/ Transform c somehow\n    c.x = -0.4 + 0.1 * cos(iGlobalTime \/ 2.0);\n    c.y = 0.6 + 0.1 * sin(iGlobalTime + 0.5);\n   \n    \/\/ Iterate\n    int i;\n    for (int i_ = 0; i_ < nIter; i_++) {\n        float x = (z.x * z.x - z.y * z.y) + c.x;\n        float y = (z.y * z.x + z.x * z.y) + c.y;\n\n        if ((z.x * z.x + z.y * z.y) > 4.0) break;\n        z.x = x;\n        z.y = y;\n        \n        i = i_;\n    }\n \n    r = g = b = float(i) \/ float(nIter);\n    \n    \/\/ Set color\n\tfragColor = vec4(r, g, b, a);\n}","name":"","description":"","type":"image"}]}}