{"Shader":{"ver":"0.1","info":{"id":"XdsSR7","date":"1398535206","viewed":686,"name":"Wheel of illusion","username":"FabriceNeyret2","description":".","likes":0,"published":3,"flags":0,"tags":["illusion"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define N 6.\n#define DA .05\n#define DR .3\n\n#define PI 3.14159265359\nfloat t = iGlobalTime;\nvec4 FragColor;\n\nbool wheel(vec2 uv, float dir) {\n\tfloat r0 = length(uv),  a = dir*atan(uv.y,uv.x); \/\/ to polar\n\tif (r0>1.) return false;\n\t\n\tr0 = 1.-log(r0);\n\t\/\/r0 -= .5*a\/(2.*PI);\n\tfloat r = N*r0\/2.; \t\ta = floor(r\/r0+.5)*a + floor(r+.5)*PI\/2.; \n\tr = mod(r+.5,1.)-.5; \t\n\tfloat a1 =  mod(   a*6.\/(2.*PI)+.5, 1.)-.5;\n\tfloat a2 =  mod(.5+a*6.\/(2.*PI)+.5, 1.)-.5;\n\n\tfloat k = 1.\/(1.+DR);\n\n\n\tfloat d1 = smoothstep(1.,.92,2.*(1.+DA)*length(vec2(k*r, a1)));\n\tfloat d2 = smoothstep(1.,.92,2.*(1.+DA)*length(vec2(k*r, a2)));\n\td2 *= smoothstep( .5, .5*.92,abs(r));\n\n\tvec3 col2 = (a1>0.) ? vec3(1.,0.,0.) : vec3(0.,1.,0.);\n\n\tvec3 col;\n\tcol = mix(vec3(d1), col2, d1*d2);\n\tcol = mix(vec3(1.), col,  0.*d1+d2);\n\t\n\tFragColor = vec4(col,1.);\n\treturn true;\n}\n\nfloat rnd(float i) { return fract(sin(i*1323.23)*1e5); } \n\nvoid rabbit(vec2 uv) {\n\tfloat r;\n#if 1\n\tt = floor(3.*t);\n\tvec2 pos = vec2(1.7,1.)*(2.*vec2(rnd(t),rnd(t-543.34))-1.);\n#else\n\tvec2 pos = .7*vec2(2.*cos(t),sin(t));\n#endif\n\t\n\tuv = uv-pos;\n\tr = smoothstep(1.,.97,10.*length(uv));\n\tr += smoothstep(1.,.97,10.*4. *length(uv+vec2(.1,.0)));\t\n\tr += smoothstep(1.,.97,10.*1.5*length(uv-vec2(.05,.1)));\t\n\tuv.x *= 6.; \n\tr += smoothstep(1.,.97,10.*length(uv-vec2(.2,.2)));\n\tr += smoothstep(1.,.97,10.*length(uv-vec2(.4,.18)));\n\tr += smoothstep(1.,.97,10.*length(uv-vec2(.2,-.03)));\n\tr += smoothstep(1.,.97,10.*length(uv-vec2(.4,-.03)));\n\tFragColor -= vec4(2.*r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.*(fragCoord.xy \/ iResolution.y-vec2(.85,.5));\n\t\n\tFragColor = vec4(1.);\n\t\n\tfloat s = 1.;\n\tfor (float i = -1.5; i<2.; i++ ) { \n\t\twheel(3.*(uv-vec2( i+.5, 0.)), s);\n\t\twheel(3.*(uv-vec2( i+.5, 1.)),-s);\n\t\twheel(3.*(uv-vec2( i+.5,-1.)),-s);\n \t\twheel(2.*(uv-vec2( i,    .5)), s);\n\t\twheel(2.*(uv-vec2( i,   -.5)),-s);\n\t\ts = -s;\n\t}\n\n\trabbit(uv);\t\n    fragColor=FragColor;\n}","name":"","description":"","type":"image"}]}}