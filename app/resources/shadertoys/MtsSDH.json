{"Shader":{"ver":"0.1","info":{"id":"MtsSDH","date":"1436556526","viewed":740,"name":"Cell Merge (v1)","username":"W_Master","description":"haha I can watch this all day!<br\/>Also thanks to aiekick, for showing some metaball technique! here I just used a power of 5 to make them less interactive at larger distances.","likes":3,"published":3,"flags":0,"tags":["2d","circle","metaball","smoothstep"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"vec3 color_bg = vec3(0.0);\nvec3 color_inner = vec3(1.0,0.9,0.16);\n\nvec3 color_outer = vec3(0.12,0.59,0.21);\n\/\/vec3 color_outer = mix(color_bg, color_inner, 0.3); \/\/ also nice effect\n\nfloat timeScale = 1.0;\nfloat mapScale = 1.0;\n\n#define cellCount 20.0\n\n\/\/ size in pixels inner\/outer with mapscale 1.0\nvec2 cellSize = vec2(30.0, 44.0); \n\n\n\nvec3 powerToColor(vec2 power)\n{\n    float tMax = pow(1.03,mapScale*2.2);\n    float tMin = 1.0 \/ tMax;\n    \n    vec3 color = mix(color_bg, color_outer, smoothstep(tMin,tMax,power.y));\n    color = mix(color, color_inner, smoothstep(tMin,tMax,power.x));\n    return color;\n}\n\n\nvec2 getCellPower( vec2 coord, vec2 pos, vec2 size )\n{\n    vec2 power;\n    \n    power = (size*size) \/ dot(coord-pos,coord-pos);\n    power *= power * sqrt(power); \/\/ ^5\n    \n    return power;\n}\n\n\nvoid mainImage( out vec4 color, in vec2 coord )\n{\n\tfloat T = iGlobalTime * 0.1 * timeScale \/ mapScale;\n    \n    vec2 hRes = iResolution.xy*0.5;\n    \n    vec2 pos;\n    vec2 power = vec2(0.0,0.0);\n    \n    \n    for(float x = 1.0; x != cellCount + 1.0; ++x)\n    {\n        pos = hRes * vec2(sin(T*fract(0.246*x)+x*3.6)*cos(T*fract(0.374*x)-x*fract(0.6827*x))+1.,\n                          cos(T*fract(0.4523*x)+x*5.5)*sin(T*fract(.128*x)+x*fract(0.3856*x))+1.);\n        \n    \tpower += getCellPower(coord.xy, pos, cellSize*(.75+fract(0.2834*x)*.25) \/ mapScale);\n    }\n    \n    color.rgb = powerToColor(power);\n}","name":"","description":"","type":"image"}]}}