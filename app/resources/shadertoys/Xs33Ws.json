{"Shader":{"ver":"0.1","info":{"id":"Xs33Ws","date":"1452651469","viewed":171,"name":"drl006","username":"DrLuke","description":"Really terrible implementation of bezier curves in shaders","likes":0,"published":3,"flags":0,"tags":["bezier","bad","terrible","shitty"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\nfloat dist = 0.0;\n\nvec3 color = vec3(1,1,0);\nvec2 startpoint = vec2(0.1, 0.1);\nvec2 endpoint = vec2(0.7, 0.7);\n\nvec2 bezier(vec2 p0, vec2 p1, vec2 p2, vec2 p3, float t)\n{\n\t\n \treturn vec2(pow(1.0-t,3.0)*p0 + 3.0* pow(1.0-t,2.0)*t*p1 + (1.0-t)*3.0*pow(t,2.0)*p2 + pow(t,3.0)*p3);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    \n    startpoint = vec2(0.1, 0.1) + iMouse.xy\/iResolution.xy;;\n    \n    vec2 uva = (uv - startpoint)\/(endpoint-startpoint);\n    \n    dist = abs(uv.y - bezier(startpoint, startpoint+vec2(0.2,0), endpoint-vec2(0.1,0), endpoint, uva.x).y);\n    \n    dist = mix(1.0, dist, step(startpoint.x, uv.x) * (1.0-step(endpoint.x, uv.x)));\n    \n    vec3 outcol = mix(color, vec3(0,0,0), smoothstep(0.004, 0.01, dist));\n    \n\tfragColor = vec4(outcol,1);\n    \n}\n\n\n\n\/*float F (vec2 p0, vec2 p1, vec2 p2, vec2 p3, in vec2 coords )\n{\n    float T = coords.x;\n    return\n        (p0 * (1.0-T) * (1.0-T) * (1.0-T)) + \n        (p1 * 3.0 * (1.0-T) * (1.0-T) * T) +\n        (p2 * 3.0 * (1.0-T) * T * T) +\n        (p3 * T * T * T) -\n        coords.y;\n}*\/","name":"","description":"","type":"image"}]}}