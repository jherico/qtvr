{"Shader":{"ver":"0.1","info":{"id":"XsjGDt","date":"1395255179","viewed":2546,"name":"A Simple Circle","username":"jonobr1","description":"A function to draw a simple circle based on coordinates and radius.","likes":17,"published":3,"flags":0,"tags":["2d","geometry"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/**\n * @author jonobr1 \/ http:\/\/jonobr1.com\/\n *\/\n\n\/**\n * Convert r, g, b to normalized vec3\n *\/\nvec3 rgb(float r, float g, float b) {\n\treturn vec3(r \/ 255.0, g \/ 255.0, b \/ 255.0);\n}\n\n\/**\n * Draw a circle at vec2 `pos` with radius `rad` and\n * color `color`.\n *\/\nvec4 circle(vec2 uv, vec2 pos, float rad, vec3 color) {\n\tfloat d = length(pos - uv) - rad;\n\tfloat t = clamp(d, 0.0, 1.0);\n\treturn vec4(color, 1.0 - t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 uv = fragCoord.xy;\n\tvec2 center = iResolution.xy * 0.5;\n\tfloat radius = 0.25 * iResolution.y;\n\n    \/\/ Background layer\n\tvec4 layer1 = vec4(rgb(210.0, 222.0, 228.0), 1.0);\n\t\n\t\/\/ Circle\n\tvec3 red = rgb(225.0, 95.0, 60.0);\n\tvec4 layer2 = circle(uv, center, radius, red);\n\t\n\t\/\/ Blend the two\n\tfragColor = mix(layer1, layer2, layer2.a);\n\n}","name":"","description":"","type":"image"}]}}