{"Shader":{"ver":"0.1","info":{"id":"Mlf3Df","date":"1425679939","viewed":932,"name":"Eiffie Balls","username":"eiffie","description":"This shader speaks to the human condition... you know... the itchy one.","likes":12,"published":3,"flags":0,"tags":["volumelight"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/Eiffie Balls (you don't want to know)\n\n#define TAO 6.283\n\nfloat tym=0.0;\nvec2 rotate(vec2 v, float angle) {return cos(angle)*v+sin(angle)*vec2(v.y,-v.x);}\nfloat DERect(in vec2 z, vec2 r){return max(abs(z.x)-r.x,abs(z.y)-r.y);}\nvec2 EBall(vec3 p, float c){\n\tp.zy=rotate(p.zy,c+tym*4.3);\n\tp.xz=rotate(p.xz,c+tym*2.0);\n\tc=mod(c,6.0);\n\tfloat dB=length(p);\n\tfloat s=0.8*dB;\n\tp*=1.0\/s;\n\tfloat d=DERect(p.xy,vec2(0.25,0.9));\/\/I\n\tif(c!=1.0 && c!=4.0){\n\t\td=min(d,min(DERect(p.xy+vec2(0.25,-0.7),vec2(0.5,0.2)),DERect(p.xy+vec2(0.25,0.0),vec2(0.5,0.2))));\/\/F\n\t\tif(c==0.0 || c==5.0)d=min(d,DERect(p.xy+vec2(0.25,0.7),vec2(0.5,0.2)));\/\/E\n\t}\n\tfloat L=clamp((1.0-dB),0.0,1.0);\n\treturn vec2(max(dB-0.1,-d*s),L*smoothstep(0.05,-0.05,d));\n}\n\nvec2 sort(vec2 a, vec2 b){return vec2((a.x<b.x)?a.x:b.x,a.y+b.y);}\/\/(a.y>b.y)?a.y:b.y);}\nvec2 DE(in vec3 p){\n\tconst float pdvt=64.0\/TAO,tdvp=TAO\/64.0;\n\tfloat a=atan(p.z,p.x)*pdvt;\n\tfloat c=floor(a)-1.0;\n\ta=(c+0.5)*tdvp;\n\tvec3 P=vec3(cos(a)*8.0,0.0,sin(a)*8.0)+sin(c*2.0+tym)*0.2;\n\tvec2 d=EBall(p-P,c);\n\tc+=1.0;\n\ta=(c+0.5)*tdvp;\n\tP=vec3(cos(a)*8.0,0.0,sin(a)*8.0)+sin(c*2.0+tym)*0.2;\n\td=sort(d,EBall(p-P,c));\n\tc+=1.0;\n\ta=(c+0.5)*tdvp;\n\tP=vec3(cos(a)*8.0,0.0,sin(a)*8.0)+sin(c*2.0+tym)*0.2;\n\td=sort(d,EBall(p-P,c));\n\treturn d;\n}\nvec4 Norm(in vec3 p){\n\tconst float pdvt=64.0\/TAO,tdvp=TAO\/64.0;\n\tfloat a=atan(p.z,p.x)*pdvt;\n\tfloat c=floor(a);\n\ta=(c+0.5)*tdvp;\n\tvec3 P=vec3(cos(a)*8.0,0.0,sin(a)*8.0)+sin(c*2.0+tym)*0.2;\n\treturn vec4(normalize(p-P),c);\n}\n\/*float sinNoise2d(in vec2 p,float tyme){\n\tfloat s=0.5,r=0.0;\n\tfor(int i=0;i<3;i++){\n\t\tp+=p+sin(1.7*p.yx+tyme);\n\t\ts*=0.5;\n\t\tr+=sin(p.x+sin(2.0*p.y))*s;\n\t}\n\treturn r;\n}*\/\nconst mat2 m2 = mat2(.8,.6,-.6,.8);\n\/\/from guil https:\/\/www.shadertoy.com\/view\/MtfGDX\n\nfloat sinNoise2d(in vec2 p, float tyme){\n\n    float res=0.;\n    float f=1.;\n\tfor( int i=0; i< 3; i++ ) \n\t{\t\t\n        p=m2*p*f+.6;     \n        f*=1.2;\n        res+=sin(p.x+sin(2.*p.y+tyme)-tyme);\n\t}        \t\n\treturn res\/3.;\n}\nfloat rand(vec2 c){return fract(sin(c.x+2.4*sin(c.y))*34.1234);}\nvec4 scene(vec3 ro, vec3 rd) {\n\tfloat tG=(-0.5-ro.y)\/rd.y;\n\tfloat tMax=(tG<0.0)?20.0:min(20.0,tG);\n\tfloat t=0.5*rand(gl_FragCoord.xy);\/\/vaporize them if too close\n\tvec2 d;\n\tvec3 sum=vec3(0.0),p=ro+rd*t,col=vec3(0.0);\n\tfor(int i=0;i<99;i++){\n\t\td=DE(p);\n\t\tif(d.x<1.0){\n\t\t\tsum+=(sin(p)*0.5+0.5)*d.y*d.y*0.1;\n\t\t\td.x=min(d.x,0.1);\n\t\t}else d.x=d.x-0.75;\n\t\tt+=d.x;\n\t\tp+=rd*d.x;\n\t\tif(t>tMax || d.x<0.001)break;\n\t}\n\t\n\tif(tMax<=tG && d.x>=0.01){\/\/t>min(tMax-1.0,10.0)){\n\t\tvec3 p=ro+rd*tG;\n\t\td=DE(p);\n\t\tif(d.x<1.0){\n\t\t\tsum+=(sin(p)*0.5+0.5)*d.y;\n\t\t}\n\t\tfloat n=2.0*abs(sinNoise2d(p.xz,tym*4.0));\n\t\tcol=0.25*exp(-tG*0.1)+(vec3(1.0)+vec3(sin(n),cos(n),sin(n*0.3)))*0.05*n;\n\t}else if(d.x<0.01){\n\t\tsum+=(sin(p)*0.5+0.5)*d.y*0.5;\n\t\tvec4 N=Norm(p);\n\t\tcol=(vec3(1.0)+vec3(sin(N.w),cos(N.w),sin(N.w*0.3)))*max(0.0,0.2*dot(N.xyz,normalize(vec3(-0.4,0.8,0.2))));\n\t}else{\n\t\tvec2 pt=vec2(abs(atan(rd.z,rd.x))\/3.1416,rd.y*2.0);\n\t\tpt.y=sqrt(abs(pt.y));\n\t\tcol=vec3((0.2+0.1*sinNoise2d(pt*5.0,0.0))*pt.y);\n\t}\n\n\tcol=clamp(col+sum,0.0,1.0);\n\treturn vec4(col,t);\n}\nmat3 lookat(vec3 fw){\n\tfw=normalize(fw);vec3 rt=normalize(cross(fw,vec3(0.0,1.0,0.0)));return mat3(rt,cross(rt,fw),fw);\n}\nvec3 path(float tyme){return vec3(cos(tyme),abs(sin(tyme*0.7))*0.1,sin(tyme))*(7.5+sin(tyme));}\nvoid SetCamera(inout vec3 ro, inout vec3 rd, float tyme, vec2 uv){\n\tro=path(tyme);\n\tvec3 ta=path(tyme+0.2);ta.y=0.0;\n\trd=lookat(ta-ro)*normalize(vec3(uv,1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.0*fragCoord.xy -iResolution.xy)\/ iResolution.y;\n    vec3 ro,rd;\n    SetCamera(ro,rd,iGlobalTime*0.5,uv);\n    vec4 col=scene(ro,rd);\n\tfragColor = vec4(col.rgb,1.0);\n}","name":"","description":"","type":"image"},{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/more dopplerness\nfloat rnd(float t){return 2.0*(fract(sin(t+sin(t))*33113.31541)-.5);}\nfloat saw(float t){return 2.0*(fract(t+0.5)-0.5);}\n#define SPEEDOFSOUND 50.0\n#define DAMPING 2.0\nfloat snd(float time, float c){\n\tfloat a1=saw((300.0+100.0*sin(c))*time);\n\treturn a1;\n}\nfloat phys(float time, vec4 d){\n\tvec3 tim=vec3(time)-d.xyz\/SPEEDOFSOUND;\n\tfloat a=snd(tim.x, d.w-2.0)*exp(-d.x*DAMPING);\n\ta+=snd(tim.y, d.w-1.0)*exp(-d.y*DAMPING);\n\ta+=snd(tim.z, d.w)*exp(-d.z*DAMPING);\n\treturn a;\n}\nfloat tym=0.0;\n\nfloat EBall(vec3 p){return length(p)-0.1;}\n#define TAO 6.283\nvec4 DE(in vec3 p){\n\tconst float pdvt=64.0\/TAO,tdvp=TAO\/64.0;\n\tfloat a=atan(p.z,p.x)*pdvt;\n\tfloat c=floor(a)-1.0;\n\ta=(c+0.5)*tdvp;\n\tvec3 P1=vec3(cos(a)*8.0,0.0,sin(a)*8.0)+sin(c*2.0+tym)*0.2;\n\tc+=1.0;\n\ta=(c+0.5)*tdvp;\n\tvec3 P2=vec3(cos(a)*8.0,0.0,sin(a)*8.0)+sin(c*2.0+tym)*0.2;\n\tc+=1.0;\n\ta=(c+0.5)*tdvp;\n\tvec3 P3=vec3(cos(a)*8.0,0.0,sin(a)*8.0)+sin(c*2.0+tym)*0.2;\n\treturn vec4(EBall(p-P1),EBall(p-P2),EBall(p-P3),c);\n}\n\nvec3 path(float tyme){return vec3(cos(tyme),abs(sin(tyme*0.7))*0.1,sin(tyme))*(7.5+sin(tyme));}\n\nvec3 herert(vec3 fw,vec3 up){\n\tfw=normalize(fw);return normalize(cross(fw,normalize(up)));\n}\n\nvec2 mainSound(float time)\n{\n\tfloat tyme=time*0.5;\n\ttym=time;\n\tvec3 ro=path(tyme);\n\tvec3 ta=path(tyme+0.2);ta.y=0.0;\n\tvec3 rd=normalize(ta-ro);\n\tvec3 rt=0.2*herert(rd,vec3(0.0,1.0,0.0));\n\tvec4 d1=DE(ro),d2=DE(ro+rt);\n\tfloat a1=phys(time,d1),a2=phys(time,d2);\n\treturn vec2(a1,a2);\n\n}\n\n","name":"","description":"","type":"sound"}]}}