{"Shader":{"ver":"0.1","info":{"id":"lljGRd","date":"1431568787","viewed":717,"name":"Illusory Blocks","username":"NBickford","description":"Based on http:\/\/www.ritsumei.ac.jp\/~akitaoka\/ !<br\/>","likes":2,"published":3,"flags":0,"tags":["2d","opticalillusion","antialiased"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define ss 4\n#define pi 3.1415926535897\n#define rotation 1.\n\nfloat round(float v, float d){\n    return ceil(v\/d-0.5)*d;\n}\n\nvec2 round(vec2 uv, float d){\n    return ceil(uv\/d-0.5)*d;\n}\n\n\nfloat checkerboard(vec2 uv){\n    vec2 p=mod(uv-vec2(0.25,0.25),1.0);\n    return mod(step(p.x,0.5)+step(p.y,0.5),2.0);\n}\n\nvec2 rot(vec2 uv, float r){\n    float cr=cos(r),sr=sin(r);\n    return vec2(cr*uv.x-sr*uv.y,sr*uv.x+cr*uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float tv=0.0;\n    float t=iGlobalTime*0.5;\n    \n    for(int xp=0;xp<ss;xp++){\n        for(int yp=0;yp<ss;yp++){\n\tvec2 uv = 2.0*(fragCoord.xy-iResolution.xy*0.5+vec2(xp,yp)\/float(ss))\/iResolution.x;\n            uv*=1.0;\/\/+0.01*cos(pi*t)*pow(length(uv),2.0); Yes, it's just an optical illusion - no barrel distortion.\n            float rad=pow(2.0,t*0.1-2.9);\n    uv*=4.0*rad;\/\/clamp(pow(2.0,iGlobalTime*0.1),1.0,2.0);\n    \/\/smoothstep(4.0,10.0,t)\n    \/\/uv=rot(uv,0.01*rotation*sin(pi*t));\n    \n    \n   \/\/ uv.x=uv.x-round(uv.y-0.25,0.5)*t;\n\tfloat v=checkerboard(uv);\n            \n            \/\/get activeness of inversion\n            vec2 squarepos=round(uv,0.5);\n            float isactive=smoothstep(2.3*(rad+0.1),2.3*(rad-0.1),length(squarepos));\n            \n            \/\/Possible inversion\n            uv=mod(abs(uv),0.5)\/0.5;\n            float d=0.07;\n            float w=0.25;\n            \n            float v1=v;\n            if(uv.x>0.5+d && uv.x<0.5+d+w && uv.y>0.25-d && uv.y<0.25-d+w) v1=1.-v1;\n            if(uv.x>0.25-d && uv.x<0.25-d+w && uv.y>0.5+d && uv.y<0.5+d+w) v1=1.-v1;\n            \n            float v2=v;\n            if(uv.x>0.5+d && uv.x<0.5+d+w && uv.y>0.5+d && uv.y<0.5+d+w) v2=1.-v2;\n            if(uv.x>0.25-d && uv.x<0.25-d+w && uv.y>0.25-d && uv.y<0.25-d+w) v2=1.-v2;\n            \n            float blend=0.5+0.5*cos(pi*t+squarepos.y*0.2);\n            \n            v=mix(v,mix(v2,v1,blend),isactive);\n            \/\/v=isactive;\n            \/\/v=v2;\n            \n    \n    \/*if(abs(round(uv.y,0.5)-uv.y)<0.01) v=0.5;*\/\n            tv+=v;\n        }\n    }\n    \n    tv=tv\/float(ss*ss);\n    fragColor=vec4(tv,tv,tv,1.0);\n}","name":"","description":"","type":"image"}]}}