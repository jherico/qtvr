{"Shader":{"ver":"0.1","info":{"id":"ldSGDt","date":"1395001345","viewed":690,"name":"clock 3","username":"FabriceNeyret2","description":".","likes":2,"published":3,"flags":0,"tags":["clock"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"const float R = .045;\n\nfloat SQR(float x) { return x*x; }\n\nfloat drawBit(vec2 p, float v,float bit) {\n\tfloat r = length(p)\/R;\n\tif (r > 1.) return -1.;\n\n\tfloat bg = .1*smoothstep(.003,.0,SQR(r-.95));\n\tfloat fg = 1.-r*r*r*r;\n\treturn floor(mod(v,2.*bit)\/bit)*smoothstep(1.,.9,r)*fg + bg;\n}\n\nfloat drawQuartet(vec2 p, float v) {\n\tif (abs(p.y)\/R>1.) return 0.;\n\tfloat r;\n\t\t\n\tr = drawBit(p-vec2(.2,0.),v,8. ); if (r>=0.) return r; \n\tr = drawBit(p-vec2(.3,0.),v,4. ); if (r>=0.) return r; \n\tr = drawBit(p-vec2(.4,0.),v,2. ); if (r>=0.) return r; \n\tr = drawBit(p-vec2(.5,0.),v,1. ); if (r>=0.) return r; \n\treturn 0.;\n}\n\tfloat drawOctet(vec2 p, float v) {\n\tif (abs(p.y)\/R>1.) return 0.;\n\tfloat r;\n\t\t\n\tr = drawBit(p-vec2(.0,0.),v,32.); if (r>=0.) return r;\n\tr = drawBit(p-vec2(.1,0.),v,16.); if (r>=0.) return r;\n\treturn drawQuartet(p,v);\n}\n\n\t\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 pos = fragCoord.xy \/ iResolution.y - vec2(.3,0);\n\tvec3 col = vec3(0.);\n\tfloat year = iDate.x, time = iDate.a;\n\tfloat v; vec2 p;\n\tv = mod(year\/1000.,10.); \n\tcol.r  += drawQuartet(p=(pos-vec2(.4,.1))*2.,v);\n\tv = mod(year\/100.,10.); \n\tcol.r  += drawQuartet(p=(pos-vec2(.4,.15))*2.,v);\n\tv = mod(year\/10.,10.); \n\tcol.r  += drawQuartet(p=(pos-vec2(.4,.2))*2.,v);\n\tv = mod(year,10.); \n\tcol.r  += drawQuartet(p=(pos-vec2(.4,.25))*2.,v);\n\tv = iDate.y; \n\tcol.g  += drawQuartet(pos-vec2(.2,.35),v);\n\tv = iDate.z; \n\tcol.b  += 2.5*drawOctet(pos-vec2(.2,.45),v);\n\tv = floor(time\/3600.\/12.); \n\tv = drawBit((pos-vec2(.2,.55))*2.,v,1.); if (v>=0.) col.rg += vec2(v); \/\/ am:pm\n    v = floor(mod(time\/3600.,12.)); \n\tcol.rg += vec2(drawQuartet(pos-vec2(.2,.55),v));\n\tv = mod(time,3600.)\/60.;\t\n\tcol.gb += vec2(drawOctet(pos-vec2(.2,.65),v));\n    v = mod(time,60.); \n\tcol.rb += vec2(drawOctet(pos-vec2(.2,.75),v));\n\tv = mod(iGlobalTime,1.)*10.;\t \n\tcol.rgb += vec3(drawQuartet(pos-vec2(.2,.85),v));\n\t\/\/v = mod(iGlobalTime*10.,1.);\t \n\t\t\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}