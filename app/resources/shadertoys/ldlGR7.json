{"Shader":{"ver":"0.1","info":{"id":"ldlGR7","date":"1377150565","viewed":1410,"name":"IK Solver","username":"iq","description":"An analytical solver for 2-bone joins. This is a 2D version, the 3d version can be found in the . Move the mouse around to see the behavior. The background goes grey when there's no solution","likes":25,"published":3,"flags":0,"tags":["2d","ik","solver","analytical"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ An analytical IK solver for 2 segments. A 3D version of this is used in the Insect shader\n\/\/ https:\/\/www.shadertoy.com\/view\/Mss3zM\n\/\/\n\/\/ Move the mouse to see the behavior of the solver.\n\/\/\n\/\/ Given two points (white and yellow) at which the bones start and end, the red point (join)\n\/\/ is computed automatically by the solver.\n\n\nvec2 solve( vec2 p, float l1, float l2 )\n{\n\tvec2 q = p*( 0.5 + 0.5*(l1*l1-l2*l2)\/dot(p,p) );\n\n\tfloat s = l1*l1\/dot(q,q) - 1.0;\n\n\tif( s<0.0 ) return vec2(-100.0);\n\t\n    return q + q.yx*vec2(-1.0,1.0)*sqrt( s );\n}\n\nfloat sdSegment( vec2 a, vec2 b, vec2 p )\n{\n\tvec2 pa = p - a;\n\tvec2 ba = b - a;\n\tfloat h = clamp( dot(pa,ba)\/dot(ba,ba), 0.0, 1.0 );\n\t\n\treturn length( pa - ba*h );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = -1.0 + 2.0*fragCoord.xy \/ iResolution.xy;\n\tvec2 mo = -1.0 + 2.0*iMouse.xy\/iResolution.xy;\n\tuv.x *= iResolution.x\/iResolution.y;\n\tmo.x *= iResolution.x\/iResolution.y;\n\t\n\tif( iMouse.w<=0.0001 ) { mo = vec2(1.0+0.2*sin(iGlobalTime),0.2+0.3*sin(iGlobalTime*3.3)); }\n\t\n\tfloat l1 = 0.9;\n\tfloat l2 = 0.4;\n\tvec2 a = vec2(0.0,0.0);\n\tvec2 c = mo;\n\tvec2 b = solve( c, l1, l2 );\n\n\tvec3 col = vec3(0.0);\n\tif( b.x<-99.0 )\n\t{\n\tcol = vec3(0.1);\n\t}\n\n\tcol = mix( col, vec3(0.2,0.2,0.2), 1.0-smoothstep( 0.0, 0.01, abs(length( a - uv )-l1) ) );\n\tcol = mix( col, vec3(0.2,0.2,0.2), 1.0-smoothstep( 0.0, 0.01, abs(length( c - uv )-l2) ) );\n\n\tif( b.x>-99.0 )\n\t{\n\tfloat f = min( sdSegment( a, b, uv ), sdSegment( b, c, uv ) );\n\tcol = mix( col, vec3(1.0,1.0,1.0), 1.0-smoothstep( 0.00, 0.01, f ) );\n\tcol = mix( col, vec3(1.0,0.0,0.0), 1.0-smoothstep( 0.02, 0.03, length( b - uv ) ) );\n\t}\n\n\tcol = mix( col, vec3(1.0,1.0,1.0), 1.0-smoothstep( 0.02, 0.03, length( a - uv ) ) );\n\tcol = mix( col, vec3(1.0,1.0,0.0), 1.0-smoothstep( 0.02, 0.03, length( c - uv ) ) );\n\t\n\t\n\tfragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}