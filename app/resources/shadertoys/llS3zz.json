{"Shader":{"ver":"0.1","info":{"id":"llS3zz","date":"1426624173","viewed":1283,"name":"STYLE?5","username":"Branch","description":"STYLE?5","likes":1,"published":3,"flags":0,"tags":["style5"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float roundBox(vec2 coord, vec2 pos, vec2 b ){\n  return 1.-floor(length(max(abs(coord-pos)-b,0.0)));\n}\nmat2 rotate(float Angle)\n{\n    mat2 rotation = mat2(\n        vec2( cos(Angle),  sin(Angle)),\n        vec2(-sin(Angle),  cos(Angle))\n    );\n\treturn rotation;\n}\nfloat box(vec2 coord, vec2 pos, vec2 size){\n\tif((coord.x<(pos.x+size.x)) &&\n\t   (coord.x>(pos.x-size.x)) &&\n\t   (coord.y<(pos.y+size.y)) && \n\t   (coord.y>(pos.y-size.y)) ) \n\t\treturn 1.0;\n\treturn 0.0;\n}\nfloat sun(vec2 coord, vec2 pos, float size){\n\tif(length(coord-pos)<size)\n\t\treturn 1.0;\n\treturn 0.0;\n}\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nfloat sign(vec2 p1, vec2 p2, vec2 p3){\n  return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n}\nfloat PIT(vec2 pt, vec2 v1, vec2 v2, vec2 v3){\n\tint b1, b2, b3;\n\n\tif(sign(pt, v1, v2) < 0.0) b1=1;\n\tif(sign(pt, v2, v3) < 0.0) b2=1;\n\tif(sign(pt, v3, v1) < 0.0) b3=1;\n\tif((b1 == b2) && (b2 == b3))\n\t\treturn 1.;\n\treturn 0.;\n}\nfloat arrow(vec2 coord, vec2 pos){\n\treturn box(coord, pos, vec2(.4,.1))+box(coord, pos+vec2(.3,-.3), vec2(.1,.4));\n}\nfloat guy(vec2 coord, vec2 pos){\n\tvec2 leftrotate=coord*rotate(0.7+sin(iGlobalTime*20.)*0.05);\n\tvec2 rightrotate=coord*rotate(-0.7+cos(iGlobalTime*20.)*0.05);\n\tfloat upndown=max(cos(iGlobalTime*7.+3.14)*0.1,0.);\n\tfloat random=sin(iGlobalTime*9.0)*0.01; \/\/not really\n\treturn \tbox(coord, vec2(.2,-.34+upndown)+pos, vec2(.1,.2))+\n\t\t\tbox(coord, vec2(-.2,-.34+upndown)+pos, vec2(.1,.2))+\n\t\t\tbox(coord, vec2(0.,.2+upndown)+pos, vec2(.4,.3))+\n\t\t\tbox(leftrotate*vec2(1.), vec2(.55,.3+upndown*.5)+pos, vec2(.1,.2))+\n\t\t\tbox(rightrotate*vec2(1.), vec2(-.55,.3+upndown*.5)+pos, vec2(.1,.2))+\n\t\t\tbox(coord, vec2(0.,.75+upndown)+pos, vec2(.3,.2))-\n\t\t\tbox(coord, vec2(0.,.75+upndown)+pos, vec2(.2+random,.1+random))+\n\t\t\tbox(coord, vec2(.1,.78+upndown)+pos, vec2(.05+random,.05+random))+\n\t\t\tbox(coord, vec2(-.1,.78+upndown)+pos, vec2(.05-random,.05-random))+\n\t\t\tbox(coord, vec2(0.,.79+upndown*2.), vec2(.1,.12))+\n\t\t\tbox(coord, vec2(0.,.56+upndown*2.), vec2(.1,.045));\t\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tfloat t=mod(iGlobalTime,5.5);\n\tvec4 tulos;\n\tvec4 lopullinentulos=vec4(1.0);\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tfloat aspectCorrection = (iResolution.x\/iResolution.y);\n\tvec2 coordinate_entered = 2.0 * uv - 1.0;\n\tvec2 c = vec2(aspectCorrection,1.0) *coordinate_entered;\n\tvec2 coord = c;\n\tcoord*=sin(iGlobalTime*2.435)*.2+1.2;\n\ttulos=vec4(1.0);\n\ttulos-=guy(coord,vec2(0.,-.5))*4.;\n\tif(mod(fragCoord.y,2.0)<1.0)   \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\ttulos=tulos\/1.3;\n\tfloat vignette = min(max(1.4 \/ (1.25 + 0.28*dot(c, c)),0.),1.);\n\tfragColor =tulos*vignette-0.01+rand(c*t)*0.02;\n}","name":"","description":"","type":"image"}]}}