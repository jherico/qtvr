{"Shader":{"ver":"0.1","info":{"id":"XsBXWR","date":"1410625289","viewed":815,"name":"tile illusion","username":"FabriceNeyret2","description":"inspired from https:\/\/pic.twitter.com\/MXrb1L8rrv","likes":5,"published":3,"flags":0,"tags":["illusion","short"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float t = iGlobalTime;\nfloat f(float x) { return x + .2*sin(1.6*x); }\n\nfloat solve(float x0,float x1,float y) {\n    float y0=f(x0), y1=f(x1);\n    if (y1<y0) { float x2=x1;x1=x0;x0=x2; float y2=y1;y1=y0;y0=y2; }\n    float xn, yn;\n    for (int i=0; i<20; i++) {\n\t    xn = x0 + (x1-x0)\/(y1-y0)*(y-y0),\n    \tyn=f(xn);\n        if (yn>y) {x1=xn; y1=yn;} else {x0=xn; y0=yn; }\n     }\n    return xn;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.y;\n    uv *= 15.;\n     float y0 = solve(uv.y-3.,uv.y,  floor(f(uv.y))),\n           y1 = solve(uv.y,uv.y+3., floor(f(uv.y))+1.);\n    uv.y = f(uv.y);\n    uv.x \/= (y1-y0);\n    float s = mod(floor(uv.y),2.);\n    float v = .55;\n    if (fract(uv.y)>.07) {\n    \tuv.x += t*sign(s-.5);\n    \tfloat c = mod(floor(uv.x)+floor(uv.y),2.);\n    \tv = c;\n    }\n\tfragColor = vec4(v);\n}","name":"","description":"","type":"image"}]}}