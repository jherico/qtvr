{"Shader":{"ver":"0.1","info":{"id":"4ljXR1","date":"1441638366","viewed":1042,"name":"Ray Marching Experiment n\u00b033","username":"aiekick","description":"Space Body - my goal was to introduce some sub-surface scattering with hot color but the result is not as expected<br\/>mouse axis X for control the rock expansion<br\/>","likes":14,"published":3,"flags":0,"tags":["sss","ray","experiment","marching","33"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/*\nSpace Body \nmy goal was to introduce some sub-surface scattering with hot color but the result is not as expected\nnormaly less thnkness is more cold than big thickness. here this is the inverse ^^ its not wanted\nmouse axis X for control the rock expansion\n*\/\n\n#define BLOB\n\n#define shape(p) length(p)-2.8\n\nfloat dstepf = 0.0;\n    \nconst vec2 RMPrec = vec2(.3, 0.01); \nconst vec3 DPrec = vec3(1e-5, 12., 1e-6); \n\n\/\/ by shane : https:\/\/www.shadertoy.com\/view\/4lSXzh\nfloat Voronesque( in vec3 p )\n{\n    vec3 i  = floor(p + dot(p, vec3(0.333333)) );  p -= i - dot(i, vec3(0.166666)) ;\n    vec3 i1 = step(0., p-p.yzx), i2 = max(i1, 1.0-i1.zxy); i1 = min(i1, 1.0-i1.zxy);    \n    vec3 p1 = p - i1 + 0.166666, p2 = p - i2 + 0.333333, p3 = p - 0.5;\n    vec3 rnd = vec3(7, 157, 113); \/\/ I use this combination to pay homage to Shadertoy.com. :)\n    vec4 v = max(0.5 - vec4(dot(p, p), dot(p1, p1), dot(p2, p2), dot(p3, p3)), 0.);\n    vec4 d = vec4( dot(i, rnd), dot(i + i1, rnd), dot(i + i2, rnd), dot(i + 1., rnd) ); \n    d = fract(sin(d)*262144.)*v*2.; \n    v.x = max(d.x, d.y), v.y = max(d.z, d.w), v.z = max(min(d.x, d.y), min(d.z, d.w)), v.w = min(v.x, v.y); \n#ifdef BLOB\n    return  max(v.x, v.y) - max(v.z, v.w); \/\/ Maximum minus second order, for that beveled Voronoi look. Range [0, 1].\n#else\n    return max(v.x, v.y); \/\/ Maximum, or regular value for the regular Voronoi aesthetic.  Range [0, 1].\n#endif\n}\n\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\nvec2 map(vec3 p)\n{\n    dstepf += 0.003;\n\n    vec2 res = vec2(0.);\n\t\n\tfloat voro = Voronesque(p);\n\t\n \tfloat sp = shape(p);\n    float spo = sp - voro;\n    float spi = sp + voro * .5;\n    \n\tfloat e = .35;\n\tif (iMouse.z>0.) e = 1.-iMouse.x\/iResolution.x;\n    \n   \tfloat dist = max(-spi, spo + e);\n               \n\tres = vec2(dist, 1.);\n\t\n\tfloat kernel = sp + 1.;\n\tif (kernel < res.x ) \n\t\tres = vec2(kernel, 2.);\n\t\n\treturn res;\n}\n\nvec3 nor( vec3 pos, float prec )\n{\n    vec2 e = vec2( prec, 0. );\n    vec3 n = vec3(\n    map(pos+e.xyy).x - map(pos-e.xyy).x,\n    map(pos+e.yxy).x - map(pos-e.yxy).x,\n    map(pos+e.yyx).x - map(pos-e.yyx).x );\n    return normalize(n);\n}\n\nvec3 cam(vec2 uv, vec3 ro, vec3 cu, vec3 cv)\n{\n\tvec3 rov = normalize(cv-ro);\n    vec3 u =  normalize(cross(cu, rov));\n    vec3 v =  normalize(cross(rov, u));\n    vec3 rd = normalize(rov + u*uv.x + v*uv.y);\n    return rd;\n}\n\n\/\/ return color from temperature \n\/\/http:\/\/www.physics.sfasu.edu\/astro\/color\/blackbody.html\n\/\/http:\/\/www.vendian.org\/mncharity\/dir3\/blackbody\/\n\/\/http:\/\/www.vendian.org\/mncharity\/dir3\/blackbody\/UnstableURLs\/bbr_color.html\nvec3 blackbody(float Temp)\n{\n\tvec3 col = vec3(255.);\n    col.x = 561e5 * pow(Temp,(-3. \/ 2.)) + 148.;\n   \tcol.y = 100.04 * log(Temp) - 623.6;\n   \tif (Temp > 6500.) col.y = 352e5 * pow(Temp,(-3. \/ 2.)) + 184.;\n   \tcol.z = 194.18 * log(Temp) - 1448.6;\n   \tcol = clamp(col, 0., 255.)\/255.;\n    if (Temp < 1000.) col *= Temp\/1000.;\n   \treturn col;\n}\n\n\/\/ by CBS : https:\/\/www.shadertoy.com\/view\/MslGWN\nvec3 nrand3( vec2 co )\n{\n\tvec3 a = fract( cos( co.x*8.3e-3 + co.y )*vec3(1.3e5, 4.7e5, 2.9e5) );\n\tvec3 b = fract( sin( co.x*0.3e-3 + co.y )*vec3(8.1e5, 1.0e5, 0.1e5) );\n\tvec3 c = mix(a, b, 0.5);\n\treturn c;\n}\n\nvoid mainImage( out vec4 f, in vec2 g )\n{\n    vec2 si = iResolution.xy;\n\tfloat t = iDate.w;\n    \n    float ca = t*.2; \/\/ angle z\n    float ce = 2.; \/\/ elevation\n    float cd = 4.; \/\/ distance to origin axis\n   \t\n    vec3 cu=vec3(0,1,0);\/\/Change camere up vector here\n    vec3 cv=vec3(0,0,0); \/\/Change camere view here\n    vec2 uv = (g+g-si)\/min(si.x, si.y);\n    vec3 ro = vec3(sin(ca)*cd, ce+1., cos(ca)*cd); \/\/\n    vec3 rd = cam(uv, ro, cu, cv);\n\n    vec3 d = vec3(0.);\n    vec3 p = ro+rd*d.x;\n\tvec2 s = vec2(DPrec.y, 0.);\n    for(int i=0;i<200;i++)\n    {      \n\t\tif(s.x<DPrec.x||s.x>DPrec.y) break;\n        s = map(p);\n\t\ts.x *= (s.x>DPrec.x?RMPrec.x:RMPrec.y);\n\t\td.x += s.x;\n        p = ro+rd*d.x;\n   \t}\n\n\tif (d.x<DPrec.y)\n    {\n\t\tvec3 n = nor(p, 0.1);\n\t\tif ( s.y < 1.5) \/\/ rock\n        {\n            \/\/ SSS\n\t\t\td.y = d.x;\n        \ts.x = DPrec.x;\n            rd = reflect(rd, -n);\n\t\t\tp = ro+rd*d.x;\t\t\n            for(int i=0;i<20;i++)\n\t\t\t{      \n\t\t\t\tif(s.x<DPrec.x) break;\n\t\t\t\ts.x = map(p).x * 0.3;\n\t\t\t\td.x += s.x;\n\t\t\t\tf.rgb += blackbody(400.\/(d.x - d.y + 2.));\n\t\t\t\tp = ro+rd*d.x;\n\t\t\t}\t\n\t\t}\n\t\telse if( s.y < 2.5) \/\/ kernel\n\t\t{\n\t\t\tfloat b = dot(n,normalize(ro-p))*0.9;\n            f = (b*vec4(blackbody(2000.),0.9)+pow(b,0.2))*(1.0-d.x*.01);\n\t\t}\t\n   \t}\n    else\n    {\n        \/\/ simple stars layer\n\t\t\/\/ by CBS : https:\/\/www.shadertoy.com\/view\/MslGWN\n\t\tf = vec4(pow(nrand3(uv).y,12.0));\n\t}\n    \n\tf += dstepf;\n}\n\n","name":"","description":"","type":"image"}]}}