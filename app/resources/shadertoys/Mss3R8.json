{"Shader":{"ver":"0.1","info":{"id":"Mss3R8","date":"1362809794","viewed":1648,"name":"Julia - Distance","username":"iq","description":"Analytical distance to a Julia set. More info here: http:\/\/www.iquilezles.org\/www\/articles\/distancefractals\/distancefractals.htm ","likes":19,"published":3,"flags":0,"tags":["2d","fractal","motionblur","distanceestimation","antialiasing","supersampling"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n\/\/ learn more here: \/\/ http:\/\/www.iquilezles.org\/www\/articles\/distancefractals\/distancefractals.htm\t\n\nfloat calc( vec2 p, float time )\n{\n\tp = -1.0 + 2.0*p;\n\tp.x *= iResolution.x\/iResolution.y;\n\n\tfloat ltime = 0.5-0.5*cos(time*0.12);\n    float zoom = pow( 0.9, 100.0*ltime );\n\tfloat an = 2.0*ltime;\n\tp = mat2(cos(an),sin(an),-sin(an),cos(an))*p;\n\tvec2 ce = vec2( 0.2655,0.301 );\n\tce += zoom*0.8*cos(4.0+4.0*ltime);\n\tp = ce + (p-ce)*zoom;\n\tvec2 c = vec2( -0.745, 0.186 ) - 0.045*zoom*(1.0-ltime);\n\t\n\tvec2 z = p;\n\tvec2 dz = vec2( 1.0, 0.0 );\n\n\tfor( int i=0; i<256; i++ )\n\t{\n\t\tdz = 2.0*vec2(z.x*dz.x-z.y*dz.y, z.x*dz.y + z.y*dz.x );\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n\t\tif( dot(z,z)>200.0 ) break;\n\t}\n\t\n\tfloat d = sqrt( dot(z,z)\/dot(dz,dz) )*log(dot(z,z));\n\n\treturn pow( clamp( (150.0\/zoom)*d, 0.0, 1.0 ), 0.5 );\n}\n\n\t\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t#if 0\n\tfloat scol = calc( fragCoord.xy\/iResolution.xy, iGlobalTime );\n    #else\n\n    float scol = 0.0;\n\tfor( int j=0; j<2; j++ )\n\tfor( int i=0; i<2; i++ )\n\t{\n\t\tvec2 of = -0.5 + vec2( float(i), float(j) ) \/ 2.0;\n\t    scol += calc( (fragCoord.xy+of)\/iResolution.xy, iGlobalTime );\n\t}\n\tscol *= 0.25;\n\n    #endif\n\t\n\tvec3 vcol = pow( vec3(scol), vec3(0.9,1.1,1.4) );\n\t\n\tvec2 uv = fragCoord.xy\/iResolution.xy;\n\tvcol *= 0.7 + 0.3*pow(16.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y),0.25);\n\n\t\n\tfragColor = vec4( vcol, 1.0 );\n}","name":"","description":"","type":"image"}]}}