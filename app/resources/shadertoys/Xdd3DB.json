{"Shader":{"ver":"0.1","info":{"id":"Xdd3DB","date":"1452030051","viewed":280,"name":"Deformation Feedback","username":"iq","description":"The old-school effect from the PC demos of the 90s <a href=\"http:\/\/iquilezles.org\/www\/articles\/feedbackfx\/feedbackfx.htm\" class=\"regular\" target=\"_blank\">http:\/\/iquilezles.org\/www\/articles\/feedbackfx\/feedbackfx.htm<\/a>","likes":9,"published":3,"flags":32,"tags":["2d","demoscene","feedback","msdos"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2016\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n\n\n\/\/ The old school demoscene effect, deformation feedback. An article from 2002\n\/\/ describing it: http:\/\/iquilezles.org\/www\/articles\/feedbackfx\/feedbackfx.htm\n\nconst float th = 0.06;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 q = fragCoord\/iResolution.xy;\n    vec2 p = (-iResolution.xy + 2.0*fragCoord) \/ iResolution.y;\n\n    vec3 col = texture2D( iChannel0, 0.5+(q-0.5)*(1.0-2.0*th) ).xyz;\n    \n    col *= 1.5*length(p);\n    \n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"},{"inputs":[{"id":3,"src":"\/presets\/tex02.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2016\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n\n\n\/\/ The old school demoscene effect, deformation feedback. An article from 2002\n\/\/ describing it: http:\/\/iquilezles.org\/www\/articles\/feedbackfx\/feedbackfx.htm\n\n\n\nconst float th = 0.06;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 q = fragCoord \/ iResolution.xy;\n    vec3 col = texture2D( iChannel0, q ).xyz;\n\n    if( abs(q.x-0.5)<(0.5-th) && abs(q.y-0.5)<(0.5-th) )\n    {\n        vec2 p = (-iResolution.xy + 2.0*fragCoord) \/ iResolution.y;\n\n        \/\/ replace this with any cool plane deformation\n        vec2 uv = p\/dot(p,p) + cos( iGlobalTime + vec2(0.0,2.0));\n        \n        col = 0.7 * texture2D( iChannel0, fract(uv) ).xyz;\n    }\n    else\n    {\n        col = texture2D( iChannel1, 0.5*q ).xyz;\n    }\n\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"buffer"}]}}