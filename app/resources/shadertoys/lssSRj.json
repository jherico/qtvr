{"Shader":{"ver":"0.1","info":{"id":"lssSRj","date":"1404482312","viewed":757,"name":"conformal polar","username":"FabriceNeyret2","description":"Mouse: move   SPACE: switch parametric \/ texture   T: time<br\/>A conformal space transform keeps local angles and proportions.<br\/>Here, polar transform is made conformal to avoid stretching in x at poles and in y at circumference (but sizes are not preserved).","likes":3,"published":3,"flags":16,"tags":["transform","short"],"hasliked":0},"renderpass":[{"inputs":[{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":33,"src":"\/presets\/tex00.jpg","ctype":"keyboard","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"float t = iGlobalTime;\n#define Pi 3.1415927\n\nbool keyToggle(int ascii) {\n\treturn (texture2D(iChannel2,vec2((.5+float(ascii))\/256.,0.75)).x > 0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tvec2 mouse = 2.*(iMouse.xy \/ iResolution.xy-vec2(.5,.5));\n\t\n\tfloat K = 2.*Pi*iResolution.y\/iResolution.x;\n\tfloat r = exp(-K*uv.y)\/(1.-exp(-K));\n\tfloat a = 2.*Pi*uv.x;\n\t\n\tvec2 tuv = vec2(.5,.5)+.5*r*vec2(cos(a),r*sin(a));\n\tvec4 col = vec4(0.);\n\t\n\tbool IMG = keyToggle(32);\n\tif (keyToggle(64+20)) t = 0.;\n\t\n\tif (IMG) {\n\t\ttuv += .5*mouse + .01*t;\n\t\tcol = texture2D(iChannel0,tuv\/vec2(iChannelResolution[0].x\/iChannelResolution[0].y,1.));\n\t}\n\telse {\n\t\ttuv += .1*mouse + .01*t;;\n\t\tuv = pow(abs(sin(2.*Pi*tuv*10.)),vec2(7.\/r)); \t\n\t\tcol.g = uv.x+uv.y;\n\t\tuv = pow(abs(sin(2.*Pi*tuv*50.)),vec2(7.\/r)); \n\t\tcol.r = (1.-col.g)*(uv.x+uv.y);\n\t}\n\tfragColor = col;\n}","name":"","description":"","type":"image"}]}}