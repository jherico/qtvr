{"Shader":{"ver":"0.1","info":{"id":"MtsSRf","date":"1439835376","viewed":1396,"name":"Siggraph'15 Workshop","username":"iq","description":"This is the full code for the 90 minutes workshop on Shadertoy creation held last week at Siggraph. Thanks to everybody who attended!","likes":26,"published":3,"flags":0,"tags":["3d","raymarching","tutorial","course","siggraph"],"hasliked":0},"renderpass":[{"inputs":[{"id":10,"src":"\/presets\/tex09.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Beautypi\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n\n\nfloat cosNoise( in vec2 p )\n{\n    return 0.5*( sin(p.x) + sin(p.y) );\n}\n\nconst mat2 m2 = mat2(1.6,-1.2,\n                     1.2, 1.6);\n\nfloat sdTorus( vec3 p, vec2 t )\n{\n  return length( vec2(length(p.xz)-t.x,p.y) )-t.y;\n}\n\n\nfloat smin( float a, float b, float k )\n{\n\tfloat h = clamp( 0.5 + 0.5*(b-a)\/k, 0.0, 1.0 );\n\treturn mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat map( in vec3 pos )\n{\n    float h = 0.0;\n    vec2 q = pos.xz*0.5;\n    \n    float s = 0.5;\n    for( int i=0; i<6; i++ )\n    {\n        h += s*cosNoise( q ); \n        q = m2*q*0.85; \n        q += vec2(2.41,8.13);\n        s *= 0.48 + 0.2*h;\n    }\n    h *= 2.0;\n    \n    float d1 = pos.y - h;\n    \n    \/\/ rings\n    vec3 r1 = mod(2.3+pos+5.0,10.0)-5.0;\n    r1.y = pos.y-0.1 - 0.7*h;\/\/ + 0.5*sin( 3.0*iGlobalTime+pos.x + 3.0*pos.z);\n    float d2 = sdTorus( r1.xzy, vec2(1.0,0.05) );\n    \n    \n    return smin( d1, d2, 1.0 );\n}\n\nfloat mapH( in vec3 pos )\n{\n    float h = 0.0;\n    vec2 q = pos.xz*0.5;\n    \n    float s = 0.5;\n    for( int i=0; i<12; i++ )\n    {\n        h += s*cosNoise( q ); \n        q = m2*q*0.85; \n        q += vec2(2.41,8.13);\n        s *= 0.48 + 0.2*h;\n    }\n    h *= 3.0;\n    \n    float d1 = pos.y - h;\n    \n    \/\/ rings\n    vec3 r1 = mod(2.3+pos+5.0,10.0)-5.0;\n    r1.y = pos.y-0.1 - 0.7*h;\/\/ + 0.5*sin( 3.0*iGlobalTime+pos.x + 3.0*pos.z);\n    float d2 = sdTorus( r1.xzy, vec2(1.0,0.05) );\n    \n    \n    return smin( d1, d2, 1.0 );\n}\n\nvec3 calcNormal( in vec3 pos )\n{\n    vec2 e = vec2(1.0,-1.0) * 0.001;\n    \n    return normalize( e.xyy*mapH( pos + e.xyy ) + \n\t\t\t\t\t  e.yyx*mapH( pos + e.yyx ) + \n\t\t\t\t\t  e.yxy*mapH( pos + e.yxy ) + \n\t\t\t\t\t  e.xxx*mapH( pos + e.xxx ) );\n}\n\nfloat softShadows( in vec3 ro, in vec3 rd )\n{\n    float res = 1.0;\n    float t = 0.01;\n    for( int i=0; i<64; i++ )\n    {\n        vec3 pos = ro + rd*t;\n        float h = map( pos );\n        res = min( res, max(h,0.0)*164.0\/t );\n        if( res<0.001 ) break;\n        t += h*0.5;\n    }\n    \n    return res;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy \/ iResolution.xy;\n    vec2 q = (-iResolution.xy + 2.0* fragCoord.xy) \/ iResolution.y;\n    \n    float ani = -20.0 + iGlobalTime + iMouse.x*0.1;\n    \n    \/\/ ray\n    vec3 ro = vec3( 0.0, 2.0, -ani*0.5 );\n    \n    float roll = 0.2*sin(0.1*ani);\n    q = mat2( cos(roll), -sin(roll), sin(roll), cos(roll) ) * q;\n    \n    vec3 rd = normalize( vec3(q-vec2(-0.4,0.4),-2.0) );\n    \n    vec3 col = vec3( 0.7, 0.8, 1.0 );\n    col *= 1.0 - 0.5*rd.y;\n\n    \/\/ raymarcher\n    float tmax = 120.0;\n    float t = 0.0;\n    for( int i=0; i<200; i++ )\n    {\n        vec3 pos = ro + rd*t;\n        float h = map( pos );\n        if( h<0.001 || t>tmax ) break;\n        t += h*0.5;\n    }\n\n    vec3 light = normalize( vec3( 1.0, 0.5, -1.0) );\n    \/\/ hit\n    if( t<tmax )\n    {\n        \/\/ shade and light\n        vec3 pos = ro + t*rd;\n        vec3 nor = calcNormal( pos );\n        \n        float bak = clamp( dot(nor,normalize(-vec3(light.x,0.0,light.z))), 0.0, 1.0 );\n        float dif = clamp( dot(nor,light), 0.0, 1.0 );\n        float sha =softShadows( pos+nor*.01, light );\n        vec3 lig = vec3(2.0,1.5,1.0)*dif*1.5*sha;\n             lig += vec3(0.2,0.3,0.4)*max(nor.y,0.0)*0.9;\n             lig += vec3(0.1,0.1,0.1)*bak*0.5;\n        vec3 mate = vec3(0.3,0.3,0.3)*0.5;\n        mate = mix( mate, vec3(0.2,0.15,0.1)*0.73, smoothstep( 0.7,0.9,nor.y) );\n        mate *= 0.5 + texture2D( iChannel0, 0.5*pos.xz ).x*1.0;\n \n        col = mate * lig;\n\n        float fog = exp( -0.0015*t*t );\n        col *= fog;\n        col += (1.0-fog)*vec3(0.5,0.6,0.7);\n    }\n\n    float sun = clamp( dot(rd,light), 0.0, 1.0 );\n    col += vec3(1.0,0.8,0.6)*0.4*pow(sun,16.0);\n    col += vec3(1.0,0.8,0.6)*0.3*pow(sun,8.0);\n    \n    col = sqrt( col );\n    \n    col *= 0.5 + 0.5*pow(16.0*p.x*p.y*(1.0-p.x)*(1.0-p.y),0.2);\n    \n    col = smoothstep( 0.0, 1.0, col );\n\n    col = mix( col, vec3(dot(col,vec3(0.33))), -0.25 );\n    \n\tfragColor = vec4( col, 1.0 );\n}\n","name":"","description":"","type":"image"}]}}