{"Shader":{"ver":"0.1","info":{"id":"XsXGzn","date":"1357136829","viewed":3012,"name":"Clover","username":"iq","description":"A 2D procedural clover","likes":20,"published":3,"flags":0,"tags":["procedural","2d"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = 0.6 * (2.0*fragCoord.xy-iResolution.xy)\/min(iResolution.y,iResolution.x);\n\n    float a = atan(q.x,q.y);\n    float r = length(q);\n    float s = 0.5 + 0.5*sin(3.0*a + iGlobalTime);\n    float g = sin(1.57+3.0*a+iGlobalTime);\n    float d = 0.15 + 0.3*sqrt(s) + 0.15*g*g;\n    float h = r\/d;\n    float f = 1.0-smoothstep( 0.95, 1.0, h );\n    h *= 1.0-0.5*(1.0-h)*smoothstep(0.95+0.05*h,1.0,sin(3.0*a+iGlobalTime));\n\t\n\tvec3 bcol = vec3(0.9+0.1*q.y,1.0,0.9-0.1*q.y);\n\tbcol *= 1.0 - 0.5*r;\n\th = 0.1 + h;\n    vec3 col = mix( bcol, 1.2*vec3(0.6*h,0.2+0.5*h,0.0), f );\n\n    fragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}