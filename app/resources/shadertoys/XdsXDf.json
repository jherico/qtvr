{"Shader":{"ver":"0.1","info":{"id":"XdsXDf","date":"1407409988","viewed":1243,"name":"Constant spectrum melody","username":"FabriceNeyret2","description":"This melody is just made of constant tunes interfering with each others.","likes":16,"published":3,"flags":8,"tags":["sound","illusion"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define N      10\n#define harmon 10\n#define df     0.1\n\nfloat message(vec2 uv) { \/\/ to alter in the icon\n    uv-=vec2(1.,16.); if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(32.-uv.x)));\n    if (int(uv.y)==2) i=  928473456\/bit; \/\/ 00110111 01010111 01100001 01110000\n    if (int(uv.y)==1) i=  626348112\/bit; \/\/ 00100101 01010101 01010000 01010000\n    if (int(uv.y)==0) i= 1735745872\/bit; \/\/ 01100111 01110101 01100001 01010000\n \treturn float(i-2*(i\/2));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iResolution.y<200.) {float c=message(fragCoord.xy\/8.);if(c>=0.){fragColor=vec4(c);return;}}\n\n    vec2 uv = fragCoord.xy \/ iResolution.xy;\n\n    float v = 0.; \n\tfor (int i = 0; i <= N; i++) \n        for (int j=1; j <= harmon; j++) {\n            float freq = (55.+float(i)*df)*float(j);\n            float p = (freq-uv.x*600.)\/.2;\n\t\t    v += exp(-.5*p*p);\n        }\n\n    fragColor = vec4(v*smoothstep(.8,.1,uv.y));\n}","name":"","description":"","type":"image"},{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define N      10.\n#define harmon 10.\n#define df     0.1\n\nvec2 mainSound(float time)\n{\n\tfloat v = 0., f; \n    \n\tfor (float i = 0.; i <= N; i++) \n        for (float j=1.; j <= harmon; j++)\n            f = ( 55. + i*df ) * j,\n\t\t    v += sin(2.*3.1415927*f*time); \n    \n    return vec2( v \/ (N*harmon));  \n}","name":"","description":"","type":"sound"}]}}