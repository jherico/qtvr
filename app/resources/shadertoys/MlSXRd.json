{"Shader":{"ver":"0.1","info":{"id":"MlSXRd","date":"1445824894","viewed":464,"name":"Dotted grid","username":"Macint","description":"simple tron-like grid","likes":2,"published":3,"flags":0,"tags":["3d","grid"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define PI 3.14159265359\n#define ZMAX 12.0\n#define GRIDINTERVAL 40.0\/(2.0*PI)\n#define DASHINTERVAL 200.0\/(2.0*PI)\n\nstruct Intersection\n{\n\tvec3 p;\n    bool vis;\n\tfloat dist;\n};\n\nIntersection floorintersect(vec3 raydir, vec3 origin) {\n    Intersection i;\n    i.vis = false;\n    \n    float t = (-0.5 - origin.y)\/raydir.y;\n    if (t > 0.) {\n    \ti.p = origin + raydir*t;\n        i.vis = true;\n        i.dist = t;\n    } \n\treturn i;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = -1.0 + 2.0 * ( fragCoord.xy \/ iResolution.xy );\n\tvec2 posAR;\n\tposAR.x = pos.x * (iResolution.x\/iResolution.y);\n\tposAR.y = pos.y;\n    \n    vec3 origin = vec3(0,0,iDate.w-10.0);\n    vec3 raydir = vec3(posAR.x,posAR.y,1) - vec3(0,0,0);\n    Intersection i = floorintersect(raydir,origin);\n    \n    if (i.vis) {\n        float d = 0.0;\n        bool draw = (\n            (\n                sin(i.p.x*GRIDINTERVAL) < (-0.999) &&\n            \tsin(i.p.z*DASHINTERVAL) > 0.95\n            ) \n            ||\n            (\n                sin(i.p.z*GRIDINTERVAL) < -0.999 &&\n                sin(i.p.x*DASHINTERVAL) > 0.95\n            )\n        );\n        d = (draw ? 1.0 : 0.0);\n        fragColor = vec4(0,d,0,1);\n        fragColor *= ((i.dist < ZMAX) ? 1. - i.dist\/ZMAX : 0.);\n    }\n    else {\n    \tfragColor = vec4(0,0,0,0);\n    }\n}","name":"","description":"","type":"image"}]}}