{"Shader":{"ver":"0.1","info":{"id":"MllXDH","date":"1436578277","viewed":704,"name":"Cell Merge with Metaballs","username":"aiekick","description":"you can use mouse  for moving the last blob","likes":0,"published":3,"flags":0,"tags":["cellmergewithmetaballs"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ bases on Cell Merge (prototype) from https:\/\/www.shadertoy.com\/view\/llsXD8\n\/\/ with metaball\nfloat mBall(vec2 uv, vec2 pos, float radius)\n{\n\treturn radius\/dot(uv-pos,uv-pos);\n}\n\nvoid mainImage( out vec4 f, in vec2 g )\n{\n\tvec3 color_bg = vec3(0.0,0.0,0.0);\n    vec3 color_inner = vec3(1.0,1.0,0.0);\n    vec3 color_outer = vec3(0.5,0.8,0.3);\n\n    vec2 s = iResolution.xy;\n    vec2 uv = (2.*g-s)\/s.y;\n    vec2 mo = (2.*iMouse.xy-s)\/s.y;\n        \n    float mb = 0.;\n    \n   \tmb += mBall(uv, vec2(0.), 0.02);\/\/ metaball 1\n    mb += mBall(uv, vec2(0.57, 0.), 0.02);\/\/ metaball 2\n    mb += mBall(uv, vec2(sin(iGlobalTime)*.5, 0.5), 0.02);\/\/ metaball 3\n    mb += mBall(uv, mo, 0.02);\/\/ metaball 4\n        \n    vec3 col = color_bg;\n    vec3 mbext = color_outer * (1.-smoothstep(mb, mb+0.01, 0.5)); \/\/ 0.5 fro control the blob thickness\n    vec3 mbin = color_inner * (1.-smoothstep(mb, mb+0.01, 0.8)); \/\/ 0.8 for control the blob kernel size\n        \n    f.rgb = vec3(mbin+mbext);\n}\n\n","name":"","description":"","type":"image"}]}}