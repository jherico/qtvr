{"Shader":{"ver":"0.1","info":{"id":"XssSzN","date":"1397670043","viewed":1118,"name":"Metaballs - Cubic","username":"iq","description":"Bounded metaballs with cubic falloff. It's usually recommended to use quintic falloffs though. See . And PLEASE don't use 1\/d\u00b2 potentials!","likes":8,"published":3,"flags":0,"tags":["2d","metaballs","cubic"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (-iResolution.xy+2.0*fragCoord.xy)\/iResolution.y;\n\n    \/\/ anim\n\tvec2 c1 = 0.8*sin( iGlobalTime*1.0 + vec2(4.0,0.5) + 1.0);\n\tvec2 c2 = 0.8*sin( iGlobalTime*1.3 + vec2(1.0,2.0) + 2.0);\n\tvec2 c3 = 0.8*sin( iGlobalTime*1.5 + vec2(0.0,2.0) + 4.0);\n\t\n    \/\/ potential (3 metaballs)\n    float v = 0.0;\t\n\tv += 1.0-smoothstep(0.0,0.7,length(uv-c1));\n\tv += 1.0-smoothstep(0.0,0.7,length(uv-c2));\n\tv += 1.0-smoothstep(0.0,0.7,length(uv-c3));\n\n    \/\/ color\t\n\tvec3 col = mix( vec3(v), vec3(1.0,0.6,0.0), smoothstep(0.9,0.91,v) );\n\t\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}