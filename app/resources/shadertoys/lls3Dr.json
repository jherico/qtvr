{"Shader":{"ver":"0.1","info":{"id":"lls3Dr","date":"1427324847","viewed":1006,"name":"Mike Solo","username":"aiekick","description":"Based on the famous iq shader of  Mike <a href=\"https:\/\/www.shadertoy.com\/view\/MsXGWr\" class=\"regular\" target=\"_blank\">https:\/\/www.shadertoy.com\/view\/MsXGWr<\/a><br\/>Carbonite attempt... can be optimised a little bit <img src=\"\/img\/emoticonHappy.png\"\/><br\/>you can control the camera by mouse","likes":18,"published":3,"flags":0,"tags":["raymarching","starwar","pixar","carbonite","mike"],"hasliked":0},"renderpass":[{"inputs":[{"id":8,"src":"\/presets\/tex07.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":23,"src":"\/presets\/cube01_0.png","ctype":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ Based on the famous iq shader of Mike (monster inc. - PIXAR) https:\/\/www.shadertoy.com\/view\/MsXGWr\n\n\/\/ Attempt to put Mike in carbonite like Han Solo in Starwars ^^\n\nmat3 getRotXMat(float a){return mat3(1.,0.,0.,0.,cos(a),-sin(a),0.,sin(a),cos(a));}\nmat3 getRotYMat(float a){return mat3(cos(a),0.,sin(a),0.,1.,0.,-sin(a),0.,cos(a));}\nmat3 getTransMat(float x,float y,float z){return mat3(1.,0.,x,0.,1.,y,0.,0.,z);}\n\n\/\/ vars thick\nfloat thickArm = 0.05;\nfloat thickWrist = 0.05;\nfloat thickHand = 0.05;\nfloat thickKnee = 0.1;\nfloat thickLeg = 0.1;\nfloat thickFoot = 0.08;\n    \n\/\/ vars coord \/\/ left\nvec3 LarmS = vec3(-0.8,2.2,0.);\nvec3 LarmE = vec3(-1.,1.5,0.4);\nvec3 LwristE = vec3(-1.1,2.2,0.6);\nvec3 LFinger11 = vec3(-1.15,2.4,0.55);\nvec3 LFinger12 = vec3(-1.17,2.5,0.63);\nvec3 LFinger21 = vec3(-1.05,2.4,0.55);\nvec3 LFinger22 = vec3(-1.03,2.55,0.62);\nvec3 LFinger31 = vec3(-0.95,2.3,0.55);\nvec3 LFinger32 = vec3(-0.85,2.4,0.63);\nvec3 LkneeS = vec3(-0.5,1.5,0.3);\nvec3 LkneeE = vec3(-0.6,0.85,0.65);\nvec3 LlegE = vec3(-0.6,0.2,0.4);\nvec3 LFootE1 = vec3(-0.75,-0.1,0.6);\nvec3 LFootE2 = vec3(-0.6,-0.1,0.6);\nvec3 LFootE3 = vec3(-0.45,-0.1,0.6);\n    \n\/\/ vars coord \/\/ right\nvec3 RarmS = vec3(0.8,2.2,0.);\nvec3 RarmE = vec3(1.,1.5,0.4);\nvec3 RwristE = vec3(1.,2.,0.6);\nvec3 RFinger11 = vec3(1.15,2.2,0.55);\nvec3 RFinger12 = vec3(1.17,2.3,0.63);\nvec3 RFinger21 = vec3(1.05,2.2,0.55);\nvec3 RFinger22 = vec3(1.03,2.35,0.62);\nvec3 RFinger31 = vec3(0.95,2.1,0.55);\nvec3 RFinger32 = vec3(0.85,2.2,0.63);\nvec3 RkneeS = vec3(0.5,1.5,0.3);\nvec3 RkneeE = vec3(0.6,0.85,0.5);\nvec3 RlegE = vec3(0.6,0.4,0.4);\n\nconst mat2 m2 = mat2( 0.80, -0.60, 0.60, 0.80 );\n\nfloat udBox( vec3 p, vec3 b )\n{\n  return length(max(abs(p)-b,0.0));\n}\n\nvec2 sdSegment( vec3 a, vec3 b, vec3 p )\n{\n\tvec3 pa = p - a;\n\tvec3 ba = b - a;\n\tfloat h = clamp( dot(pa,ba)\/dot(ba,ba), 0.0, 1.0 );\n\treturn vec2( length( pa - ba*h ), h );\n}\n\n\/\/\/\/\/\/\/\/BOOLEANS OP\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\nfloat smin( float a, float b, float k ){\n    float h = clamp( 0.5+0.5*(b-a)\/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);}\n\n\/\/ head + eye + mouth + teeth\nvec2 mapHead( vec3 p )\n{\n    p.x = abs(p.x);\n    \n    vec3 q = p;\n\tq.y -= 0.3*pow(1.0-length(p.xz),1.0)*smoothstep(0.0, 0.2, p.y);\n\tq.y *= 1.05;\n\tq.z *= 1.0 + 0.1*smoothstep( 0.0, 0.5, q.z )*smoothstep( -0.5, 0.5, p.y );\n    float dd = length( (p - vec3(0.0,0.65,0.8))*vec3(1.0,0.75,1.0) );\n\tfloat am = clamp( 4.0*abs(p.y-0.45), 0.0, 1.0 );\n\tfloat fo = -0.03*(1.0-smoothstep( 0.0, 0.04*am, abs(dd-0.42) ))*am;\n    float dd2 = length( (p - vec3(0.0,0.65,0.8))*vec3(1.0,0.25,1.0) );\n\tfloat am2 = clamp( 1.5*(p.y-0.45), 0.0, 1.0 );\n\tfloat fo2 = -0.085*(1.0-smoothstep( 0.0, 0.08*am2, abs(dd2-0.42) ))*am2;\n    q.y += -0.05+0.05*length(q.x);\n\t\n    float sco = 0.45;\/\/ scale du pourtour de l'oeil\n\tfloat d1 = length( q ) - 0.9 + fo*sco + fo2*sco;\/\/ le body\n    vec2 res = vec2( d1, 1.);\n\n    \/\/ eyes - oeil\n\tfloat d3 = length( (p - vec3(0.0,0.25,0.35))*vec3(1.0,0.8,1.0) ) - 0.5;\n    res.x = smin(res.x, d3, 0.01); \/\/ smooth entre l'oeil et le pourtour\n    \n\t\/\/ mouth - bouche (four)\n\tfloat mo = length( (q-vec3(0.0,-0.35,1.))*vec3(1.0,1.2,0.25)\/1.2 ) -0.3\/1.2;\n\tfloat of = 0.1*pow(smoothstep( 0.0, 0.2, abs(p.x-0.3) ),0.5);\n\tmo = max( mo, -q.y-0.35-of );\n\n\tfloat li = smoothstep( 0.0, 0.05, mo+0.02 ) - smoothstep( 0.05, 0.10, mo+0.02 );\n\tres.x -= 0.03*li*clamp( (-q.y-0.4)*10.0, 0.0, 1.0 );\n\t\n    if( -mo > res.x ) res = vec2( -mo, 0.5 );\n\n    res.x += 0.01*(smoothstep( 0.0, 0.05, mo+0.062 ) - smoothstep( 0.05, 0.10, mo+0.062 ));\n\n    \/\/ teeth - dents\n\tif( p.x<0.3 )\n\t{\n        p.x = mod( p.x, 0.16 )-0.08;\t\n        float d5 = length( (p-vec3(0.0,-0.37,0.65))*vec3(1.0,2.0,1.0))-0.08;\n        res.x = smin(res.x, d5, 0.02); \/\/ smooth entre l'oeil et le pourtour\n    }\n\t\n    \/\/ fond de mouth\n    float d2 = length( q ) - 0.8;\n    res.x = smin(res.x, d2, 0.16);\n    \n\treturn res.xy;\n}\n\nvec2 mapCarbonite( vec3 p )\n{\n    \/\/ displacement steal\n    float prec = 0.035; \/\/ displacement scale\n    float disp = 1. - smoothstep(0., 1., dot(texture2D(iChannel1, p.xy\/1.8).rgb, vec3(prec)));\n    p.z += disp;\n    \n    \/\/ head position and orientation\n    vec3 q = p - vec3(-.1,0.1,0.45);\n    q *= getRotYMat(0.3) * getRotXMat(0.15);\n    q.y -= 2.;\n    vec2 res = mapHead(q);\n\n    \/\/ left arm \/\/ bras\n    \/\/vec2 Larm = sdSegment(LarmS, LarmE, p);\n    \/\/res.x = smin(res.x, Larm.x-thickArm, 0.05);\n    \n    \/\/ left wrist \/\/ poignet\n    vec2 Lwrist = sdSegment(LarmE, LwristE, p);\n    res.x = smin(res.x, Lwrist.x-thickWrist, 0.05);\n    \n    \/\/ left hand \/\/ main\n    vec2 Lhand11 = sdSegment(LwristE, LFinger11, p);\n    res.x = smin(res.x, Lhand11.x-thickHand, 0.03);\n    vec2 Lhand21 = sdSegment(LwristE, LFinger21, p);\n    res.x = smin(res.x, Lhand21.x-thickHand, 0.03);\n    vec2 Lhand31 = sdSegment(LwristE, LFinger31, p);\n    res.x = smin(res.x, Lhand31.x-thickHand, 0.03);\n    vec2 Lhand12 = sdSegment(LFinger11, LFinger12, p);\n    res.x = smin(res.x, Lhand12.x-thickHand, 0.03);\n    vec2 Lhand22 = sdSegment(LFinger21, LFinger22, p);\n    res.x = smin(res.x, Lhand22.x-thickHand, 0.03);\n    vec2 Lhand32 = sdSegment(LFinger31, LFinger32, p);\n    res.x = smin(res.x, Lhand32.x-thickHand, 0.03);\n    \n    \/\/ left knee \/\/ genou\n    vec2 Lknee = sdSegment(LkneeS, LkneeE, p);\n    res.x = smin(res.x, Lknee.x-thickKnee, 0.08);\n    \n    \/\/ left leg \/\/ molet\n    vec2 Lleg = sdSegment(LkneeE, LlegE, p);\n    res.x = smin(res.x, Lleg.x-thickLeg, 0.05);\n    \n    \/\/ left foot \/\/ pied\n    vec2 LFoot1 = sdSegment(LlegE, LFootE1, p);\n    res.x = smin(res.x, LFoot1.x-thickFoot, 0.05);\n    vec2 LFoot2 = sdSegment(LlegE, LFootE2, p);\n    res.x = smin(res.x, LFoot2.x-thickFoot, 0.05);\n    vec2 LFoot3 = sdSegment(LlegE, LFootE3, p);\n    res.x = smin(res.x, LFoot3.x-thickFoot, 0.05);\n    \n    \/\/ right arm \/\/ bras\n    \/\/vec2 Rarm = sdSegment(RarmS, RarmE, p);\n    \/\/res.x = smin(res.x, Rarm.x-thickArm, 0.05);\n    \n    \/\/ right hand \/\/ main\n    vec2 Rhand11 = sdSegment(RwristE, RFinger11, p);\n    res.x = smin(res.x, Rhand11.x-thickHand, 0.03);\n    vec2 Rhand21 = sdSegment(RwristE, RFinger21, p);\n    res.x = smin(res.x, Rhand21.x-thickHand, 0.03);\n    vec2 Rhand31 = sdSegment(RwristE, RFinger31, p);\n    res.x = smin(res.x, Rhand31.x-thickHand, 0.03);\n    vec2 Rhand12 = sdSegment(RFinger11, RFinger12, p);\n    res.x = smin(res.x, Rhand12.x-thickHand, 0.03);\n    vec2 Rhand22 = sdSegment(RFinger21, RFinger22, p);\n    res.x = smin(res.x, Rhand22.x-thickHand, 0.03);\n    vec2 Rhand32 = sdSegment(RFinger31, RFinger32, p);\n    res.x = smin(res.x, Rhand32.x-thickHand, 0.03);\n        \n    \/\/ right wrist \/\/ poignet\n    vec2 Rwrist = sdSegment(RarmE, RwristE, p);\n    res.x = smin(res.x, Rwrist.x-thickWrist, 0.05);\n    \n    \/\/ right knee \/\/ genou\n    vec2 Rknee = sdSegment(RkneeS, RkneeE, p);\n    res.x = smin(res.x, Rknee.x-thickKnee, 0.05);\n    \n    \/\/ right leg \/\/ molet\n    vec2 Rleg = sdSegment(RkneeE, RlegE, p);\n    res.x = smin(res.x, Rleg.x-thickLeg, 0.05);\n    \n    \/\/ right foot \/\/ pied\n    \n    \/\/ carbonite box\n    float box = udBox(p-vec3(0.,0.,-0.13), vec3(1.5,4.,0.65));\n   \tres.x = smin(res.x, box, 0.05);\n    \n    return res;\n}\n\nvec2 map( vec3 p )\n{\n    vec2 res = mapCarbonite( p-vec3(0.,1.,2.) );\n    \n\treturn vec2(res.x*0.8,res.y);\n}\n\nvec3 calcNormal( in vec3 pos )\n{\n    vec3 eps = vec3(0.002,0.0,0.0);\n\treturn normalize( vec3(\n           map(pos+eps.xyy).x - map(pos-eps.xyy).x,\n           map(pos+eps.yxy).x - map(pos-eps.yxy).x,\n           map(pos+eps.yyx).x - map(pos-eps.yyx).x ) );\n}\n\nvec3 intersect( in vec3 ro, in vec3 rd )\n{\n    float m = -1.0;\n\tfloat mint = 20.0;\n\n    \/\/ plane\t\n\tfloat tf = (0.0-ro.y)\/rd.y;\n\tif( tf>0.0 ) { mint = tf; m = 0.0; }\n\t\n\t\/\/ mike\n\tfloat maxd = min(20.0,mint);\n\tfloat precis = 0.001;\n    float h = precis*2.0;\n    float t = 0.0;\n\tfloat d = 0.0;\n    for( int i=0; i<80; i++ )\n    {\n        if( h<precis||t>maxd ) break;\n        t += h;\n\t    vec2 res = map( ro+rd*t );\n        h = res.x;\n\t\td = res.y;\n    }\n\n    if( t<maxd && t<mint )\n\t{\n\t\tmint = t;\n\t\tm = d;\n\t}\n\n    return vec3( mint, m, m );\n}\n\nfloat softshadow( in vec3 ro, in vec3 rd, float mint, float k )\n{\n    float res = 1.0;\n    float t = mint;\n\tfloat h = 1.0;\n    for( int i=0; i<10; i++ )\n    {\n        h = map(ro + rd*t).x;\n        res = min( res, smoothstep(0.0,1.0,k*h\/t) );\n\t\tt += clamp( h, 0.02, 2.0 );\n\t\tif( res<0.01 || t>10.0 ) break;\n    }\n    return clamp(res,0.0,1.0);\n}\n\n\/\/ light\nvec3 lig = normalize(vec3(0.,4.,8.));\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 q = fragCoord.xy \/ iResolution.xy;\n    vec2 p = -1. + 2. * q;\n    p.x *= iResolution.x\/iResolution.y;\n    vec2 m = vec2(0.5);\n    \n\tif( iMouse.z>0.0 ) \n        m = vec2(\n        \tiMouse.x\/iResolution.x,\n        \t1.-iMouse.y\/iResolution.y);\n\n\t#ifdef STEREO\n\tfloat eyeID = mod(fragCoord.x + mod(fragCoord.y,2.0),2.0);\n    #endif\n\n    \/\/-----------------------------------------------------\n    \/\/ animate\n    \/\/-----------------------------------------------------\n\t\n\tfloat ctime = iGlobalTime;\n\n\tfloat proxiCam = 6.5;\n    \n    \/\/-----------------------------------------------------\n    \/\/ camera\n    \/\/-----------------------------------------------------\n\t\n\tfloat an = sin(0.314519*ctime)*0.8 - 6.2831*(m.x-0.5);\n\n\tvec3 ro = vec3(proxiCam*sin(an),6.*m.y,proxiCam*cos(an));\n    vec3 ta = vec3(0.0,2.5,0.0);\n\n    \/\/ camera matrix\n    vec3 ww = normalize( ta - ro );\n    vec3 uu = normalize( cross(ww,vec3(0.0,1.0,0.0) ) );\n    vec3 vv = normalize( cross(uu,ww));\n\n\t\/\/ create view ray\n\tvec3 rd = normalize( p.x*uu + p.y*vv + 2.0*ww );\n\n\t#ifdef STEREO\n        vec3 fo = ro + rd*7.0; \/\/ put focus plane behind Mike\n        ro -= 0.1*uu*eyeID;    \/\/ eye separation\n        rd = normalize(fo-ro);\n    #endif\n\n    \/\/-----------------------------------------------------\n\t\/\/ render\n    \/\/-----------------------------------------------------\n\n\tvec3 col = vec3(1.0);\n\n\t\/\/ raymarch\n    vec3 tmat = intersect(ro,rd);\n    if( tmat.z>-0.5 )\n    {\n        \/\/ geometry\n        vec3 pos = ro + tmat.x*rd;\n        vec3 nor = calcNormal(pos);\n\t\tvec3 ref = reflect( rd, nor );\n\n        \/\/ materials\n\t\tvec4 mate = vec4(vec3(0.),1.0);\n\t\tvec2 mate2 = vec2(1.0);\n\t\tif( tmat.z<0.5 ) \/\/ sol\n\t\t{\n\t\t\tnor = vec3(0.0,1.0,0.0);\n\t\t    ref = reflect( rd, nor );\n\t\t\tmate.xyz = vec3(1.0);\n            mate2.y = 1.0 - 0.9*(2.0\/(2.0+dot(pos.xz,pos.xz)));\n\t\t}\n\t\t\n        mate2.x = 0.4;\n\n        col = textureCube(iChannel0, reflect(rd, nor)).rgb * .45;\n        \n\t\t\/\/ lighting\n\t\tfloat occ = (0.5 + 0.5*nor.y)*mate2.y;\n        float amb = 0.0;\n\t\tfloat bou = clamp(-nor.y,0.0,1.0);\n\t\tfloat dif = max(dot(nor,lig),0.0);\n        float bac = max(0.3 + 0.7*dot(nor,-lig),0.0);\n\t\tfloat sha = 0.0; if( dif>0.01 ) sha=softshadow( pos+0.01*nor, lig, 0.0005, 32.0 );\n        float fre = pow( clamp( 1.0 + dot(nor,rd), 0.0, 1.0 ), 2.0 );\n        float spe = max( 0.0, pow( clamp( dot(lig,reflect(rd,nor)), 0.0, 1.0), mate2.x*3. ) );\n\t\t\n\t\t\/\/ lights\n\t\tvec3 lin = vec3(0.0);\n        lin += 2.0*dif*vec3(1.00,1.00,1.00)*pow(vec3(sha),vec3(1.0,1.2,1.5));\n\t\tlin += 1.0*amb*vec3(0.30,0.30,0.30)*occ;\n\t\tlin += 2.0*bou*vec3(0.40,0.40,0.40)*mate2.y;\n\t\tlin += 4.0*bac*vec3(0.40,0.30,0.25)*occ;\n        lin += 1.0*fre*vec3(1.00,1.00,1.00)*2.0*mate.w*(0.5+0.5*dif*sha)*occ;\n\t\tlin += 1.0*spe*vec3(1.0)*occ*mate.w*dif*sha;\n\n\t\t\/\/ surface-light interacion\n\t\tcol = mix(col, mate.xyz* lin + vec3(2.5)*mate.w*pow(spe,8.0)*sha, 0.8);\n\t}\n\n\t\/\/-----------------------------------------------------\n\t\/\/ postprocessing\n    \/\/-----------------------------------------------------\n    \/\/ gamma\n\tcol = pow( clamp(col,0.0,1.0), vec3(0.45) );\n\n\t\/\/ vigneting\n    col *= 0.5 + 0.5*pow( 16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y), 0.25 );\n\n    #ifdef STEREO\t\n    col *= vec3( eyeID, 1.0-eyeID, 1.0-eyeID );\t\n\t#endif\n\n    fragColor = vec4( col, 1.0 );\n}\n","name":"","description":"","type":"image"}]}}