{"Shader":{"ver":"0.1","info":{"id":"4sfSR7","date":"1398082033","viewed":1116,"name":"Cartoonish WebCam: variant","username":"FabriceNeyret2","description":"\/\/ variant from okeli4408  https:\/\/www.shadertoy.com\/view\/XdXXzM#<br\/>mouse:   x: threshold y: gamma    Auto-demo if no mouse<br\/>G: gamma amplif before vs after mixing colors<br\/>BG:  B: flip black\/white  C: rev of FB<br\/>FG:  F: rev of BG","likes":3,"published":3,"flags":18,"tags":["video","dfdx"],"hasliked":0},"renderpass":[{"inputs":[{"id":12,"src":"\/presets\/vid01.webm","ctype":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"id":31,"src":"\/presets\/webcam.png","ctype":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":33,"src":"\/presets\/tex00.jpg","ctype":"keyboard","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ variant from okeli4408 https:\/\/www.shadertoy.com\/view\/XdXXzM#\n\nbool keyToggle(int ascii) {\n\treturn (texture2D(iChannel2,vec2((.5+float(ascii))\/256.,0.75)).x > 0.);\n}\n\nfloat showFlag(vec2 p, vec2 uv, float v) {\n\tfloat d = length(2.*(uv-p)*iResolution.xy\/iResolution.y);\n\treturn \t1.-step(.06*v,d) + smoothstep(0.005,0.,abs(d-.06));\n}\n\nfloat showFlag(vec2 p, vec2 uv, bool flag) {\n\treturn showFlag(p, uv, (flag) ? 1.: 0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\n\t\/\/ --- tunings \n\t\n\tvec2 mouse = iMouse.xy \/ iResolution.xy;\n\t\n\tbool BG_BW, BG_COL, FG_COL,FLIP,GAMMA, VID;\n\t\n\tif (iMouse.z<=0.) { \/\/ no mouse: autodemo\n\t\tfloat t = iGlobalTime\/3.;\n\t\tfloat t0 = mod(t,3.); int i = int(t0);\n\t\t\n\t\t\/\/ (!BG_BW) = (i==0)\n\t\tBG_BW  = (i==1);\n\t\tBG_COL = (i==2);\n\t\tFLIP = (mod(t\/3.,2.)>1.);\n\t\tGAMMA = (mod(t\/6.,2.)>1.);\n\t\tVID = (iResolution.y<200.) || (iChannelResolution[0].y<=0.) || (mod(t\/12.,2.)>1.);\n\t\tFG_COL=false; \/\/ already there for BG + high gamma\n\t\t\n\t\tmouse = .5*( 1.+ .5*vec2(cos(3.*t)+cos(t), sin(3.3*t)+cos(.7*t) ) );\n\t}\t\n\telse \n\t{\n\t\tBG_BW  = keyToggle(66);\n\t\tBG_COL = keyToggle(67);\n\t\tFG_COL = keyToggle(70);\n\t\tFLIP   = keyToggle(32);\n\t\tGAMMA  = keyToggle(71);\n\t\tVID    = keyToggle(86);\n\t}\n\t\n\tfloat panel = showFlag(vec2(.25,.05),uv, bool(BG_BW))\n\t\t\t\t+ showFlag(vec2(.35,.05),uv, bool(BG_COL))\n\t\t\t\t+ showFlag(vec2(.45,.05),uv, bool(FG_COL))\n\t\t\t\t+ showFlag(vec2(.55,.05),uv, bool(GAMMA))\n\t\t\t\t+ showFlag(vec2(.65,.05),uv, bool(FLIP))\n\t\t\t\t+ showFlag(mouse,uv, true);\n\t\n    \/\/ --- display \n\t\n\tvec3 col = (VID) ? texture2D(iChannel1, vec2(1.-uv.x,uv.y)).rgb \n\t\t\t\t\t : texture2D(iChannel0, vec2(1.-uv.x,uv.y)).rgb;\n\t\n\t\/\/ edge = norm of luminance derivative.\n\tfloat lum = col.x + col.y + col.z;\n\tvec2 deriv = vec2(dFdx(lum), dFdy(lum));\n\tfloat edge = sqrt(dot(deriv,deriv));\n\t\/\/ improve:\n\tedge = smoothstep(0.,mouse.x,edge);\n\tif (GAMMA) edge = pow(edge, exp(2.*2.*(mouse.y-.7))); \/\/ gamma contrasting\n\t\n\tif (FLIP) edge = 1.-edge;\n\t\n\tvec3 bg = vec3 ( (BG_BW) ? 1.: 0.);  \/\/ black vs white background\n\tif (BG_COL) bg = 1.-col; \t\t\t \/\/ background = reverse video\n\tif (!FG_COL) col = 1.-bg;\t\t\t \/\/ forground = rev of background\n\t\n\t\/\/ key transform: ink + paper\n\tcol = mix(col,bg,edge); \n\n\tif (!GAMMA) col = pow(col, vec3(exp(3.*mouse.y))); \/\/ gamma contrasting\n\t\n\tcol.b = (col.b+.2*(col.r+col.g) < panel) ? panel:  col.b-panel;\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}