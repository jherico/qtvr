{"Shader":{"ver":"0.1","info":{"id":"Mt2XDc","date":"1447095936","viewed":652,"name":"tritree","username":"FabriceNeyret2","description":"the tri-tree variant of quad-tree https:\/\/www.shadertoy.com\/view\/lljSDy<br\/>indeed, this is another kind of 4trees ;-)<br\/>(NB: subdivision if the object intersect the node bounding sphere).","likes":20,"published":3,"flags":0,"tags":["short","tritree","quadtri"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"void mainImage( out vec4 o,  vec2 U )\n{\n    o = vec4(0.0);\n    float r=.2, z=4., t=iGlobalTime, H = iResolution.y, uz;\n    U \/=  H;                              \/\/ object : disc(P,r)\n    vec2 P = .5+.5*vec2(cos(t),sin(t*.7)), C=vec2(-.7,0), fU;  \n    U =(U-C)\/z; P=(P-C)\/z; r\/= z;         \/\/ unzoom for the whole domain falls within [0,1]^n\n    \n    mat2 M = mat2(1,0,.5,.87), IM = mat2(1,0,-.577,1.155);\n    U = IM*U;         \/\/ goto triangular coordinates (there, regular orthonormal grid + diag )\n    \n    o.b = .25;                            \/\/ backgroud = cold blue\n\n    for (int i=0; i<7; i++) {             \/\/ to the infinity, and beyond ! :-)\n        fU = min(U,1.-U); uz = 1.-U.x-U.y;\n        if (min(min(fU.x,fU.y),abs(uz)) < z*r\/H) { o--; break; } \/\/ cell border\n    \tif (length(P-M*vec2(.5-sign(uz)\/6.)) - r > .6) break;    \/\/ cell is out of the shape\n\n                \/\/ --- iterate to child cell\n        fU = step(.5,U);                  \/\/ select grid-child\n        U = 2.*U - fU;                    \/\/ go to new local frame\n        P = 2.*P - M*fU;  r *= 2.;\n        \n        o += .13;                         \/\/ getting closer, getting hotter\n    }\n               \n\to.gb *= smoothstep(.9,1.,length(P-M*U)\/r); \/\/ draw object\n}","name":"","description":"","type":"image"}]}}