{"Shader":{"ver":"0.1","info":{"id":"ltB3RK","date":"1430936470","viewed":859,"name":"Yellow Manypus","username":"poljere","description":"A Manypus is a species discovered in Shadertoyland in May 2015. This new cell\/monster\/animal loves music and it specially enjoys reacting to your microphone!","likes":4,"published":3,"flags":4,"tags":["2d","sound","reactive","music","microphone","manypus"],"hasliked":0},"renderpass":[{"inputs":[{"id":17,"src":"\/presets\/tex12.png","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":32,"src":"\/presets\/mic.png","ctype":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Pol Jeremias - pol\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define SOUND_MULTIPLIER 1.0\n\nfloat sin01(float v){ return 0.5 + 0.5 * sin(v); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    uv -= vec2(0.5);\n\tuv.x *= iResolution.x \/ iResolution.y;\n    \n    float a = atan( uv.y, uv.x );\n    float r = length( uv );\n    \n    \/\/\n    \/\/ Draw the white eye\n    \/\/\n    float reactBase = SOUND_MULTIPLIER * texture2D(iChannel0, vec2(0.1, 0.0) ).x;\n    float nr = r + reactBase * 0.06 * sin01(a * 2.0 +iGlobalTime);\n    float c = 1.0 - smoothstep(0.04, 0.07, nr);\n\t\n    \/\/\n    \/\/ Draw the manypus\n    \/\/\n    uv = (fragCoord.xy \/ iResolution.xy) * 2.0 - 1.0;\n    const float it = 10.0;\n    float c1 = 0.0;\n    for( float i = 0.0 ; i < it ; i += 1.0 )\n    {\n        float i01 = i \/ it;\n        float rnd = texture2D( iChannel1, vec2(i01)).x;\n        float react = SOUND_MULTIPLIER * texture2D(iChannel0, vec2(i01, 0.0) ).x;\n        \n        float a = rnd * 3.1415;\n        uv = uv * mat2( cos(a), -sin(a), sin(a), cos(a) );\n        \n        \/\/ Calculate the line\n        float t= 0.3 * abs(1.0 \/ sin( uv.x * 3.1415 + sin(uv.y * 30.0 * rnd +iGlobalTime) * 0.13)) - 1.0;\n        \n        \/\/ Kill repetition in the x axis\n        t *= 1.0 - smoothstep(0.3, 0.53, abs(uv.x));\n        \n        \/\/ Kill part of the y axis so it looks like a line with a beginning and end\n        float base = 0.1 + react;\n        rnd *= 0.2;\n        t *= 1.0 - smoothstep(base + rnd, base + 0.3 + rnd, abs(uv.y));\n        \n        c1 += t;\n    }\n    \n    \/\/\n    \/\/ Calculat the final color\n    \/\/\n    c1 = clamp(c1, 0.0, 1.0);\n    vec3 col = mix(vec3(0.95,0.95,0.0), vec3(0.0), c1 - c);\n    col += c;\n\tfragColor = vec4( col, 1.0);\n}","name":"","description":"","type":"image"}]}}