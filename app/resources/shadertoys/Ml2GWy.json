{"Shader":{"ver":"0.1","info":{"id":"Ml2GWy","date":"1432180668","viewed":2537,"name":"Fractal Tiling","username":"iq","description":"Inspired by the previous <a href=\"https:\/\/www.shadertoy.com\/view\/ll2GWy\"  class=\"regular\" target=\"_blank\">Smooth XOR<\/a> experiment.","likes":51,"published":3,"flags":0,"tags":["2d","xor","tiling"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = 256.0*fragCoord.xy\/iResolution.x + iGlobalTime;\n\n    vec3 col = vec3(0.0);\n    for( int i=0; i<6; i++ ) \n    {\n        vec2 a = floor(pos);\n        vec2 b = fract(pos);\n        \n        vec4 w = fract((sin(a.x*7.0+31.0*a.y + 0.01*iGlobalTime)+vec4(0.035,0.01,0.0,0.7))*13.545317); \/\/ randoms\n                \n        col += w.xyz *                                   \/\/ color\n               smoothstep(0.45,0.55,w.w) *               \/\/ intensity\n               sqrt( 16.0*b.x*b.y*(1.0-b.x)*(1.0-b.y) ); \/\/ pattern\n        \n        pos \/= 2.0; \/\/ lacunarity\n        col \/= 2.0; \/\/ attenuate high frequencies\n    }\n    \n    col = pow( 2.5*col, vec3(1.0,1.0,0.7) );    \/\/ contrast and color shape\n    \n    fragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}