{"Shader":{"ver":"0.1","info":{"id":"MtsGD4","date":"1422198907","viewed":821,"name":"Holy Grail Quest","username":"eiffie","description":"In the never ending quest for the fractal holy grail this was a contender from a few years ago. Of course it is not the 3d mandelbrot we imagine having detail everywhere but it has some nice julias.","likes":6,"published":3,"flags":0,"tags":["3dmandelbrot"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/Original formula from quick-dudley at fractalforums.com\n\/\/http:\/\/www.fractalforums.com\/3d-fractal-generation\/another-shot-at-the-holy-grail\/\n\n#define time iGlobalTime\n#define size iResolution\n\nvec3 C;\n\nfloat DE(in vec3 p){\n\tfloat dr=1.0,r=length(p);\n\tfor (int n = 0; n < 10; n++) if(r<2000.0){\n\t\tdr = dr * r * 2.0; \n\t\tp=vec3(p.x*p.x-2.0*p.y*p.z,2.0*p.x*p.y+p.z*p.z,-2.0*p.x*p.z+p.y*p.y)+C;\n\t\tr = length(p);\n\t}\n\treturn min(log(r) * (r-1.0) \/ dr,.8);\n}\n\nfloat rnd(vec2 c){return fract(sin(dot(vec2(1.317,19.753),c))*413.7972);}\nfloat rndStart(vec2 fragCoord){\n\treturn 0.5+0.5*rnd(fragCoord.xy+vec2(time*217.0));\n}\nfloat shadao(vec3 ro, vec3 rd, float px, vec2 fragCoord){\/\/pretty much IQ's SoftShadow\n\tfloat res=1.0,d,t=2.0*px*rndStart(fragCoord);\n\tfor(int i=0;i<4;i++){\n\t\td=max(px,DE(ro+rd*t)*1.5);\n\t\tt+=d;\n\t\tres=min(res,d\/t+t*0.1);\n\t}\n\treturn res;\n}\nvec3 Sky(vec3 rd){\/\/what sky??\n\treturn vec3(0.5+0.5*rd.y);\n}\nvec3 L;\nvec3 Color(vec3 ro, vec3 rd, float t, float px, vec3 col, bool bFill, vec2 fragCoord){\n\tro+=rd*t;\n\tfloat d=DE(ro);\n\tvec2 e=vec2(px*t,0.0);\n\tvec3 dn=vec3(DE(ro-e.xyy),DE(ro-e.yxy),DE(ro-e.yyx));\n\tvec3 dp=vec3(DE(ro+e.xyy),DE(ro+e.yxy),DE(ro+e.yyx));\n\tvec3 N=(dp-dn)\/(length(dp-vec3(d))+length(vec3(d)-dn));\n\tvec3 R=reflect(rd,N);\n\tvec3 lc=vec3(1.0,0.9,0.8),sc=vec3(0.9,0.5,0.4),rc=Sky(R);\n\tfloat sh=clamp(shadao(ro,L,px*t,fragCoord)+0.2,0.0,1.0);\n\tsh=sh*(0.5+0.5*dot(N,L))*exp(-t*0.125);\n\tvec3 scol=sh*lc*(sc+rc*pow(max(0.0,dot(R,L)),4.0));\n\tif(bFill)d*=0.2;\n\tcol=mix(scol,col,clamp(d\/(px*t),0.0,1.0));\n\treturn col;\n}\nmat3 lookat(vec3 fw){\n\tfw=normalize(fw);vec3 rt=normalize(cross(fw,vec3(0.0,1.0,0.0)));return mat3(rt,cross(rt,fw),fw);\n}\nvec3 Julia(float t){\n\tt=mod(t,7.0);\n\tif(t<1.0)return vec3(-2.0,0.0,0.0);\n\tif(t<2.0)return vec3(0.0,-.64,-1.52);\n\tif(t<3.0)return vec3(-0.72);\n\tif(t<4.0)return vec3(-0.96,0.16,-0.6);\n\tif(t<5.0)return vec3(0.4,-1.06,-2.0);\n\tif(t<6.0)return vec3(-0.2,-0.48,-1.52);\n\treturn vec3(-1.54,0.06,0.22);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat px=0.5\/size.y;\n\tL=normalize(vec3(0.4,0.8,-0.6));\n\tfloat tim=time*0.5;\n\t\n\tvec3 ro=vec3(cos(tim*1.3),sin(tim*0.7),sin(tim))*3.0;\n\tvec3 rd=lookat(vec3(-0.1)-ro)*normalize(vec3((2.0*fragCoord.xy-size.xy)\/size.y,3.0));\n\t\/\/ro=eye;rd=normalize(dir);\n\t\n\tC=mix(Julia(tim-1.0),Julia(tim),smoothstep(0.0,1.0,fract(tim)*5.0));\n\t\n\tfloat t=DE(ro)*rndStart(fragCoord),d=0.0,od=10.0;\n\tvec3 edge=vec3(-1.0);\n\tbool bGrab=false;\n\tvec3 col=Sky(rd);\n\tfor(int i=0;i<78;i++){\n\t\tt+=d*0.2;\n\t\td=DE(ro+rd*t);\n\t\tif(d>od){\n\t\t\tif(bGrab && od<px*t && edge.x<0.0){\n\t\t\t\tedge=vec3(edge.yz,t-od);\n\t\t\t\tbGrab=false;\n\t\t\t}\n\t\t}else bGrab=true;\n\t\tod=d;\n\t\tif(t>1000.0 || d<0.00001)break;\n\t}\n\tbool bFill=false;\n\td*=0.2;\n\tif(d<px*t && t<1000.0){\n\t\tif(edge.x>0.0)edge=edge.zxy;\n\t\tedge=vec3(edge.yz,t);\n\t\tbFill=true;\n\t}\n\tfor(int i=0;i<3;i++){\n\t\tif(edge.z>0.0)col=Color(ro,rd,edge.z,px,col,bFill,fragCoord);\n\t\tedge=edge.zxy;\n\t\tbFill=false;\n\t}\n\tfragColor = vec4(2.0*col,1.0);\n}\n","name":"","description":"","type":"image"},{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define bps 4.5\nfloat nofs(float n){\/\/the song's \"random\" ring\n    n=mod(n,8.0);\n    if(n<1.0)return 0.0;\n    if(n<2.0)return 1.0;\n    if(n<3.0)return 1.0;\n    if(n<4.0)return -3.0;\n    if(n<5.0)return 0.0;\n    if(n<6.0)return -3.0;\n    if(n<7.0)return -3.0;\n    return -7.0;\n}\nfloat scale(float note){\/\/throws out dissonant tones\n\tfloat n2=mod(note,12.0);\n\t\/\/if((n2==1.0)||(n2==3.0)||(n2==6.0)||(n2==8.0)||(n2==10.0))note=-100.0;\/\/major\n\tif((n2==1.0)||(n2==4.0)||(n2==6.0)||(n2==9.0)||(n2==11.0))note=-100.0;\/\/minor\n\tif(note>84.0)note=84.0+n2;\n\treturn note;\n}\n#define TAO 6.283185\n\/\/ note number to frequency  from https:\/\/www.shadertoy.com\/view\/ldfSW2\nfloat ntof(float n){if(n<12.0)return 0.0;return 440.0 * pow(2.0, (n - 67.0) \/ 12.0);}\nfloat ssaw(float t){return 4.0*abs(fract(t)-0.5)-1.0;}\nfloat rnd(float t){return fract(sin(t*341.545234)*1531.2341);}\nfloat srnd(float t){float t2=fract(t);return mix(rnd(floor(t)),rnd(floor(t+1.0)),t2*t2*(3.0-2.0*t2));}\nfloat harm(float x,float ps,float hm,float sp){\/\/phase shift, harmonics, spacing\n\tfloat a2=0.0,s=1.0;\n\tfor(int i=0;i<10;i++){\n\t\tif(i<int(hm)){\n\t\t\ta2+=sin((x*s+ps)*TAO)\/s;\n\t\t\ts+=sp;\n\t\t}\n\t}\n\treturn a2*0.5;\n}\nvec2 inst(float n,float t,float bt,float pan,int i){\n\tfloat f=ntof(scale(n)),ps=0.0,hm=0.0,sp=1.0;\n\tif(f<12.0)return vec2(0.0);\t\n\tif(i==0){ps=pow(bt*0.5,0.05);hm=9.0;}\n\telse if(i==1){ps=bt*0.5;hm=4.0;sp=0.5;}\n\telse if(i==9){ps=bt*rnd(t);hm=10.0-4.0*bt;f*=0.5+0.5*rnd(t);}\n\tfloat a=harm(f*t,ps,hm,sp);\n\ta*=exp(-bt*(0.8+float(i)))*min(min(bt,2.0-bt)*100.0,1.0)*60.0\/n;\n\treturn vec2(a*(1.0-pan),a*pan);\n}\nvec2 inst2(float nn,float no,float of,float t,float bt,float pan,int i){\n\treturn inst(nn+of,t,bt,pan,i)+inst(no+of,t,bt+1.0,pan,i);\/\/plays new note and tail of last note\n}\nvec2 mainSound(float time)\n{\n\tfloat tim=time*bps,b=floor(tim);\n\tfloat t0=fract(tim),t1=mod(tim,2.0)*0.5,t2=mod(tim,4.0)*0.25;\n\tfloat n2=nofs(b*0.0625)+nofs(b*0.125)+nofs(b*0.25);\n\tfloat n1=n2+nofs(b*0.5),n0=n1+nofs(b);\n\tb-=1.0;\/\/go back in time to finish old notes\n\tfloat n5=nofs(b*0.0625)+nofs(b*0.125)+nofs(b*0.25);\n\tfloat n4=n5+nofs(b*0.5),n3=n4+nofs(b);\n\tvec2 a0=inst2(n0,n3,72.0,time,t0,0.5,0);\n\tb-=1.0;\n\tn5=nofs(b*0.0625)+nofs(b*0.125)+nofs(b*0.25);\n\tn4=n5+nofs(b*0.5);\n\tvec2 a1=inst2(n1,n4,60.0,time,t1,1.0,0);\n\tvec2 a1h=inst2(n1,n4,65.0,time,t1,1.0,0);\n\tb-=2.0;\n\tn5=nofs(b*0.0625)+nofs(b*0.125)+nofs(b*0.25);\n\tvec2 a2=inst2(n2,n5,48.0,time,t2,0.25,0);\n\tvec2 a2h=vec2(0.0);\/\/inst2(n2,n5,53.0,time,t2,0.25,0);\n\tvec2 a1hb=inst(n1+64.0,time,t1,0.0,1)*2.0;\n\tvec2 v=0.25*(a0+a1+a1h+a1hb+a2+a2h);\n\treturn clamp(v,-1.0,1.0);\n}\n","name":"","description":"","type":"sound"}]}}