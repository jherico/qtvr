{"Shader":{"ver":"0.1","info":{"id":"4ls3Rj","date":"1423352583","viewed":686,"name":"Sine Dance","username":"hamoid","description":"Learning...","likes":0,"published":3,"flags":0,"tags":["2d","sine"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/*\n\tAttempt to port http:\/\/hamoid.tumblr.com\/post\/103908919889\/sine-dance\n\tto glsl. One of my first shader experiments.\n*\/\n#define PI 3.1415926535897932384626433832795\n\nfloat psin(float a, float e) {\n  float b = (sin(a) + 1.0) \/ 2.0;\n  return pow(b, e) * 2.0 - 1.0;\n}\nfloat thing(float arms, vec2 p, float rot, float sz, float k1, float k2, float k3) {\n    float fa = iGlobalTime * 4.0;\n    float a = atan(p.y, p.x);\n    float d = sz * sin(a * arms) * 7.0;\n    d = d + 0.02 * sin(5.4 + d * 16.0 + a * arms);\n    d = d + 0.045 * psin(fa + k1 * a + k2 * psin(a, 5.0) + k3, 5.0);\n    return smoothstep(d, d+0.30, length(p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p = fragCoord.xy \/ iResolution.xy;\n    \n    vec3 c = vec3(0.1059, 0.0824, 0.1294);\n    \n    if(thing(5.0, p - vec2(0.52, 0.26), -0.08, 0.01, 0.0, 1.0, 4.1) < 0.5) {\n        c = vec3(0.8314, 0.1176, 0.2706);\n    }\n    if(thing(5.0, p - vec2(0.70, 0.70), -0.10, 0.011, 1.0, 0.0, 0.1) < 0.5) {\n        c = vec3(0.7098, 0.6745, 0.0039);\n    }\n    if(thing(5.0, p - vec2(0.26, 0.67),  0.20, 0.009, 1.0, 0.0, PI\/2.0) < 0.5) {\n        c = vec3(0.9255, 0.7294, 0.0353);\n    }\n    \n\tfragColor = vec4(c, 1.0);\n}","name":"","description":"","type":"image"}]}}