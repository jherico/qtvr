{"Shader":{"ver":"0.1","info":{"id":"MssGW4","date":"1370990296","viewed":4506,"name":"Iterations - guts","username":"iq","description":"Something looking organic, a bit translucent and wormy. Perhaps gross and disgusting? Based on noisy iterations again.","likes":15,"published":3,"flags":0,"tags":["procedural","2d","noise"],"hasliked":0},"renderpass":[{"inputs":[{"id":10,"src":"\/presets\/tex09.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/#define PROCEDURAL\n\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0;\n    return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n               mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\n}\n\nconst mat2 ma = mat2( 0.8, -0.6, 0.6, 0.8 );\n\nvec2 map( vec2 p )\n{\n\tfloat a  = 0.7*noise(p)*6.2831*6.0; p = ma*p*3.0;\n\t      a += 0.3*noise(p)*6.2831*6.0;\n\t\n\ta += 0.2*iGlobalTime;\n\t\n\treturn vec2( cos(a), sin(a) );\n}\n\nvec3 texture( in vec2 p )\n{\n\tfloat f = 0.0;\n\t\n\tvec2 q = p;\n\n\tp *= 32.0;\n    f += 0.500*noise( p ); p = ma*p*2.02;\n    f += 0.250*noise( p ); p = ma*p*2.03;\n    f += 0.125*noise( p ); p = ma*p*2.01;\n\tf \/= 0.875;\n\t\n\tvec3 col = 0.53 + 0.47*sin( f*4.5 + vec3(0.0,0.65,1.1) + 0.6 );\n\t\n\tcol *= 0.7*clamp( 1.65*noise( 16.0*q.yx ), 0.0, 1.0 );\n\t\n    return col;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy \/ iResolution.xy;\n\tvec2 uv = -1.0 + 2.0*p;\n\tuv.x *= iResolution.x \/ iResolution.y;\n    vec2 or = uv;\n\t\n\tfloat acc = 0.0;\n\tvec3  col = vec3(0.0);\n\tfor( int i=0; i<64; i++ )\n\t{\n\t\tvec2 dir = map( uv );\n\t\t\n\t\tfloat h = float(i)\/64.0;\n\t\tfloat w = 1.0-h;\n\t\t#ifdef PROCEDURAL\n\t\tvec3 ttt = w*texture(0.5*uv );\n\t\t#else\n\t\tvec3 ttt = w*texture2D( iChannel0, 0.5*uv  ).xyz;\n\t\t#endif\n\t\tttt *= mix( 0.8*vec3(0.4,0.55,0.65), vec3(1.0,0.9,0.8), 0.5 + 0.5*dot( dir, -vec2(0.707) ) );\n\t\t\n\t\tcol += w*ttt;\n\t\tacc += w;\n\t\t\n\t\tuv += 0.015*dir;\n\t}\n\tcol \/= acc;\n    \n\n\tfloat ll = length(uv-or);\n\tvec3 nor = normalize( vec3(dFdx(ll), 4.0\/iResolution.x, dFdy(ll) ) );\n\n\tfloat tex = texture2D(iChannel0,4.0*uv + 4.0*p).x;\n\tvec3 bnor = normalize( vec3(dFdx(tex), 400.0\/iResolution.x, dFdy(tex)) );\n\tnor = normalize( nor + 0.5*normalize(bnor) );\n\n\tvec2 di = map( uv );\n\n\tcol *= 0.8 + 0.2*dot( di, -vec2(0.707) );\n\tcol *= 2.5;\n\tcol += vec3(1.0,0.5,0.2)*0.15*dot(nor,normalize(vec3(0.8,0.2,-0.8)) );\n\tcol += 0.12*pow(nor.y,16.0);\n\tcol += ll*vec3(1.0,0.8,0.6)*col*0.5*(1.0-pow(nor.y,1.0));\n\tcol *= 0.5 + ll;\n\tcol *= 0.2 + 0.8*pow( 4.0*p.x*(1.0-p.x), 0.25 );\n\n\tfragColor = vec4( col, 1.0 );\n}\n","name":"","description":"","type":"image"}]}}