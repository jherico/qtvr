{"Shader":{"ver":"0.1","info":{"id":"Xt2XD3","date":"1446935823","viewed":355,"name":"Romanian Sinuses","username":"Freelancer2000","description":"Based on Epicbasol's Rainbow Laser Beam, which I'd like to thank in advance ^_^","likes":0,"published":3,"flags":0,"tags":["effect","sinus","funky","romania"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"vec3 Cord(in vec2 fragCoord, in vec3 colour, in float hoffset, in float hscale, in float vscale, in float timescale)\n{\n    float glow = 0.1 * iResolution.y;\n    float twopi = 6.28318530718;\n    float curve = 1.0 - abs(fragCoord.y - (sin(mod(fragCoord.x * hscale \/ 100.0 \/ iResolution.x * 1000.0 + iGlobalTime * timescale + hoffset, twopi)) * iResolution.y * 0.25 * vscale + iResolution.y \/ 2.0));\n    float i = clamp(curve, 0.0, 1.0);\n    i += clamp((glow + curve) \/ glow, 0.0, 1.0) * 0.4 ;\n    return i * colour;\n}\n\n\nvec3 InverseMuzzle(in vec2 fragCoord, in float timescale)\n{\n    float theta = atan(iResolution.y \/ 10.0 - fragCoord.y, iResolution.x - fragCoord.x + 1.13 * iResolution.x);\n\treturn vec3(theta);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float timescale = 4.0;\n\tvec3 c = vec3(0, 0, 0);\n    c += Cord(fragCoord, vec3(1.0, 1.0, 0), 0.7934 + 1.0 * 10.0, 10.0, 0.80, -10.0);\n    c += Cord(fragCoord, vec3(1.0, 0.0, 0.0), 0.645 + 1.0 + sin(iGlobalTime) * 1.0, 10.5, 0.40, -10.3);\n    c += Cord(fragCoord, vec3(0.0, 0.0, 1.0), 0.735 + 1.0 * 30.0, 10.3, 0.20, -8.0 * timescale);\n\n    c += clamp(InverseMuzzle(fragCoord, timescale), 0.0, 0.1);\n\tfragColor = vec4(c.r, c.g, c.b, 1.0);\n}\n","name":"","description":"","type":"image"}]}}