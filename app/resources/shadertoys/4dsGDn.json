{"Shader":{"ver":"0.1","info":{"id":"4dsGDn","date":"1367507790","viewed":614,"name":"Chromatic Aberration Filter","username":"4rknova","description":"A simple chromatic aberration effect.","likes":11,"published":3,"flags":0,"tags":["interlaced","chromatic","aberration"],"hasliked":0},"renderpass":[{"inputs":[{"id":11,"src":"\/presets\/vid00.ogv","ctype":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ by Nikos Papadopoulos, 4rknova \/ 2014\n\/\/ Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec4 c0 = texture2D(iChannel0,fragCoord.xy\/iResolution.xy);\n\t\n\tif (mod(floor(fragCoord.y),2.) > 0.)\n\t{\n\t\tfloat l = dot(c0.xyz, vec3(.2126, .7152, .0722));\n\t\tfragColor = l * c0;\n\t\treturn;\n\t}\n\t\n\tfloat t = pow((((1. + sin(iGlobalTime * 10.) * .5)\n\t\t *  .8 + sin(iGlobalTime * cos(fragCoord.y) * 41415.92653) * .0125)\n\t\t * 1.5 + sin(iGlobalTime * 7.) * .5), 5.);\n\t\n\tvec4 c1 = texture2D(iChannel0, fragCoord.xy\/(iResolution.xy+vec2(t * .2,.0)));\n\tvec4 c2 = texture2D(iChannel0, fragCoord.xy\/(iResolution.xy+vec2(t * .5,.0)));\n\tvec4 c3 = texture2D(iChannel0, fragCoord.xy\/(iResolution.xy+vec2(t * .9,.0)));\n\t\n\tfragColor = vec4(c3.r, c2.g, c1.b, 1.);\n}","name":"","description":"","type":"image"}]}}