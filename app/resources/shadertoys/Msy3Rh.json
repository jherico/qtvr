{"Shader":{"ver":"0.1","info":{"id":"Msy3Rh","date":"1453228033","viewed":94,"name":"spHypno","username":"BiiG","description":"Procedural sphere test","likes":1,"published":3,"flags":0,"tags":["raymarchingspheresinus"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/\n\/\/ https:\/\/oneoverzerosite.wordpress.com\/\n\/\/\n\nfloat SinSphereDistanceField( in vec4 sphere, in vec3 point )\n{\n    vec3 vDelta = sphere.xyz - point;\n    float dist = dot ( vDelta, vDelta );\n    dist = sqrt ( dist );\n    float normalizedIn = (sphere.w - dist) \/ dist;\n    return sin(max(normalizedIn,0.0)*3.14*0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    \n    \/\/ Spheres equation: xyz as position and w as radius\n    vec4 sphereR = vec4(0.0,0.0,10.0,3.0);\n    vec4 sphereG = vec4(0.0,0.0,15.0,4.0);\n    vec4 sphereB = vec4(0.0,0.0,18.0,4.0);\n    \/\/ Spheres color\n    vec3 colorR  = vec3( 0.9, 0.7, 0.0);\n    vec3 colorG  = vec3( 0.5,-0.6, 0.0);\n    vec3 colorB  = vec3( 0.3, 0.5, 0.0);\n    \n    \/\/ Compute the per pixel ray\n    vec3 ray = vec3(uv*2.0-1.0,5.0); \/\/ xy from [0;1] to [-1;1], and set z to get some good lookin fov\n    ray = ray * vec3(16.0,9.0,1.0);  \/\/ Preserve aspect ratio\n    ray = normalize(ray);\t\t\t\n        \n    \n    \/\/ Add some random movement\n    sphereR.w *= iGlobalTime;\n    sphereG.w *= iGlobalTime;\n    sphereG.x += sin(iGlobalTime*3.3)*0.2;\n    sphereG.y += cos(iGlobalTime*3.3)*0.2;\n    sphereB.w *= iGlobalTime;\n    sphereB.y -= cos(iGlobalTime);\n    sphereB.x += sin(iGlobalTime);\n    \n    \/\/ Ray marching\n    vec3 sum = vec3(0.2,0.2,0.2);\n    for (float i=0.0; i<20.0; i+=0.33)\n    {\n        vec3 pos = ray * i;\n        sum.rgb += SinSphereDistanceField (sphereR,pos) * colorR;\n        sum.rgb += SinSphereDistanceField (sphereG,pos) * colorG;\n        sum.rgb += SinSphereDistanceField (sphereB,pos) * colorB;\n    }\n            \n        \n\tfragColor = vec4((sum*0.1+1.0),1.0);\n    \n    \/\/ Worst tone mapping ever seen\n    fragColor *= 0.33;    \n}","name":"","description":"","type":"image"}]}}