{"Shader":{"ver":"0.1","info":{"id":"MsV3zR","date":"1453117820","viewed":131,"name":"pyramid op","username":"FabriceNeyret2","description":"cascading operations on image, e.g., for normalization of the video values.<br\/>NB: draft. I should align pixels to video size.","likes":2,"published":3,"flags":34,"tags":["filter","pyramid","cascade"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"void mainImage( out vec4 O,  vec2 U )\n{\n    vec4 sol = texture2D(iChannel0, vec2(1));                 \/\/ ultimate cascaded value\n    \n\tO = texture2D(iChannel0, U \/= iResolution.xy);\n\n    \/\/ --- your normalization operation here\n    if (U.y>U.x)  O \/= sol;     \/\/ using max\n \/\/ if (U.y>U.x)  O *= .5\/sol;  \/\/ using mean\n\n    \n    \n    if (max(U.x,1.-U.y)<.1) O = texture2D(iChannel0, vec2(1)); \/\/ display measured value\n}","name":"","description":"","type":"image"},{"inputs":[{"id":31,"src":"\/presets\/webcam.png","ctype":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ --- your pyramidal operation here \nvec4 op (vec4 t00, vec4 t10, vec4 t01, vec4 t11) {\n \/\/ return (t00+t10+t01+t11) \/ 4.;           \/\/ average\n    return max(max(t00,t10),max(t01,t11));   \/\/ max\n \/\/ return min(min(t00,t10),min(t01,t11));   \/\/ min\n}\n\n#define T1(d) texture2D(iChannel1, U   +d\/R)                    \/\/ source image\n\/\/#define T0(d) texture2D(iChannel0, U-V +d\/R)\n#define T0(d) texture2D(iChannel0, U\/(2.-V)-V +d\/R*sign(1.-U))  \/\/ prev cascade level\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    vec2 R = iResolution.xy, I=vec2(1,0), V;\n    U *= 2.\/R;\n    V = step(2.,exp2(U));\n    O = V.x+V.y > 0.\n        ? op( T0(I.yy),T0(I),T0(I.yx),T0(I.xx) )   \/\/ texture2D(iChannel0, U-1.);       \n        : op( T1(I.yy),T1(I),T1(I.yx),T1(I.xx) ) ; \/\/ texture2D(iChannel1, U   ) \n}","name":"","description":"","type":"buffer"}]}}