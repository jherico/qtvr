{"Shader":{"ver":"0.1","info":{"id":"MlSGzR","date":"1426633067","viewed":706,"name":"Bokeh Interpolation","username":"paniq","description":"Interpolating four points as overlapping circles with a radius of 1. The falloff is squared to remove the circular discontinuity. Bottom half shows derivative of linear \/ bokeh function.","likes":3,"published":3,"flags":0,"tags":["mattdamon"],"hasliked":0},"renderpass":[{"inputs":[{"id":16,"src":"\/presets\/tex11.png","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"float m;\n\nconst vec2 texsize = vec2(64.0);\nvec3 fetch(ivec2 uv) {\n    return texture2D(iChannel0, (vec2(uv) + 0.5) \/ texsize).rgb;\n}\n\nvec4 bokeh_interpolants(vec2 f) {\n    vec2 sp = f*f;\n    vec2 sq = 1.0-f;\n    sq = sq*sq;\n    vec4 sd = vec4(sp.x+sp.y, sq.x+sp.y, sp.x+sq.y, sq.x+sq.y);\n    vec4 a = max(vec4(0.0),1.0-sqrt(sd));\n    a *= a;\n    float w = a.x+a.y+a.z+a.w;\n    return a\/w;\n}\n\nvec3 sample(vec2 uv) {\n    vec2 suv = uv + iGlobalTime;\n    ivec2 ruv = ivec2(floor(suv));\n    \n    vec2 tuv = suv-0.5;\n    vec2 n = floor(tuv);\n    vec2 f = fract(tuv);\n    \n    ivec2 iuv = ivec2(n);\n    vec3 total = vec3(0.0);\n\n    vec4 a = bokeh_interpolants(f);    \n    total += fetch(iuv + ivec2(0,0)) * a.x;\n    total += fetch(iuv + ivec2(1,0)) * a.y;\n    total += fetch(iuv + ivec2(0,1)) * a.z;\n    total += fetch(iuv + ivec2(1,1)) * a.w;\n    \n    \/\/return ((uv.x+uv.y-m*8.0) < 0.0)?fetch(ruv):(total\/w);\n    return ((uv.x+uv.y-m*8.0) < 0.0) ? texture2D(iChannel0,suv\/texsize).rgb : total;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x \/ iResolution.y;\n    uv *= 8.0;\n    m =( iMouse.x \/ iResolution.x)*2.0-1.0;\n    \n    fragColor = (uv.y > -1.0)?vec4(sample(uv),1.0):vec4(0.1*fwidth(sample(uv))*iResolution.x,1.0);\n}","name":"","description":"","type":"image"}]}}