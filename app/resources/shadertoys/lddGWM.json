{"Shader":{"ver":"0.1","info":{"id":"lddGWM","date":"1450157891","viewed":192,"name":"Holiday lights","username":"ap","description":"Made something while I was bored. Reminds me of Indian Diwali lights.","likes":5,"published":3,"flags":0,"tags":["lights","holiday"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\n\nfloat rand(float n)\n{\n    return fract(sin(n) * 43758.5453123);\n}\n\nvec2 rand2(in vec2 p)\n{\n    return fract(vec2(sin(p.x * 591.32 + p.y * 154.077), cos(p.x * 391.32 + p.y * 49.077)));\n}\n\n#define v4White vec4(1.0, 1.0, 1.0, 1.0)\n#define v4Black vec4(0.0, 0.0, 0.0, 1.0)\n#define v4Grey  vec4(0.5, 0.5, 0.5, 1.0)\n\n\nvec3 moonImage(vec2 loc)\n{\n    float moonRad = 0.3;\n    vec2 moonDiffVec = loc - vec2(0.0, 0.0);\n    float dist = length(moonDiffVec);\n    \n    return mix(\n    \tvec3(0.6, 0.6, 0.5),\n        vec3(0.0),\n        smoothstep(moonRad * 0.9, moonRad * 1.1, dist \/ moonRad));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord \/ iResolution.y;\n\n    vec2 freq = vec2(5.0, 15.0);\n    vec2 gap = vec2(1.0\/freq.x, 1.0\/freq.y);\n    vec2 jitterrad = vec2((0.02 + 0.02 * (1.-uv.y)) * gap.x , 0.01 * gap.y);\n    float ballrad = 0.2 * gap.y;\n\n    vec2 param_pos = uv - vec2(0.5);\n  \n    vec2 closest_center = floor(param_pos * freq + vec2(0.5)) \/ freq;\n    \n    vec3 color = vec3(\n        rand(closest_center.x * 379.0 + closest_center.y * 0.0 + 333.0),\n        rand(closest_center.x * 379.0 + closest_center.y * 0.0 + 796.0),\n        rand(closest_center.x * 379.0 + closest_center.y * 0.0 + 221.0));\n    \n    color = color \/ max(max(color.x, color.y), max(color.z, 0.1));\n    \n    color = mix(color, vec3(1.0, 1.0, 0.5), 0.25);\n        \n    float black_or_white = 0.5 + 0.5 * sin(\n        2.0 * 3.14159 * \n        (rand((closest_center.x + 347.0) * (closest_center.y + 7.0 * 129.0)) + iGlobalTime * 0.5));\n    \n    black_or_white = pow(black_or_white, 10.0);\n    \n    float near_bottom = pow(1.0-uv.y, 3.0);\n\n    closest_center = closest_center + jitterrad * 1.0 *\n        sin((iGlobalTime * 0.8 + rand2(closest_center)) * 6.28 +\n        sin((iGlobalTime * 0.2 + rand2(closest_center.yx)) * 6.28) +\n        sin((iGlobalTime * 0.5 + rand2(closest_center.xx * 93.0 + 127.0)) * 6.28)) +\n        vec2((0.2 * near_bottom * gap.x) * sin(2.0*iGlobalTime + 2. * 6.28 * rand(closest_center.x)), 0.0);\n\n    vec2 distvec = param_pos - closest_center;\n    distvec.x \/= (1.-black_or_white);\n    float dist = length(distvec); \n\n    float s = (dist * dist) \/ (ballrad * ballrad);\n\n    fragColor = mix(\n        mix(\n            vec4(color, 1.0), \n            v4Black, black_or_white), \n        mix(vec4(0.1,0.1,0.3,1.0), vec4(0.0,0.0,0.2,1.0), smoothstep(0.0,0.25,uv.y)), \n        smoothstep(ballrad*0.9, ballrad*1.1, dist));\n\n}","name":"","description":"","type":"image"}]}}