{"Shader":{"ver":"0.1","info":{"id":"ltsGz4","date":"1419434227","viewed":1714,"name":"llamels","username":"eiffie","description":"Creating the creatures evolution didn't dare dream of.","likes":30,"published":3,"flags":0,"tags":["zjoint"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/llamels by eiffie (Z joints)\n\/\/license: use at your own peril\n#define time iGlobalTime\n#define size iResolution\n\nfloat tim=time*5.0;\n\n\/* for reference since the rest of the code is messy here are the joint solvers\nvec3 jsolve( vec3 a, vec3 b, float l1, float l2, vec3 rt )\/\/from iq\n{\/\/single joint\n\tvec3 p=b-a,q=p*(0.5+0.5*(l1*l1-l2*l2)\/dot(p,p) );\n\treturn a+q+sqrt(max(0.0,l1*l1-dot(q,q)))*normalize(cross(p,rt));\n}\nvoid djsolve( vec3 a, vec3 b, vec3 l, vec3 rt, out vec3 j1, out vec3 j2 )\/\/mod of iq's\n{\/\/double joint\n\tfloat l2=(l.y+l.z)*sqrt(length(a-b)\/(l.x+l.y+l.z));\n\tvec3 p=b-a,q=p*(0.5+0.5*(l.x*l.x-l2*l2)\/dot(p,p));\n\tj1=a+q+sqrt(max(0.0,l.x*l.x-dot(q,q)))*normalize(cross(p,rt));\n\tp=b-j1;q=p*(0.5+0.5*(l.y*l.y-l.z*l.z)\/dot(p,p));\n\tj2=j1+q+sqrt(max(0.0,l.y*l.y-dot(q,q)))*normalize(cross(p,rt));\n}\nvoid zjsolve( vec3 j0, vec3 j3, vec3 l, vec3 rt, out vec3 j1, out vec3 j2 )\/\/mod of iq's\n{\/\/Z joint, faster version\n\tfloat lx2z=l.x\/(l.x+l.z),l2=l.y*lx2z;\/\/scale to ratio of l.x to l.z and solve first joint\n\tvec3 u=(j3-j0)*lx2z,q=u*(0.5+0.5*(l.x*l.x-l2*l2)\/dot(u,u));\n\tq+=sqrt(max(0.0,l.x*l.x-dot(q,q)))*normalize(cross(u,rt));\n\tj1=j0+q;j2=j3-q*(1.0-lx2z)\/lx2z;\/\/for j2 flip q and rescale to the length of l.z\n\n}*\/\n\nfloat smin(float a,float b,float k){float h=clamp(0.5+0.5*(b-a)\/k,0.0,1.0);return b+h*(a-b-k+k*h);}\/\/from iq\n\nfloat leg(vec3 p, vec3 j0, vec3 j3, vec3 l, vec4 r, vec3 rt){\/\/z joint with tapered legs\n\tfloat lx2z=l.x\/(l.x+l.z),h=l.y*lx2z;\n\tvec3 u=(j3-j0)*lx2z,q=u*(0.5+0.5*(l.x*l.x-h*h)\/dot(u,u));\n\tq+=sqrt(max(0.0,l.x*l.x-dot(q,q)))*normalize(cross(u,rt));\n\tvec3 j1=j0+q,j2=j3-q*(1.0-lx2z)\/lx2z;\n\tu=p-j0;q=j1-j0;\n\th=clamp(dot(u,q)\/dot(q,q),0.0,1.0);\n\tfloat d=length(u-q*h)-r.x-(r.y-r.x)*h;\n\tu=p-j1;q=j2-j1;\n\th=clamp(dot(u,q)\/dot(q,q),0.0,1.0);\n\td=min(d,length(u-q*h)-r.y-(r.z-r.y)*h);\n\tu=p-j2;q=j3-j2;\n\th=clamp(dot(u,q)\/dot(q,q),0.0,1.0);\n\treturn min(d,length(u-q*h)-r.z-(r.w-r.z)*h);\n}\n\nfloat DE(in vec3 p){\/\/this is discontinous and inaccurate :)\n\tconst vec3 rt=vec3(0.0,0.0,1.0);\t\n\tp.y-=sin(p.x*1.3+sin(p.z*0.7))*0.125+sin(p.x*0.2+sin(p.z*0.3));\/\/big cheat\n\tp.x-=tim*0.07;\n\tfloat dG=p.y+0.25;\n\tvec2 c=floor(p.xz);\n\tfloat sa=sin(c.x*2.0+c.y*4.5+tim*0.05)*0.15;\n\tp.xz=fract(p.xz)-vec2(0.5);\n\tfloat b=0.83-abs(p.z);\n\tp.xz+=vec2(0.125+sa,sa);\n\tfloat a=c.x+117.0*c.y+sign(p.x)*1.57+sign(p.z)*1.57+tim,ca=cos(a);\n\tvec3 j0=vec3(sign(p.x)*0.125,ca*0.01,sign(p.z)*0.05),j3=vec3(j0.x+sin(a)*0.1,max(-0.25+ca*0.1,-0.25),j0.z);\n\tfloat dL=leg(p,j0,j3,vec3(0.08,0.075,0.12),vec4(0.03,0.02,0.015,0.01),rt*sign(p.x));\n\tp.y-=0.03;\n\tfloat dB=(length(p.xyz*vec3(1.0,1.75,1.75))-0.14)*0.75;\n\ta=c.x+117.0*c.y+tim;ca=cos(a);sa*=0.4;\n\tj0=vec3(0.125,0.03+abs(ca)*0.03,ca*0.01),j3=vec3(0.3,0.07+ca*sa,sa);\n\tfloat dH=leg(p,j0,j3,vec3(0.075,0.075,0.06),vec4(0.03,0.035,0.03,0.01),rt);\n\tdB=smin(min(dL,dH),dB,clamp(0.04+p.y,0.0,1.0));\n\ta=max(abs(p.z),p.y)+0.05;\n\treturn min(min(dB,min(a,b)),dG);\n}\n\nfloat rnd(vec2 co){return fract(sin(dot(co,vec2(13.42,117.853)))*412.453);}\nfloat noyz(vec2 p){\n\tvec2 c=floor(p),f=fract(p),v=vec2(1.0,0.0);\n\treturn mix(mix(rnd(c),rnd(c+v.xy),f.x),mix(rnd(c+v.yx),rnd(c+v.xx),f.x),f.y);\n}\nvec3 mcol;\nfloat CE(vec3 p){\n\tfloat d=DE(p);\n\tfloat h=sin(p.x*1.3+sin(p.z*0.7))*0.125+sin(p.x*0.2+sin(p.z*0.3));\n\tp.y-=h;\n\tfloat dG=p.y+0.25;\n\tvec3 col=vec3(0.0);\n\tvec2 v;\n\tif(dG<0.01){\n\t\tcol=vec3(0.12,0.3,0.1)*(0.5+0.4*h);\n\t\tv=p.xz;\n\t}else{\/\/llamel\n\t\tif(dG>0.03){\n\t\t\tcol=vec3(0.9,0.4,0.3);\n\t\t}\n\t\tp.x-=tim*0.07;\n\t\tv=vec2(p.x,p.z);\n\t}\n\tfloat n=noyz(v*160.0);\n\tcol+=vec3(0.3,0.3,0.0)*n;\n\tmcol+=col;\n\treturn d-n*0.004;\n}\n\nfloat shadao(vec3 ro, vec3 rd, float px){\/\/pretty much IQ's SoftShadow\n\tfloat res=1.0,d,t=px*10.0;\n\tfor(int i=0;i<12;i++){\n\t\td=max(0.0,DE(ro+rd*t)*1.5);\n\t\tt+=d;\n\t\tif(d<px*2.5)return 0.0;\n\t\tres=min(res,22.0*d\/t);\n\t}\n\treturn res;\n}\n\n\nmat3 lookat(vec3 fw){\n\tfw=normalize(fw);vec3 rt=normalize(cross(fw,vec3(0.0,1.0,0.0)));return mat3(rt,cross(rt,fw),fw);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec3 ro=vec3(17.0,1.3,-1.5);\n\tvec3 dr=vec3((2.0*fragCoord.xy-size.xy)\/size.y,2.0);\n\tvec3 rd=normalize(dr);\n\tfloat px=2.5\/(size.y*dot(rd,dr));\n\trd=lookat(vec3(-0.25,-0.3,0.5))*rd;\n\tvec3 col=mix(vec3(1.0,0.7,0.3),vec3(0.3,0.7,1.0),0.5+rd.y);\n\tfloat t=DE(ro)*(0.5+0.5*rnd(fragCoord.xy)),d,dm=10.0,tm;\n\tfor(int i=0;i<48;i++){\n\t\tt+=d=DE(ro+rd*t);\n\t\tif(d<dm){dm=d;tm=t;}\n\t\tif(t>100.0 || d<0.00001)break;\n\t}\n\tdm=max(0.0,dm);\n\tif(dm<px*tm){\n\t\tro+=rd*tm;\n\t\tmcol=vec3(0.0);\n\t\tvec2 e=vec2(px*tm,0.0);\n\t\tfloat d0=CE(ro);\n\t\tvec3 dn=vec3(CE(ro-e.xyy),CE(ro-e.yxy),CE(ro-e.yyx));\n\t\tvec3 dp=vec3(CE(ro+e.xyy),CE(ro+e.yxy),CE(ro+e.yyx));\n\t\tmcol*=0.143;\n\t\tvec3 N=(dp-dn)\/(length(dp-vec3(d0))+length(vec3(d0)-dn));\n\t\tvec3 L=normalize(vec3(-0.11,0.74,0.19)),H=normalize(L-rd);\n\t\tfloat h=max(0.001,dot(N,H)),l=max(0.001,dot(N,L)),v=max(0.001,dot(N,-rd));\n\t\tfloat shad=0.0;\n\t\tif(l>0.001)shad=shadao(ro,L,px*tm);\n\t\tshad=clamp(shad+0.1,0.0,1.0);\n\t\tvec3 scol=(mcol*vec3(0.4+0.2*h,0.5,0.6-0.2*h) + (1.5-v)*pow( h, 6.0))*shad*l;\n\t\tcol=mix(clamp(scol,0.0,1.0),col,clamp(1.0-exp(-0.1*tm)+dm\/(px*tm),0.0,1.0));\n\t}\n\tfragColor=vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}