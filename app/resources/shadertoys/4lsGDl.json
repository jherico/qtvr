{"Shader":{"ver":"0.1","info":{"id":"4lsGDl","date":"1426175047","viewed":870,"name":"Very first plasma","username":"tesla","description":"My first shadertoy thing.","likes":1,"published":3,"flags":0,"tags":["oldschool","plasma"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ My first Shadertoy experiment\n\/\/ Algorithm copied from here: http:\/\/www.bidouille.org\/prog\/plasma\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    float pi = 3.141592;\n    \n    \/\/ v1\n    float v1 = sin(uv.x*5.0 + iGlobalTime);\n       \n    \/\/ v2\n    float v2 = sin(5.0*(uv.x*sin(iGlobalTime \/ 2.0) + uv.y*cos(iGlobalTime\/3.0)) + iGlobalTime);\n    \n    \/\/ v3\n    float cx = uv.x + sin(iGlobalTime \/ 5.0)*5.0;\n    float cy = uv.y + sin(iGlobalTime \/ 3.0)*5.0;\n    float v3 = sin(sqrt(100.0*(cx*cx + cy*cy)) + iGlobalTime);\n    \n    float vf = v1 + v2 + v3;\n    float r  = cos(vf*pi);\n    float g  = sin(vf*pi + 6.0*pi\/3.0);\n    float b  = cos(vf*pi + 4.0*pi\/3.0);\n\n    fragColor = vec4(r, g, b, 1.0);\n}\n","name":"","description":"","type":"image"}]}}