{"Shader":{"ver":"0.1","info":{"id":"Ms2SWW","date":"1357121825","viewed":2641,"name":"Deform - square tunnel","username":"iq","description":"A 2D square tunnel","likes":10,"published":3,"flags":0,"tags":["2d","planedeformation","deform","distance","metric"],"hasliked":0},"renderpass":[{"inputs":[{"id":1,"src":"\/presets\/tex00.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \/\/ normalized coordinates (-1 to 1 vertically)\n    vec2 p = (-iResolution.xy + 2.0*fragCoord.xy)\/iResolution.y;\n\n    \/\/ angle of each pixel to the center of the screen\n    float a = atan(p.y,p.x);\n    \n    \/\/ modified distance metric. Usually distance = (x\u00b2 + y\u00b2)^(1\/2). By replacing all the \"2\" numbers\n    \/\/ by 32 in that formula we can create distance metrics other than the euclidean. The higher the\n    \/\/ exponent, then more square the metric becomes. More information here:\n    \n    \/\/ http:\/\/en.wikipedia.org\/wiki\/Minkowski_distance\n    \n    float r = pow( pow(p.x*p.x,16.0) + pow(p.y*p.y,16.0), 1.0\/32.0 );\n    \n    \/\/ index texture by angle and radious, and animate along radius    \n    vec2 uv = vec2( 0.5\/r + 0.5*iGlobalTime,\n                    a\/3.1416 );\n\n    \/\/ fecth color and darken in the center\n    vec3 col =  texture2D( iChannel0, uv ).xyz * r;\n\n    fragColor = vec4( col, 1.0 );\n}\n","name":"","description":"","type":"image"}]}}