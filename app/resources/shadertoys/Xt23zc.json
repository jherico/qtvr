{"Shader":{"ver":"0.1","info":{"id":"Xt23zc","date":"1431734825","viewed":695,"name":"Hyperbolic Scaling","username":"NBickford","description":"This texture apparently shrinks endlessly on one axis, while stretching on the other - and somehow loops every three seconds. Try to figure out how it's done before looking at the code on the right.<br\/>Additionally, this can be done with < 200 characters!","likes":3,"published":3,"flags":0,"tags":["2d","opart","15tc"],"hasliked":0},"renderpass":[{"inputs":[{"id":28,"src":"\/presets\/tex15.png","ctype":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/1.5TC challenge version - is it possible to do better? Currently 195 characters, with tons of illegal operations.\n\/*\n#define p exp2(fract(iDate.w\/3.)+float(i))\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    for(int i=-9;i<9;i++){\n        fragColor+=min(p,1.\/p)*texture2D(iChannel0,fragCoord*.004*vec2(1.\/p,p))\/3.;\n    }\n}\n*\/\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\/\/vec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec2 uv=(fragCoord.xy-iResolution.xy*0.5)\/iResolution.x+vec2(0.0,iResolution.y\/iResolution.x*0.5);\n    uv*=4.0;\n    \/\/uv=max(uv,0.01);\n    \n    \/\/float t=iGlobalTime+1.0;\n    \/\/uv.y=uv.y*t;\n    \/\/uv.x=uv.x\/t;\n    \/\/fragColor=vec4(uv.x,uv.y,0,1.0);\n    \/\/fragColor=texture2D(iChannel0,mod(uv,1.0));\n\t\/\/fragColor = vec4(uv,0.5+0.5*sin(iGlobalTime),1.0);\n    \n    float k=2.0;\n\t\/\/float nx=log(pow(1.5,-iGlobalTime)*uv.x)\/log(2.0);\n    \/\/float ny=uv.y*uv.x;\n    float t=mod(iGlobalTime\/3.0,1.0);\n    float ts=0.3;\n    \n    vec3 col=vec3(0.0);\n    float tot=0.0;\n    for(int i=-9;i<=9;i++){\n        float py=pow(k,t+float(i));\n        float px=pow(k,t+float(i));\n        float nx=uv.x\/px;\n    \tfloat ny=uv.y*py;\n        float sc=pow(2.0,-abs(float(i)+t));\n        col+=sc*texture2D(iChannel0,mod(vec2(nx,ny),1.0),1.0).rgb;\n        tot+=sc;\n    }\n    \n    col=col\/tot;\n    \n    fragColor=vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}