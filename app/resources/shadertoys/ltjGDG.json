{"Shader":{"ver":"0.1","info":{"id":"ltjGDG","date":"1432137355","viewed":689,"name":"Simple Sphere Texture Map","username":"ddddddddd","description":"For reference. Please mess around with the code and do whatever you want with it.","likes":1,"published":3,"flags":0,"tags":["simple","sphere"],"hasliked":0},"renderpass":[{"inputs":[{"id":1,"src":"\/presets\/tex00.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ simple sphere cheat map.\n\/\/ dean alex\n\n\n\nfloat radius = 0.25;\nfloat focal = 0.5;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    \/\/----- setup -----\n    float aspect = iResolution.x \/ iResolution.y;\n    float Px = iMouse.x \/ iResolution.x * aspect;\n    float Py = iMouse.y \/ iResolution.y;\n    \n    vec2 uv = fragCoord.xy \/ iResolution.xy;\n    \n    float tx = uv.s * aspect;\n    float ty = uv.t;\n    \n    \n    \n    \/\/----- get coordinates of texture -----\n    float dx = tx - Px;\n    float dy = ty - Py;\n    float dis = sqrt( dx*dx + dy*dy );\n    \n    if( dis > radius ){ \/\/ piexl is outside boundary of sphere. stop here\n        fragColor = vec4(0.0,0.0,0.0,1.0);\n        return;\n    }\n    \n    \n    \/\/ width of radius at y\n    float rad_w = sqrt( radius*radius - dy*dy );\n    float warp_x = dx \/ rad_w;\n    \n    \/\/ height of radius at x\n    float rad_h = sqrt( radius*radius - dx*dx );\n    float warp_y = dy \/ rad_h;\n    \n    \/\/ warp the values with a cos curve to approximate the angle of the edges\n    warp_x = warp_x \/ (cos( dx * 3.14159265358979586 ));\n    warp_y = warp_y \/ (cos( dy * 3.14159265358979586 ));\n    \n    \n    \n    \/\/----- shading -----\n    float dismf = dis \/ radius;\n    dismf = 1.0 - dismf;\n    \n    \n    vec4 tex = texture2D( iChannel0, vec2( warp_x * focal + Px, warp_y * focal + Py ) );\n    tex.rgb *= (dismf * 0.9) + 0.1;\n    \n    \/\/ specular\n    dismf = dismf * dismf * dismf * dismf * dismf * dismf;\n    tex.rgb += dismf;\n        \n    fragColor = tex;\n}\n","name":"","description":"","type":"image"}]}}