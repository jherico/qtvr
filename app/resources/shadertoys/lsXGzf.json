{"Shader":{"ver":"0.1","info":{"id":"lsXGzf","date":"1375672030","viewed":1370,"name":"Input - Keyboard","username":"iq","description":"An example showing how to use the keyboard input. First row of texels contain the current state of the 256 keys. The second row contains a toggle for every key. Thid contains Keypress. Texel positions correspond to ASCII codes. Press arrow keys to test.","likes":15,"published":3,"flags":16,"tags":["2d","keyboard"],"hasliked":0},"renderpass":[{"inputs":[{"id":33,"src":"\/presets\/tex00.jpg","ctype":"keyboard","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"const float KEY_LEFT  = 37.5\/256.0;\nconst float KEY_UP    = 38.5\/256.0;\nconst float KEY_RIGHT = 39.5\/256.0;\nconst float KEY_DOWN  = 40.5\/256.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy \/ iResolution.xy;\n\n    float f = texture2D( iChannel0, vec2(uv.x,0.0) ).x;\n    vec3 col = vec3(f);\n\n    uv = -1.0 + 2.0*uv;\t\n\tuv.x *= iResolution.x\/iResolution.y;\n\n    \/\/ state\n    col = mix( col, vec3(1.0,0.0,0.0), \n        (1.0-smoothstep(0.3,0.31,length(uv-vec2(-0.75,0.0))))*\n        (0.3+0.7*texture2D( iChannel0, vec2(KEY_LEFT,0.5\/3.0) ).x) );\n\n    col = mix( col, vec3(1.0,1.0,0.0), \n        (1.0-smoothstep(0.3,0.31,length(uv-vec2(0.0,0.5))))*\n        (0.3+0.7*texture2D( iChannel0, vec2(KEY_UP,0.5\/3.0) ).x));\n\t\n    col = mix( col, vec3(0.0,1.0,0.0),\n        (1.0-smoothstep(0.3,0.31,length(uv-vec2(0.75,0.0))))*\n        (0.3+0.7*texture2D( iChannel0, vec2(KEY_RIGHT,0.5\/3.0) ).x));\n\n    col = mix( col, vec3(0.0,0.0,1.0),\n        (1.0-smoothstep(0.3,0.31,length(uv-vec2(0.0,-0.5))))*\n        (0.3+0.7*texture2D( iChannel0, vec2(KEY_DOWN,0.5\/3.0) ).x));\n\n    \/\/ toggle\t\n    col = mix( col, vec3(1.0,0.0,0.0), \n        (1.0-smoothstep(0.0,0.01,abs(length(uv-vec2(-0.75,0.0))-0.3)))*\n        texture2D( iChannel0, vec2(KEY_LEFT,2.5\/3.0) ).x);\n\t\n    col = mix( col, vec3(1.0,1.0,0.0),\n        (1.0-smoothstep(0.0,0.01,abs(length(uv-vec2(0.0,0.5))-0.3)))*\n        texture2D( iChannel0, vec2(KEY_UP,2.5\/3.0) ).x);\n\n    col = mix( col, vec3(0.0,1.0,0.0),\n        (1.0-smoothstep(0.0,0.01,abs(length(uv-vec2(0.75,0.0))-0.3)))*\n        texture2D( iChannel0, vec2(KEY_RIGHT,2.5\/3.0) ).x);\n\t\n    col = mix( col, vec3(0.0,0.0,1.0),\n        (1.0-smoothstep(0.0,0.01,abs(length(uv-vec2(0.0,-0.5))-0.3)))*\n        texture2D( iChannel0, vec2(KEY_DOWN,2.5\/3.0) ).x);\n\n    \/\/ keypress\t\n    col = mix( col, vec3(1.0,0.0,0.0), \n        (1.0-smoothstep(0.0,0.01,abs(length(uv-vec2(-0.75,2.0))-0.35)))*\n        texture2D( iChannel0, vec2(KEY_LEFT,0.5) ).x);\n\t\n    col = mix( col, vec3(1.0,1.0,0.0),\n        (1.0-smoothstep(0.0,0.01,abs(length(uv-vec2(0.0,0.5))-0.35)))*\n        texture2D( iChannel0, vec2(KEY_UP,0.5) ).x);\n\n    col = mix( col, vec3(0.0,1.0,0.0),\n        (1.0-smoothstep(0.0,0.01,abs(length(uv-vec2(0.75,0.0))-0.35)))*\n        texture2D( iChannel0, vec2(KEY_RIGHT,0.5) ).x);\n\t\n    col = mix( col, vec3(0.0,0.0,1.0),\n        (1.0-smoothstep(0.0,0.01,abs(length(uv-vec2(0.0,-0.5))-0.35)))*\n        texture2D( iChannel0, vec2(KEY_DOWN,0.5) ).x);\n\n    fragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}