{"Shader":{"ver":"0.1","info":{"id":"XtXGDl","date":"1425973902","viewed":675,"name":"ngWaves09","username":"netgrind","description":"simple spiral","likes":1,"published":3,"flags":0,"tags":["waves","spiral","cool","netgrind"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"vec2 rotate(vec2 v, float a){\n\tfloat t = atan(v.y,v.x)+a;\n    float d = length(v);\n    v.x = cos(t)*d;\n    v.y = sin(t)*d;\n    return v;\n}\n\nvec4 hue(vec4 color, float shift) {\n\n    const vec4  kRGBToYPrime = vec4 (0.299, 0.587, 0.114, 0.0);\n    const vec4  kRGBToI     = vec4 (0.596, -0.275, -0.321, 0.0);\n    const vec4  kRGBToQ     = vec4 (0.212, -0.523, 0.311, 0.0);\n\n    const vec4  kYIQToR   = vec4 (1.0, 0.956, 0.621, 0.0);\n    const vec4  kYIQToG   = vec4 (1.0, -0.272, -0.647, 0.0);\n    const vec4  kYIQToB   = vec4 (1.0, -1.107, 1.704, 0.0);\n\n    \/\/ Convert to YIQ\n    float   YPrime  = dot (color, kRGBToYPrime);\n    float   I      = dot (color, kRGBToI);\n    float   Q      = dot (color, kRGBToQ);\n\n    \/\/ Calculate the hue and chroma\n    float   hue     = atan (Q, I);\n    float   chroma  = sqrt (I * I + Q * Q);\n\n    \/\/ Make the user's adjustments\n    hue += shift;\n\n    \/\/ Convert back to YIQ\n    Q = chroma * sin (hue);\n    I = chroma * cos (hue);\n\n    \/\/ Convert back to RGB\n    vec4    yIQ   = vec4 (YPrime, I, Q, 0.0);\n    color.r = dot (yIQ, kYIQToR);\n    color.g = dot (yIQ, kYIQToG);\n    color.b = dot (yIQ, kYIQToB);\n\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat i = iGlobalTime;\n    float scale = 5.0;\n\tvec2 uv = ( fragCoord.xy \/ iResolution.xy )*scale-scale*.5;\n    uv = rotate(uv,sin(length(uv)+i));\n    vec3 color = vec3(1.0);\n    float d = length(uv)*20.0+500.0;\n    float a = atan(uv.y,uv.x);\n    uv *= mat2(cos(d*sin(a*.01)),sin(-d*cos(a*.2)+i),-sin(d+tan(a*.01)+i),sin(i-d+a*5.0+cos(i+uv.x*3.0*a)));\n    color.gb = uv;\n    color.r = length(uv);\n    color.rgb = mod(color.rgb*.1,vec3(1.0));\n    color = normalize(color);\n\tfragColor = hue(vec4( color, 1.0 ),i);\n}","name":"","description":"","type":"image"}]}}