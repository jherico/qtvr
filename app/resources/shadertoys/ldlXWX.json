{"Shader":{"ver":"0.1","info":{"id":"ldlXWX","date":"1407765952","viewed":531,"name":"Speaking Battle Droids","username":"Dave_Hoskins","description":"Speech synthesis in Shadertoy!","likes":23,"published":3,"flags":8,"tags":["2d","speech","battledroid","droid","speaking","starwars","fomant"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Battle Droids saying, \"Errr, I think we have a problem!\"\n\/\/ By David Hoskins. Aug.'14.\n\/\/ Uses sinusoidal speech construction.\n\n\/\/ https:\/\/www.shadertoy.com\/view\/ldlXWX\n\n\/\/ Note, on the fourth droid, you can hear the formants scaled down,\n\/\/ this reveals the original actor's voice ( well, near enough :] ).\n\n\/\/==============================================================================\n\n#define TAU  6.2831\nconst vec2 randValues = vec2(0.006, 0.003);\nconst vec2 INV_SCALE  = 1.0 \/ vec2(509.0, 509.0*450.0\/800.0);\nvec3 col = vec3(1.0);\nvec2 uv;\nvec2 fcoord;\n\n\/\/==============================================================================\n\n#define MOD2 vec2(443.8975,397.2973)\nfloat Hash(float p)\n{\n\tvec2 p2 = fract(vec2(p) * MOD2);\n    p2 += dot(p2.yx, p2.xy+19.19);\n\treturn fract(p2.x * p2.y)-.5;\n}\n\n\n\/\/==============================================================================\nvec2 Hash2( vec2 x )\n{\n\tfloat n = dot(x,vec2(1.12313,113.94871)) + iGlobalTime;\n    return fract(sin(n)*vec2(3758.5233,2578.1459))-.5;\n}\n\n\/\/==============================================================================\nvec2 unpackCoord(float f) \n{\n    vec2 ret = vec2(mod(f, 512.0),floor(f \/ 512.0)) * INV_SCALE;\n    return ret;\n}\n\n\/\/==============================================================================\nvec2 unpackColour(float f) \n{\n    return vec2(mod (f, 256.0),floor(f \/ 256.0)) \/ 256.0;\n}\n\n\/\/==============================================================================\nvoid Tri(float pA, float pB, float pC, float pCol1, float pCol2)\n{\n\tvec2 pos = uv;\n\tvec2 a = unpackCoord(pA);\n\tvec2 b = unpackCoord(pB);\n\tvec2 c = unpackCoord(pC);\n\tpos += Hash2(fcoord) * randValues.x - randValues.y;\n\n\t\/\/ Triangle test...\n\tvec2 as = pos-a;\n\tvec2 bs = pos-b;\n\tif  ( (b.x-a.x)*as.y-(b.y-a.y)*as.x > 0.0 &&\n\t\t  (a.x-c.x)*as.y-(a.y-c.y)*as.x > 0.0 &&\n    \t  (c.x-b.x)*bs.y-(c.y-b.y)*bs.x > 0.0)\n\t{\n\t\tvec2 c1 = unpackColour(pCol1);\n\t\tvec2 c2 = unpackColour(pCol2);\n\t\tcol = mix (col, vec3(c1.x, c1.y, c2.x), c2.y); \n\t}\n}\n\n\/\/==============================================================================\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fcoord = fragCoord;\n\tuv = fragCoord.xy \/ iResolution.xy;\n    vec2 aspect = vec2(1.0, iResolution.y \/ iResolution.x);\n    \n    float t = iGlobalTime;\n    \n    \/\/ Move around...\n    t = mod(t, 6.0);\n    uv.x += -smoothstep(1.0, .0, t) + smoothstep(4.0, 5.0, t);\n    uv.y += abs(sin(t*TAU*2.0) * (smoothstep(1.0, .0, t) + smoothstep(4.0, 5.0, t)) * .2);\n    float tilt = smoothstep(1.0, 1.5, t) * smoothstep(4.5, 3.5, t) * .1;\n    float shake = smoothstep(1.5, 3.0, t) * smoothstep(3.4, 3.0, t) * .3;\n    mat2 mat = mat2( cos(tilt), sin(tilt),-sin(tilt), cos(tilt));\n    uv = (mat * (uv*aspect-vec2(1.75,.0) + vec2(1.75,.0))) \/ aspect;\n    uv.y += sin(t*24.0) * .01  * shake - tilt;\n    uv.y += cos(t*3.0) * .02  * shake;\n\t\n\t\/\/ Packed data parameters:\n\t\/\/ Tri( X1\/Y1, X2\/Y2, X3\/y3, RG, BA)\n\tTri(98094., 99008.,58567., 257., 14868.);\n\tTri(28833., 53424.,63129., 256., 15105.);\n\tTri(95493., 18203.,62768., 7217., 15107.);\n\tTri(436., 12211.,-170., 3095., 15107.);\n\tTri(82630., 107354.,96944., 2., 15107.);\n\tTri(36620., 108944.,125326., 46074., 9353.);\n\tTri(72041., 108781.,64818., 8., 15110.);\n\tTri(141596., 31881.,25234., 43005., 13831.);\n\tTri(29463., -227.,-187., 12587., 15108.);\n\tTri(49858., 65160.,54910., 1026., 15105.);\n\tTri(131830., 72846.,40084., 23937., 14342.);\n\tTri(127793., 21592.,8305., 557., 14850.);\n\tTri(105147., 77581.,77180., 12436., 12288.);\n\tTri(14620., 96016.,101124., 513., 15105.);\n\tTri(63055., 142319.,65611., 65019., 15094.);\n\tTri(145282., 61327.,33687., 1286., 15108.);\n\tTri(83763., 56630.,48972., 2712., 15107.);\n\tTri(127770., 79559.,62684., 60665., 14586.);\n\tTri(-227., -196.,119123., 30164., 14848.);\n\tTri(107269., 109765.,62832., 8214., 11008.);\n\tTri(29615., 356.,-94., 1553., 15105.);\n\tTri(47807., 73465.,87204., 30656., 14879.);\n\tTri(69885., 21080.,8306., 18255., 11012.);\n\tTri(92393., 22104.,8814., 11., 15105.);\n\tTri(127230., -226.,98147., 24206., 15106.);\n\tTri(113963., 26772.,115020., 548., 13062.);\n\tTri(129788., 125672.,83317., 7715., 14593.);\n\tTri(86294., 110276.,45679., 15495., 13071.);\n\tTri(80161., 111282.,22875., 65022., 15358.);\n\tTri(117125., 66446.,57236., 1., 15105.);\n\tTri(24367., 7526.,80674., 64253., 15102.);\n\tTri(37581., 101231.,69905., 64254., 15084.);\n\tTri(4563., 16872.,3866., 65277., 15357.);\n\tTri(27238., 21646.,54997., 64509., 15350.);\n\tTri(81563., 19030.,8313., 1550., 15105.);\n\tTri(14267., 25018.,-154., 258., 15105.);\n\tTri(-139., 416.,24472., 2., 15105.);\n\tTri(59257., 81743.,51053., 257., 15105.);\n\tTri(45229., 70799.,32355., 2056., 15104.);\n\tTri(124133., -200.,84793., 19604., 15105.);\n\tTri(28767., 76985.,73360., 6941., 15110.);\n\tTri(47943., 60234.,59187., 13., 15104.);\n\tTri(14940., 117590.,139015., 28553., 12032.);\n\tTri(-187., 119556.,-226., 570., 15106.);\n\tTri(118494., 17727.,55607., 20609., 14849.);\n\tTri(144280., 48692.,55387., 65021., 15358.);\n\tTri(66413., 130864.,97474., 11923., 14850.);\n\tTri(123715., 66885.,80753., 21649., 13319.);\n\tTri(130332., 115401.,97478., 65008., 15286.);\n\tTri(23583., 145258.,18949., 63995., 13817.);\n\tTri(48492., 113500.,128816., 15228., 14850.);\n\tTri(125161., 86796.,68442., 516., 14593.);\n\tTri(91951., 128241.,60684., 258., 15110.);\n\tTri(84858., 134398.,110275., 13174., 8960.);\n\tTri(74547., 66244.,49332., 65021., 15353.);\n\tTri(130801., 93526.,97122., 542., 15105.);\n\tTri(127367., 120705.,97668., 1544., 15109.);\n\tTri(138131., 22601.,134560., 65022., 7931.);\n\tTri(48334., 64752.,81126., 5426., 13313.);\n\tTri(88364., 92506.,106405., 64251., 15097.);\n\tTri(128234., 101559.,34403., 3., 15104.);\n\tTri(83627., 117033.,126752., 65017., 15354.);\n\tTri(128090., 131659.,14542., 65015., 14078.);\n\tTri(42933., 57253.,-108., 65278., 15100.);\n\tTri(112380., 74396.,94941., 1542., 15105.);\n\tTri(72850., 52957.,92923., 65018., 14585.);\n\tTri(23703., 63728.,24724., 3359., 12889.);\n\tTri(97928., 95367.,115199., 65278., 14833.);\n\tTri(-141., 488.,30115., 621., 15106.);\n\tTri(-44., 15294.,16264., 18025., 14593.);\n\tTri(-23., 22468.,27560., 565., 15104.);\n\tTri(72054., 86846.,50036., 3137., 13826.);\n\tTri(73001., 48961.,99156., 513., 15106.);\n\tTri(42691., 45199.,22674., 48629., 15174.);\n\tTri(39240., 130840.,130302., 778., 15106.);\n\tTri(52083., 60259.,24804., 65275., 8186.);\n\tTri(68301., 57508.,61142., 15301., 14593.);\n\tTri(47475., 100191.,93505., 4., 15106.);\n\tTri(126230., 142023.,129198., 65277., 15354.);\n\tTri(18201., -227.,48952., 17520., 13321.);\n\tTri(69897., 68441.,99173., 574., 15104.);\n\tTri(59666., 13083.,105313., 2368., 15105.);\n\tTri(25743., 35987.,15978., 65228., 15353.);\n\tTri(146757., 138042.,45875., 63206., 9447.);\n\tTri(32865., 8303.,16012., 303., 15105.);\n\tTri(29346., 112329.,31328., 23194., 14867.);\n\tTri(108822., 79495.,101630., 64762., 14842.);\n\tTri(130888., 11920.,72436., 65022., 15358.);\n\tTri(82589., 47218.,105194., 1025., 15110.);\n\tTri(112483., 118092.,42227., 65022., 10967.);\n\tTri(84298., 89967.,106397., 65278., 15354.);\n\tTri(108382., 52588.,56188., 10825., 14337.);\n\tTri(92925., 28439.,45333., 65278., 15356.);\n\tTri(-93., 9619.,-164., 257., 15104.);\n\tTri(55515., 103782.,146903., 63484., 7918.);\n\tTri(141172., 113312.,122103., 63996., 10493.);\n\tTri(22924., 27583.,52154., 65277., 15101.);\n\tTri(95438., 86205.,80598., 518., 15105.);\n\tTri(121771., 141735.,138858., 65277., 15357.);\n\tTri(30815., 9833.,79088., 8807., 14851.);\n\tTri(16549., 10921.,119603., 65273., 15353.);\n\tTri(21958., 22947.,5604., 53220., 15047.);\n\tTri(23487., 71997.,32121., 65277., 15358.);\n\tTri(130821., 125157.,16465., 33158., 15191.);\n\tTri(57194., 106705.,48501., 65021., 13043.);\n\tTri(93073., 62868.,418., 516., 15106.);\n\tTri(49462., 2430.,58218., 65022., 15355.);\n\tTri(-210., 32043.,140549., 65278., 15352.);\n\tTri(16343., 30061.,1508., 63486., 13754.);\n\tTri(21216., 54423.,53372., 64762., 14582.);\n\tTri(106175., 132366.,124129., 256., 15107.);\n\tTri(10857., 44657.,21594., 514., 15104.);\n\tTri(74467., 99150.,93432., 6973., 15108.);\n\tTri(84145., 79178.,88430., 514., 15105.);\n\tTri(48334., 34408.,35507., 34975., 15189.);\n\tTri(49317., 95406.,41580., 528., 15104.);\n\tTri(26543., 53559.,-189., 65021., 15357.);\n\tTri(57711., 47494.,67471., 65018., 15102.);\n\tTri(53619., 50473.,9143., 65021., 15357.);\n\tTri(101210., 134927.,105758., 9811., 13568.);\n\tTri(120517., 101669.,93109., 64766., 8163.);\n\tTri(61200., 26394.,61204., 2., 15105.);\n\tTri(125237., 118998.,51064., 20., 7937.);\n\tTri(18202., 36650.,60706., 53245., 11332.);\n\tTri(8861., 13876.,7293., 65273., 15358.);\n\tTri(33621., 41799.,49335., 62691., 8183.);\n\tTri(55705., 127368.,118143., 33., 15105.);\n\tTri(89927., 98122.,139508., 65277., 15314.);\n\tTri(58127., 72033.,108791., 537., 15106.);\n\tTri(54562., -204.,86306., 512., 15110.);\n\tTri(133413., 124638.,80537., 2594., 15104.);\n\tTri(18584., 101151.,107299., 65278., 15358.);\n\tTri(142647., 35020.,144711., 61949., 12790.);\n\tTri(106178., 88844.,122638., 55037., 14237.);\n\tTri(23455., 87442.,18328., 512., 15105.);\n\tTri(6051., 139656.,35225., 3., 15108.);\n\tTri(18843., 134531.,29077., 1280., 15104.);\n\tTri(131459., 141657.,41850., 65021., 15358.);\n\tTri(10347., 107713.,24152., 0., 15104.);\n\tTri(128759., 128307.,131342., 531., 15105.);\n\tTri(111333., 31018.,40232., 57340., 7837.);\n\tTri(102131., 113947.,121102., 64506., 15353.);\n\tTri(22970., 6544.,-61., 64766., 15358.);\n\tTri(99729., 126336.,28055., 0., 15104.);\n\tTri(120533., 56442.,131886., 7238., 12290.);\n\tTri(39586., 68345.,102126., 24206., 15119.);\n\tTri(116552., 66608.,58913., 65021., 8439.);\n\tTri(81624., 92393.,120535., 35014., 9531.);\n\tTri(105142., 130804.,134893., 65276., 15358.);\n\tTri(76046., 68397.,83756., 59388., 15255.);\n\tTri(124228., 97095.,107869., 19338., 13312.);\n\tTri(92490., 125228.,91434., 65021., 15344.);\n\tTri(15475., 101665.,144160., 62461., 15311.);\n\tTri(63792., 25892.,37713., 65277., 14589.);\n\tTri(87347., 86329.,119777., 64510., 14068.);\n\tTri(54888., 24730.,47817., 65276., 8153.);\n\tTri(68749., 60592.,67766., 55663., 9203.);\n\tTri(136147., 146750.,123968., 65277., 15357.);\n\tTri(80661., 21588.,9334., 590., 7683.);\n\tTri(62612., 50365.,66283., 65018., 15341.);\n\tTri(66445., 1437.,61843., 513., 15106.);\n\tTri(1147., 16011.,51865., 61689., 12286.);\n\tTri(123766., 132073.,146474., 65273., 15358.);\n\tTri(53110., 74613.,67939., 40668., 15143.);\n\tTri(38697., 80155.,56601., 65021., 15305.);\n\tTri(80070., 96949.,54910., 48886., 14681.);\n\tTri(22939., 134536.,146816., 65021., 15357.);\n\tTri(72859., 22637.,67754., 812., 15104.);\n\tTri(103614., 82077.,62086., 2058., 15105.);\n\tTri(50693., 4807.,32909., 64510., 9981.);\n\tTri(16516., 30884.,47789., 4924., 12546.);\n\tTri(96985., 102651.,113953., 258., 15106.);\n\tTri(124289., 28568.,124295., 2., 15106.);\n\tTri(53371., 131780.,3652., 61436., 14334.);\n\tTri(125241., 120042.,79614., 61950., 10215.);\n\tTri(-187., 62768.,284., 13165., 15105.);\n\tTri(85251., 71942.,73508., 2., 15105.);\n\tTri(67902., 69471.,108877., 257., 15104.);\n\tTri(69870., 118071.,63684., 65277., 15355.);\n\tTri(142248., 136061.,80599., 64252., 8186.);\n\tTri(-212., 1841.,111893., 62974., 15351.);\n\tTri(76883., 4639.,2656., 65021., 15358.);\n\tTri(25691., 55495.,123618., 13708., 7682.);\n\tTri(85000., 40206.,94310., 64765., 7934.);\n\tTri(126264., 130841.,49483., 33716., 7939.);\n\tTri(111868., 83142.,83662., 518., 12289.);\n\tTri(139146., 6552.,2466., 281., 11010.);\n\tTri(102664., 72359.,60139., 47358., 15218.);\n\tTri(28597., -139.,-17., 54524., 8720.);\n\tTri(146905., 128625.,131455., 65021., 15358.);\n\tTri(50070., 88975.,120197., 65277., 15357.);\n\tTri(30307., 16510.,18057., 2., 15106.);\n\tTri(42704., 76381.,19200., 65277., 15340.);\n\tTri(86176., 21592.,107271., 306., 11008.);\n\tTri(84065., 38912.,13917., 65021., 15358.);\n\tTri(25697., 44224.,57986., 41438., 14936.);\n\tTri(11861., 40040.,60928., 65021., 15357.);\n\tTri(133450., 80020.,56028., 62973., 9168.);\n\tTri(370., -101.,22938., 258., 15106.);\n\tTri(9828., 81971.,17925., 65278., 15358.);\n\tTri(102159., 94380.,87305., 59642., 15308.);\n\tTri(69527., 112523.,52118., 512., 14848.);\n\tTri(93359., 25711.,17053., 65275., 7897.);\n\tTri(117837., 143833.,146536., 65278., 15358.);\n\n    col = col * smoothstep(60.0, 58.0, iGlobalTime);\n    fragColor = vec4(min(col*1.1, 1.0), 1.0 );\n}\n\/\/==============================================================================","name":"","description":"","type":"image"},{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Battle Droids saying, \"Errr, I think we have a problem!\"\n\/\/ By David Hoskins. Aug.'14.\n\/\/ Uses sinusoidal speech construction.\n\n\/\/ https:\/\/www.shadertoy.com\/view\/ldlXWX\n\n\/\/ Note, on the fourth play, you can hear the formants scaled down,\n\/\/ this reveals the original actor's voice ( well, near enough :] ).\n\n\/\/----------------------------------------------------------------------------------\n#define TAU  6.28318530718\n#define P(u) if(t > u){x = u;}\n#define F(p1, p2, p3, p4, p5) {d+=0.00625; if(t >= d){v = p1;f123 = ivec4(p2, p3, p4, p5);}}\n#define I(a, b) if(t >= a){intensity = b;}\n\n\n#define MOD2 vec2(443.8975,397.2973)\nfloat Hash(float p)\n{\n\tvec2 p2 = fract(vec2(p) * MOD2);\n    p2 += dot(p2.yx, p2.xy+19.19);\n\treturn fract(p2.x * p2.y)-.5;\n}\n\n\/\/----------------------------------------------------------------------------------\nfloat Tract(float x, float f, float bandwidth)\n{\n    float ret = sin(TAU * f * x) * exp(-bandwidth * 3.14159265359 * x);\n    return ret * 1.4;\n}\n\n\/\/----------------------------------------------------------------------------------\nfloat Fricative(float x, float f, float t)\n{\n    float ret = Hash(floor(f * x + t));\n\treturn ret*1.7;\n}\n\n\/\/----------------------------------------------------------------------------------\nvec2 mainSound(float time)\n{\n\tfloat\tx = 0.0;\n    int\t\tv = 0;\n\tfloat\tt = time-1.0;\n    float\td = 0.019;\n    ivec4\tf123 = ivec4(0);\n    vec3  \tpf = vec3(0);\n    float \tintensity  = 0.0;\n    float\tglot, fric;\n\n    int n = int(mod(t, 36.0)\/6.0);\n    t = mod(t, 6.0);\n\n    float mult = 1.0;\n    if (n == 1)\n    {\n        \/\/ Vibrato...\n        t += sin(t* 100.0)*.0005;\n    }\n    if (n == 2)\n    {\n        \/\/ Slow down...\n\t\tt -= t * t * .08;\n    }\n    if (n == 3)\n    {\n        \/\/ The original actor?\n        mult = .62;        \n    }\n    if (n == 4)\n    {\n        \/\/ Faster...\n        t = t*1.25;\n    }\n    if (n == 5)\n    {\n        \/\/ Slower...\n    \tt = t*.75;\n    }    \n\n    \/\/ Formant data...\n    F(0, 1008, 1385, 1875, 2950);\n    F(0, 1033, 1381, 1870, 2960);\n    F(0, 922, 1091, 1853, 3002);\n    F(0, 1047, 1118, 1835, 3039);\n    F(0, 1014, 1124, 1836, 3055);\n    F(0, 615, 1112, 1834, 3066);\n    F(0, 1100, 1264, 1841, 3074);\n    F(0, 880, 1127, 1838, 3075);\n    F(0, 1139, 1821, 2855, 3087);\n    F(0, 1145, 1810, 2907, 3082);\n    F(0, 1165, 1807, 2937, 3079);\n    F(0, 1181, 1805, 3075, 3079);\n    F(0, 1177, 1794, 2906, 3090);\n    F(0, 1159, 1798, 2792, 3086);\n    F(0, 1168, 1802, 2907, 3082);\n    F(0, 1183, 1797, 2867, 3083);\n    F(0, 1190, 1798, 2768, 3078);\n    F(0, 1181, 1809, 2644, 3085);\n    F(0, 1181, 1811, 2658, 3082);\n    F(0, 1167, 1806, 2561, 3082);\n    F(0, 1175, 1810, 2376, 3078);\n    F(0, 1207, 1811, 2762, 3071);\n    F(0, 1206, 1799, 2940, 3081);\n    F(0, 1207, 1793, 2978, 3083);\n    F(0, 1193, 1799, 2751, 3095);\n    F(0, 1185, 1798, 2809, 3089);\n    F(0, 1189, 1791, 2760, 3086);\n    F(0, 1191, 1795, 2761, 3092);\n    F(0, 1203, 1797, 2846, 3087);\n    F(0, 1200, 1790, 2895, 3096);\n    F(0, 1187, 1794, 2883, 3104);\n    F(0, 1189, 1800, 2856, 3098);\n    F(0, 1168, 1797, 2640, 3102);\n    F(0, 1154, 1801, 2580, 3108);\n    F(0, 1158, 1804, 2636, 3095);\n    F(0, 1146, 1798, 2680, 3106);\n    F(0, 1144, 1791, 2670, 3112);\n    F(0, 1157, 1792, 2593, 3114);\n    F(0, 1154, 1791, 2543, 3108);\n    F(0, 1143, 1785, 2479, 3109);\n    F(0, 1135, 1782, 2575, 3111);\n    F(0, 1150, 1788, 2667, 3105);\n    F(0, 1145, 1788, 2655, 3104);\n    F(0, 1137, 1787, 2744, 3104);\n    F(0, 1137, 1787, 2700, 3098);\n    F(0, 1143, 1787, 2593, 3102);\n    F(0, 1145, 1785, 2597, 3100);\n    F(0, 1134, 1787, 2693, 3098);\n    F(0, 1138, 1793, 2758, 3098);\n    F(0, 1133, 1792, 2667, 3096);\n    F(0, 1137, 1791, 2747, 3102);\n    F(0, 1148, 1796, 2786, 3100);\n    F(0, 1154, 1794, 2793, 3099);\n    F(0, 1155, 1794, 2777, 3099);\n    F(0, 1157, 1795, 2749, 3106);\n    F(0, 1140, 1792, 2780, 3103);\n    F(0, 1127, 1790, 2741, 3103);\n    F(0, 1142, 1790, 2771, 3099);\n    F(0, 1135, 1792, 2758, 3095);\n    F(0, 1150, 1795, 2708, 3098);\n    F(0, 1155, 1790, 2621, 3096);\n    F(0, 1176, 1793, 2562, 3089);\n    F(0, 1144, 1454, 1799, 3082);\n    F(0, 1122, 1572, 1803, 3070);\n    F(0, 1139, 1799, 2434, 3071);\n    F(0, 1127, 1402, 1796, 3073);\n    F(0, 1105, 1548, 1788, 3064);\n    F(0, 1112, 1590, 1788, 3061);\n    F(0, 1127, 1301, 1794, 3058);\n    F(0, 1110, 1364, 1789, 3067);\n    F(0, 1078, 1277, 1810, 3068);\n    F(0, 974, 1547, 1806, 3084);\n    F(0, 985, 1681, 1802, 3097);\n    F(0, 1001, 1767, 1795, 3103);\n    F(0, 1049, 1493, 1810, 3095);\n    F(0, 1049, 1113, 1807, 3072);\n    F(0, 939, 1420, 1799, 3065);\n    F(0, 1067, 1789, 2876, 3076);\n    F(0, 1068, 1795, 2708, 3094);\n    F(0, 1074, 1782, 2825, 3077);\n    F(0, 1078, 1809, 2844, 3081);\n    F(0, 1118, 1801, 2634, 3084);\n    F(0, 1094, 1775, 2589, 3070);\n    F(0, 1082, 1778, 3026, 4055);\n    F(0, 1203, 1784, 3029, 3348);\n    F(0, 1181, 1802, 2801, 3055);\n    F(0, 507, 1544, 1926, 3002);\n    F(0, 699, 1498, 1977, 2897);\n    F(0, 1337, 1838, 2586, 2959);\n    F(0, 1450, 1728, 2533, 3014);\n    F(0, 1242, 1775, 2934, 3019);\n    F(0, 1118, 1806, 2766, 3055);\n    F(0, 1073, 1810, 2846, 3015);\n    F(0, 1092, 1798, 2753, 3085);\n    F(0, 1246, 1814, 2729, 3098);\n    F(0, 411, 1274, 1823, 3043);\n    F(0, 846, 1576, 1754, 3060);\n    F(0, 868, 1509, 1775, 3063);\n    F(0, 1123, 1795, 3057, 3822);\n    F(0, 1178, 1777, 2902, 3044);\n    F(0, 1112, 1771, 2791, 3089);\n    F(0, 1069, 1791, 2655, 3076);\n    F(0, 897, 1789, 2841, 3071);\n    F(0, 884, 1108, 1765, 3053);\n    F(0, 244, 1271, 1867, 3064);\n    F(0, 1051, 1673, 1892, 2954);\n    F(0, 1029, 1787, 1909, 2972);\n    F(0, 1047, 1716, 1929, 2991);\n    F(0, 1054, 1999, 2020, 3029);\n    F(0, 1056, 1093, 2077, 3044);\n    F(0, 962, 1488, 2133, 2993);\n    F(0, 911, 1618, 2178, 3001);\n    F(0, 870, 1778, 2241, 3031);\n    F(0, 837, 1641, 2276, 3079);\n    F(0, 823, 2295, 3082, 3940);\n    F(0, 774, 1118, 2318, 3109);\n    F(0, 715, 1397, 2331, 3154);\n    F(0, 661, 1323, 2358, 3189);\n    F(0, 604, 1428, 2401, 3234);\n    F(0, 557, 889, 2481, 3304);\n    F(0, 494, 1385, 2502, 3358);\n    F(0, 443, 1736, 2504, 3362);\n    F(0, 439, 1765, 2514, 3329);\n    F(0, 430, 1722, 2510, 3292);\n    F(0, 424, 1620, 2503, 3251);\n    F(0, 420, 1536, 2494, 3222);\n    F(0, 404, 1176, 2499, 3137);\n    F(0, 392, 802, 2462, 3051);\n    F(0, 307, 1262, 2414, 3084);\n    F(0, 382, 2375, 3224, 4030);\n    F(0, 465, 2332, 3264, 3497);\n    F(0, 428, 1411, 2465, 3164);\n    F(0, 434, 1783, 2473, 3150);\n    F(0, 481, 1629, 2358, 3140);\n    F(0, 461, 1406, 2356, 3142);\n    F(0, 586, 2343, 3141, 3583);\n    F(0, 405, 1958, 2412, 3440);\n    F(0, 554, 2003, 2574, 3306);\n    F(0, 616, 1684, 2560, 3243);\n    F(0, 435, 1978, 2373, 3236);\n    F(0, 428, 1777, 2495, 3398);\n    F(0, 464, 1872, 2701, 3387);\n    F(0, 436, 1800, 2608, 3397);\n    F(0, 454, 1711, 2529, 3475);\n    F(0, 571, 1765, 2597, 3423);\n    F(0, 711, 2156, 3022, 3837);\n    F(0, 997, 2164, 2997, 3942);\n    F(0, 969, 2085, 3004, 3755);\n    F(0, 952, 1912, 2935, 3644);\n    F(0, 1032, 1968, 3023, 3810);\n    F(0, 954, 2026, 2849, 3674);\n    F(0, 802, 1961, 2863, 3577);\n    F(0, 765, 1922, 2924, 3816);\n    F(1, 791, 2013, 2855, 3799);\n    F(1, 845, 2332, 3036, 4027);\n    F(1, 918, 2140, 2765, 3963);\n    F(1, 649, 1748, 2850, 3863);\n    F(1, 308, 1219, 2251, 2929);\n    F(1, 318, 1209, 2310, 2930);\n    F(1, 360, 1357, 2468, 3065);\n    F(1, 588, 950, 2416, 3114);\n    F(1, 852, 1903, 2987, 4207);\n    F(1, 280, 1122, 1997, 2957);\n    F(0, 482, 1384, 2377, 3434);\n    F(0, 645, 2304, 2393, 3475);\n    F(0, 672, 902, 2410, 3514);\n    F(0, 732, 2446, 3364, 3548);\n    F(0, 779, 2517, 3346, 3561);\n    F(0, 816, 2578, 3577, 3715);\n    F(0, 833, 2616, 3597, 3636);\n    F(0, 381, 855, 2653, 3616);\n    F(0, 633, 1090, 2734, 3649);\n    F(0, 574, 1169, 2768, 3616);\n    F(0, 546, 1209, 2788, 3519);\n    F(0, 525, 1199, 2816, 3486);\n    F(0, 520, 1182, 2847, 3470);\n    F(0, 515, 1144, 2893, 3461);\n    F(0, 504, 1128, 3058, 3424);\n    F(0, 486, 1140, 3224, 3349);\n    F(0, 512, 1207, 3123, 3313);\n    F(0, 560, 1417, 2971, 3311);\n    F(0, 385, 528, 2557, 3207);\n    F(0, 445, 448, 2524, 3323);\n    F(0, 331, 432, 3003, 3033);\n    F(0, 402, 410, 2887, 3569);\n    F(0, 292, 791, 2795, 3561);\n    F(0, 601, 2767, 3460, 4825);\n    F(0, 674, 2755, 3410, 3911);\n    F(0, 466, 835, 2775, 3426);\n    F(0, 585, 760, 2758, 3433);\n    F(0, 415, 998, 2705, 3358);\n    F(0, 715, 2598, 3086, 3639);\n    F(0, 561, 2326, 2942, 3525);\n    F(0, 641, 2668, 3257, 3579);\n    F(0, 285, 915, 2736, 3352);\n    F(0, 671, 2778, 3444, 4960);\n    F(0, 269, 777, 2780, 3429);\n    F(0, 600, 1152, 3414, 3983);\n    F(0, 533, 947, 2804, 3349);\n    F(0, 655, 1448, 2988, 3434);\n    F(0, 710, 1506, 2742, 3429);\n    F(0, 389, 1414, 2634, 3449);\n    F(0, 358, 1079, 2339, 3458);\n    F(0, 456, 1043, 2165, 3279);\n    F(0, 486, 814, 1800, 3341);\n    F(0, 543, 1060, 2280, 3432);\n    F(0, 538, 1030, 2513, 3499);\n    F(0, 549, 1023, 2620, 3452);\n    F(0, 288, 558, 1494, 3396);\n    F(0, 544, 1194, 1494, 3338);\n    F(0, 534, 1534, 1950, 3301);\n    F(0, 526, 1736, 2144, 3288);\n    F(0, 520, 2047, 2205, 3267);\n    F(0, 515, 1965, 2499, 3256);\n    F(0, 512, 1836, 2614, 3239);\n    F(0, 518, 1769, 2707, 3228);\n    F(0, 529, 1751, 2810, 3229);\n    F(0, 534, 1650, 2961, 3216);\n    F(0, 525, 1599, 3036, 3283);\n    F(0, 516, 1570, 3012, 3405);\n    F(0, 503, 1460, 2990, 3418);\n    F(0, 488, 1288, 3006, 3409);\n    F(0, 480, 1206, 2996, 3393);\n    F(0, 486, 1091, 2979, 3382);\n    F(0, 503, 1075, 2998, 3430);\n    F(0, 547, 1326, 2984, 3430);\n    F(0, 453, 968, 2740, 2964);\n    F(0, 392, 987, 2811, 3068);\n    F(0, 387, 1094, 2637, 3288);\n    F(0, 397, 1083, 2631, 3310);\n    F(0, 425, 1047, 2676, 2723);\n    F(0, 586, 1155, 2641, 3395);\n    F(0, 750, 1285, 2577, 3408);\n    F(0, 848, 1452, 2585, 3400);\n    F(0, 963, 1600, 2592, 3485);\n    F(0, 1012, 1762, 2575, 3473);\n    F(0, 1033, 1381, 2420, 3408);\n    F(0, 1134, 1423, 2351, 3352);\n    F(0, 1213, 1414, 2323, 3345);\n    F(0, 1245, 1253, 2305, 3339);\n    F(0, 1142, 1303, 2305, 3335);\n    F(0, 1109, 1306, 2290, 3339);\n    F(0, 1124, 1268, 2274, 3344);\n    F(0, 1247, 1255, 2257, 3331);\n    F(0, 1242, 1438, 2236, 3332);\n    F(0, 1233, 1555, 2215, 3357);\n    F(0, 1220, 1656, 2186, 3402);\n    F(0, 1212, 1601, 2155, 3397);\n    F(0, 1212, 1460, 2132, 3381);\n    F(0, 1210, 1429, 2103, 3370);\n    F(0, 1208, 1400, 2080, 3346);\n    F(0, 1183, 1421, 2061, 3325);\n    F(0, 1037, 1565, 2056, 3305);\n    F(0, 964, 1645, 2043, 3287);\n    F(0, 923, 1730, 1996, 3266);\n    F(0, 851, 1646, 2026, 3231);\n    F(0, 534, 1548, 1997, 3217);\n    F(0, 366, 1483, 2105, 3216);\n    F(0, 379, 1462, 1966, 3179);\n    F(0, 397, 1443, 2022, 3170);\n    F(0, 397, 1488, 2148, 3143);\n    F(0, 465, 1521, 2109, 3056);\n    F(0, 573, 1538, 2034, 3053);\n    F(0, 739, 1597, 1818, 3085);\n    F(0, 844, 1662, 1664, 3116);\n    F(0, 909, 1636, 1681, 3119);\n    F(0, 920, 1681, 1783, 3121);\n    F(0, 908, 1714, 1723, 3152);\n    F(0, 905, 1557, 1796, 3170);\n    F(0, 891, 1631, 1784, 3134);\n    F(0, 872, 1622, 1733, 3092);\n    F(0, 845, 1624, 1653, 3033);\n    F(0, 811, 1431, 1603, 2965);\n    F(0, 894, 1660, 2946, 4054);\n    F(0, 666, 1702, 3041, 4129);\n    F(0, 163, 1436, 1593, 3053);\n    F(0, 953, 1780, 3163, 4180);\n    F(0, 833, 1790, 3155, 4200);\n    F(0, 895, 1723, 3083, 3875);\n    F(0, 792, 1014, 1738, 3199);\n    F(0, 864, 1272, 1797, 3158);\n    F(0, 802, 1397, 1793, 3217);\n    F(0, 828, 1558, 1752, 3125);\n    F(0, 741, 1566, 2119, 3205);\n    F(0, 703, 1543, 2216, 3229);\n    F(0, 654, 1551, 2068, 3214);\n    F(0, 588, 1458, 1920, 3241);\n    F(0, 1047, 1886, 2760, 3725);\n    F(0, 1185, 1859, 2714, 3758);\n    F(0, 1412, 1983, 2551, 3644);\n    F(0, 1262, 1991, 2582, 3788);\n    F(0, 1187, 1958, 2622, 3877);\n    F(0, 979, 1756, 2249, 2533);\n    F(0, 1121, 1766, 2628, 3796);\n    F(0, 916, 1720, 2695, 3660);\n    F(0, 914, 1551, 2404, 3491);\n    F(0, 912, 1406, 1813, 3487);\n    F(1, 833, 871, 1392, 1890);\n    F(1, 677, 1300, 1507, 2034);\n    F(1, 767, 1326, 1454, 2040);\n    F(1, 841, 1400, 1458, 2072);\n    F(1, 846, 1448, 1739, 2117);\n    F(1, 920, 1427, 1479, 2203);\n    F(1, 618, 1014, 1511, 2346);\n    F(0, 1056, 1541, 2393, 3360);\n    F(0, 1109, 1561, 2512, 3382);\n    F(0, 1156, 1574, 2632, 3384);\n    F(0, 1169, 1577, 2727, 3408);\n    F(0, 1164, 1575, 2856, 3450);\n    F(0, 1122, 1567, 1846, 3095);\n    F(0, 1102, 1557, 1874, 3174);\n    F(0, 1091, 1536, 1922, 3239);\n    F(0, 1098, 1510, 1908, 3284);\n    F(0, 1127, 1472, 1904, 3310);\n    F(0, 1195, 1410, 1895, 3328);\n    F(0, 1261, 1355, 1855, 3335);\n    F(0, 1267, 1328, 1870, 3336);\n    F(0, 1270, 1305, 1902, 3336);\n    F(0, 1259, 1291, 1911, 3332);\n    F(0, 1268, 1301, 1911, 3334);\n    F(0, 1245, 1341, 1903, 3335);\n    F(0, 1238, 1355, 1887, 3334);\n    F(0, 1196, 1439, 1874, 3337);\n    F(0, 1159, 1502, 1865, 3341);\n    F(0, 1134, 1529, 1856, 3344);\n    F(0, 1096, 1545, 1890, 3348);\n    F(0, 1042, 1555, 1929, 3348);\n    F(0, 1007, 1561, 1914, 3349);\n    F(0, 991, 1563, 1680, 3348);\n    F(0, 947, 1342, 1554, 3346);\n    F(0, 785, 1193, 1530, 3337);\n    F(0, 400, 1533, 3348, 3998);\n    F(0, 275, 1507, 1631, 3275);\n    F(0, 292, 1518, 1547, 3325);\n    F(0, 277, 1396, 1745, 3319);\n    F(0, 272, 1389, 1716, 3297);\n    F(0, 276, 1427, 1709, 3322);\n    F(0, 274, 1441, 1639, 3404);\n    F(0, 285, 1341, 1580, 3327);\n    F(0, 293, 1392, 1591, 3334);\n    F(0, 320, 1418, 1807, 3432);\n    F(0, 426, 1268, 2094, 3758);\n    F(0, 440, 1225, 2031, 3811);\n    F(0, 460, 1198, 1996, 3868);\n    F(0, 484, 1179, 2175, 3946);\n    F(0, 520, 1174, 2165, 3986);\n    F(0, 549, 1153, 1873, 3970);\n    F(0, 595, 1143, 2316, 4078);\n    F(0, 661, 1150, 2628, 4110);\n    F(0, 678, 1147, 2428, 4075);\n    F(0, 754, 1209, 2362, 4062);\n    F(0, 848, 1305, 2419, 3987);\n    F(0, 919, 1354, 2257, 3949);\n    F(0, 1029, 1460, 2096, 3951);\n    F(0, 992, 1487, 1629, 3928);\n    F(0, 935, 1488, 1850, 3897);\n    F(0, 874, 1478, 1850, 3867);\n    F(0, 864, 1458, 1768, 3851);\n    F(0, 858, 1448, 1785, 3832);\n    F(0, 907, 1517, 1632, 3808);\n    F(0, 915, 1486, 1583, 3782);\n    F(0, 936, 1396, 1609, 3782);\n    F(0, 959, 1386, 1613, 3775);\n    F(0, 960, 1390, 1615, 3784);\n    F(0, 923, 1469, 1602, 3782);\n    F(0, 897, 1574, 1581, 3773);\n    F(0, 923, 1567, 1648, 3808);\n    F(0, 898, 1553, 1700, 3837);\n    F(0, 900, 1550, 1686, 3859);\n    F(0, 855, 1533, 1692, 3865);\n    F(0, 769, 1501, 1815, 3888);\n    F(0, 676, 1487, 1946, 3899);\n    F(0, 538, 1474, 2086, 3613);\n    F(0, 369, 1484, 2334, 3493);\n    F(0, 368, 1490, 2516, 3457);\n    F(0, 361, 1488, 2550, 3468);\n    F(0, 354, 1485, 2566, 3495);\n    F(0, 347, 1484, 2570, 3492);\n    F(0, 340, 1480, 2567, 3598);\n    F(0, 327, 1476, 2539, 3693);\n    F(0, 301, 1472, 2402, 2498);\n    F(0, 278, 1511, 2586, 3833);\n    F(0, 279, 1549, 2607, 3672);\n    F(0, 249, 1527, 2510, 3686);\n    F(0, 229, 1354, 2300, 3790);\n    F(0, 243, 1461, 2455, 3831);\n    F(0, 257, 1495, 2631, 3842);\n\n\n\t\/\/ Pitched pulse locations for voiced sound...\n    P(0.006302920008);\n    P(0.014417554797);\n    P(0.022562718270);\n    P(0.030680276050);\n    P(0.038757170686);\n    P(0.047441411940);\n    P(0.056139976014);\n    P(0.064804603765);\n    P(0.073484556959);\n    P(0.082221892661);\n    P(0.090999810729);\n    P(0.099830490514);\n    P(0.108666007266);\n    P(0.117501510386);\n    P(0.126304545693);\n    P(0.135083743493);\n    P(0.143837652404);\n    P(0.152590413072);\n    P(0.161352896981);\n    P(0.170174404310);\n    P(0.179029321841);\n    P(0.187893607315);\n    P(0.196758380218);\n    P(0.205616884467);\n    P(0.214475981646);\n    P(0.223333369026);\n    P(0.232162942256);\n    P(0.240975007409);\n    P(0.249826587831);\n    P(0.258710811883);\n    P(0.267627116922);\n    P(0.276545293990);\n    P(0.285472660932);\n    P(0.294407741414);\n    P(0.303357408139);\n    P(0.312309690276);\n    P(0.321269443663);\n    P(0.330231701168);\n    P(0.339174315940);\n    P(0.348092589552);\n    P(0.357009241958);\n    P(0.365930128530);\n    P(0.374882684638);\n    P(0.383854201768);\n    P(0.392839152984);\n    P(0.401824335864);\n    P(0.410819270792);\n    P(0.419842233560);\n    P(0.428871391443);\n    P(0.437908626689);\n    P(0.446937576576);\n    P(0.455906925667);\n    P(0.464767314165);\n    P(0.473465664913);\n    P(0.482073648990);\n    P(0.708400357018);\n    P(0.717623833154);\n    P(0.726867763627);\n    P(0.736058555811);\n    P(0.745100778371);\n    P(0.754020468338);\n    P(0.762827112294);\n    P(0.771529937893);\n    P(0.780218102841);\n    P(0.788840706108);\n    P(0.797463379418);\n    P(0.806197831230);\n    P(0.815136027284);\n    P(0.824616170551);\n    P(1.040423158146);\n    P(1.045119468401);\n    P(1.050264962692);\n    P(1.055400922134);\n    P(1.060483945370);\n    P(1.065478893595);\n    P(1.070466473599);\n    P(1.075447325809);\n    P(1.080410722331);\n    P(1.085370256637);\n    P(1.090290207640);\n    P(1.095170088655);\n    P(1.099994386987);\n    P(1.104791480883);\n    P(1.109542511319);\n    P(1.114281223337);\n    P(1.118990721437);\n    P(1.123669268888);\n    P(1.128298215369);\n    P(1.132907503469);\n    P(1.137488056096);\n    P(1.142027760857);\n    P(1.146579469115);\n    P(1.151122702910);\n    P(1.155697723080);\n    P(1.160485971718);\n    P(1.165403135787);\n    P(1.170391834229);\n    P(1.175482619705);\n    P(1.180535851282);\n    P(1.287613341428);\n    P(1.291764287173);\n    P(1.296610930915);\n    P(1.301644666638);\n    P(1.306718936558);\n    P(1.311831736835);\n    P(1.316906580063);\n    P(1.322050223641);\n    P(1.327265335569);\n    P(1.332554502969);\n    P(1.337918969015);\n    P(1.343400651503);\n    P(1.349075968685);\n    P(1.354827795535);\n    P(1.360635551216);\n    P(1.366450297126);\n    P(1.372342427046);\n    P(1.378201298709);\n    P(1.384109219365);\n    P(1.390043194581);\n    P(1.396018279829);\n    P(1.402073974770);\n    P(1.408199081259);\n    P(1.414356518163);\n    P(1.420546005095);\n    P(1.426780228441);\n    P(1.432917744943);\n    P(1.439037096635);\n    P(1.445052933260);\n    P(1.451100841042);\n    P(1.457092249016);\n    P(1.463002097617);\n    P(1.468858980726);\n    P(1.474678580092);\n    P(1.480477072986);\n    P(1.486229167064);\n    P(1.491942420292);\n    P(1.497630386505);\n    P(1.503280873958);\n    P(1.508895143304);\n    P(1.514522706792);\n    P(1.520216088799);\n    P(1.525930063366);\n    P(1.531663113347);\n    P(1.537446289433);\n    P(1.543252223679);\n    P(1.549057340039);\n    P(1.554877255139);\n    P(1.560703077346);\n    P(1.566551438366);\n    P(1.572404695487);\n    P(1.578246162737);\n    P(1.584083764190);\n    P(1.589914780295);\n    P(1.595730306192);\n    P(1.601556789857);\n    P(1.607368722853);\n    P(1.613188422657);\n    P(1.619014312175);\n    P(1.625722013054);\n    P(1.632035938285);\n    P(1.638508804821);\n    P(1.645083233464);\n    P(1.651740057734);\n    P(1.658343959143);\n    P(1.664885680586);\n    P(1.671299831212);\n    P(1.677470581097);\n    P(1.683546185532);\n    P(1.689707642083);\n    P(1.696001339942);\n    P(1.702397504629);\n    P(1.708908675112);\n    P(1.715560443213);\n    P(1.722382258781);\n    P(1.729345341527);\n    P(1.735340686623);\n    P(1.742711725595);\n    P(1.750488014557);\n    P(1.758611333467);\n    P(1.872489566545);\n    P(1.877624405515);\n    P(1.882847517039);\n    P(1.887903754229);\n    P(1.893800161883);\n    P(1.899711625628);\n    P(1.905549107169);\n    P(1.911364650453);\n    P(1.917190966145);\n    P(1.922990009827);\n    P(1.928763664666);\n    P(1.934485856353);\n    P(1.940174579403);\n    P(1.945845251394);\n    P(1.951525154364);\n    P(1.957220197229);\n    P(1.962922313105);\n    P(1.968641693529);\n    P(1.974379901428);\n    P(1.980109831202);\n    P(1.985846286090);\n    P(1.991570939384);\n    P(1.997280030422);\n    P(2.002980771017);\n    P(2.008678689617);\n    P(2.014387696125);\n    P(2.020094156428);\n    P(2.025794514997);\n    P(2.031508072598);\n    P(2.037216778073);\n    P(2.042918302098);\n    P(2.048621337922);\n    P(2.054329956454);\n    P(2.060037795753);\n    P(2.065745454639);\n    P(2.071444943778);\n    P(2.077131027852);\n    P(2.082826471247);\n    P(2.088594724068);\n    P(2.101988726948);\n    P(2.108650891702);\n    P(2.115389610032);\n    P(2.122149185610);\n    P(2.128992381901);\n    P(2.136355942590);\n    P(2.143918250444);\n    P(2.151406369896);\n    P(2.159025741523);\n    P(2.166212809259);\n    P(2.173525422379);\n    P(2.180928826293);\n    P(2.188381235795);\n    P(2.195915001829);\n    P(2.203515673522);\n    P(2.211182665145);\n    P(2.218890485982);\n    P(2.226598986195);\n    P(2.234535934441);\n    P(2.242592215198);\n    P(2.250672830746);\n    P(2.258791793897);\n    P(2.266926284983);\n    P(2.275112935775);\n    P(2.283307967034);\n    P(2.291507327762);\n    P(2.299690261833);\n    P(2.307854682082);\n    P(2.315978747067);\n    P(2.324062552007);\n    P(2.332136803584);\n    P(2.340199278291);\n    P(2.348259123298);\n    P(2.357012149302);\n    P(2.365077601505);\n    P(2.373118460437);\n    P(2.381125145634);\n    P(2.389125022821);\n    P(2.397118463692);\n    P(2.405116778015);\n    P(2.413176737173);\n    P(2.421369951892);\n    P(2.429854360572);\n    P(2.438759023133);\n\n    \/\/ Intensity change locations\n    I(0.055234, 24.236615);\n    I(0.065900, 34.380033);\n    I(0.076567, 44.000990);\n    I(0.087234, 53.625445);\n    I(0.097900, 73.638868);\n    I(0.108567, 73.945510);\n    I(0.119234, 74.286961);\n    I(0.129900, 74.459367);\n    I(0.140567, 74.499557);\n    I(0.151234, 74.512810);\n    I(0.161900, 74.704357);\n    I(0.172567, 75.115403);\n    I(0.183234, 75.516465);\n    I(0.193900, 75.806846);\n    I(0.204567, 75.995833);\n    I(0.215234, 76.208619);\n    I(0.225900, 76.419723);\n    I(0.236567, 76.471890);\n    I(0.247234, 76.429712);\n    I(0.257900, 76.444167);\n    I(0.268567, 76.448905);\n    I(0.279234, 76.410521);\n    I(0.289900, 76.440888);\n    I(0.300567, 76.521535);\n    I(0.311234, 76.614730);\n    I(0.321900, 76.655057);\n    I(0.332567, 76.753934);\n    I(0.343234, 76.999880);\n    I(0.353900, 77.164403);\n    I(0.364567, 77.174130);\n    I(0.375234, 77.100189);\n    I(0.385900, 76.919436);\n    I(0.396567, 76.800424);\n    I(0.407234, 76.786580);\n    I(0.417900, 76.685501);\n    I(0.428567, 76.577299);\n    I(0.439234, 76.636034);\n    I(0.449900, 76.713287);\n    I(0.460567, 76.187051);\n    I(0.471234, 74.404702);\n    I(0.481900, 71.262378);\n    I(0.492567, 66.458424);\n    I(0.503234, 59.381056);\n    I(0.513900, 52.299918);\n    I(0.524567, 47.822879);\n    I(0.535234, 44.395972);\n    I(0.545900, 43.578396);\n    I(0.556567, 42.308968);\n    I(0.567234, 39.689161);\n    I(0.577900, 38.205652);\n    I(0.588567, 38.364133);\n    I(0.599234, 38.673520);\n    I(0.609900, 38.874563);\n    I(0.620567, 38.031258);\n    I(0.631234, 36.556115);\n    I(0.641900, 36.109253);\n    I(0.652567, 36.165292);\n    I(0.663234, 49.668710);\n    I(0.673900, 53.056771);\n    I(0.684567, 61.809597);\n    I(0.695234, 66.657771);\n    I(0.705900, 69.480702);\n    I(0.716567, 71.339540);\n    I(0.727234, 72.815873);\n    I(0.737900, 74.018801);\n    I(0.748567, 74.651136);\n    I(0.759234, 74.794427);\n    I(0.769900, 74.513203);\n    I(0.780567, 73.698030);\n    I(0.791234, 72.286196);\n    I(0.801900, 70.283189);\n    I(0.812567, 67.504283);\n    I(0.823234, 63.027464);\n    I(0.833900, 56.714973);\n    I(0.844567, 50.537392);\n    I(0.855234, 45.336859);\n    I(0.865900, 42.603780);\n    I(0.876567, 42.597256);\n    I(0.887234, 42.829675);\n    I(0.897900, 42.000430);\n    I(0.908567, 40.539746);\n    I(0.919234, 42.188377);\n    I(0.929900, 42.174520);\n    I(0.940567, 42.939517);\n    I(0.951234, 43.624444);\n    I(0.961900, 44.964706);\n    I(0.972567, 48.008688);\n    I(0.983234, 50.485180);\n    I(0.993900, 52.900073);\n    I(1.004567, 54.273807);\n    I(1.015234, 57.220386);\n    I(1.025900, 60.716667);\n    I(1.036567, 62.176826);\n    I(1.047234, 65.021347);\n    I(1.057900, 69.430922);\n    I(1.068567, 71.465740);\n    I(1.079234, 74.988203);\n    I(1.089900, 80.758931);\n    I(1.100567, 80.445461);\n    I(1.111234, 80.387526);\n    I(1.121900, 80.344488);\n    I(1.132567, 70.893439);\n    I(1.143234, 69.667775);\n    I(1.153900, 67.750698);\n    I(1.164567, 65.146050);\n    I(1.175234, 61.492486);\n    I(1.185900, 56.136538);\n    I(1.196567, 48.507273);\n    I(1.207234, 41.545338);\n    I(1.217900, 39.835181);\n    I(1.228567, 40.998503);\n    I(1.239234, 40.456844);\n    I(1.249900, 37.847396);\n    I(1.260567, 39.155100);\n    I(1.271234, 48.715809);\n    I(1.281900, 56.823488);\n    I(1.292567, 61.574773);\n    I(1.303234, 64.455330);\n    I(1.313900, 66.893821);\n    I(1.324567, 69.206534);\n    I(1.335234, 71.369794);\n    I(1.345900, 72.960443);\n    I(1.356567, 73.971859);\n    I(1.367234, 75.298104);\n    I(1.377900, 76.664955);\n    I(1.388567, 77.246850);\n    I(1.399234, 77.093382);\n    I(1.409900, 76.002558);\n    I(1.420567, 73.715949);\n    I(1.431234, 71.240538);\n    I(1.441900, 69.799857);\n    I(1.452567, 69.294301);\n    I(1.463234, 69.423091);\n    I(1.473900, 70.093404);\n    I(1.484567, 71.947363);\n    I(1.495234, 75.708317);\n    I(1.505900, 79.438933);\n    I(1.516567, 81.133893);\n    I(1.527234, 81.024730);\n    I(1.537900, 80.627229);\n    I(1.548567, 80.849555);\n    I(1.559234, 81.284996);\n    I(1.569900, 81.555159);\n    I(1.580567, 81.590697);\n    I(1.591234, 81.530317);\n    I(1.601900, 81.256103);\n    I(1.612567, 79.745917);\n    I(1.623234, 75.673738);\n    I(1.633900, 68.418402);\n    I(1.644567, 63.079267);\n    I(1.655234, 66.755393);\n    I(1.665900, 43.556432);\n    I(1.676567, 48.228900);\n    I(1.687234, 60.449420);\n    I(1.697900, 31.281234);\n    I(1.708567, 53.238448);\n    I(1.719234, 49.674272);\n    I(1.729900, 65.591159);\n    I(1.740567, 68.445550);\n    I(1.751234, 61.238076);\n    I(1.761900, 57.273224);\n    I(1.772567, 52.486975);\n    I(1.783234, 48.120859);\n    I(1.793900, 46.293448);\n    I(1.804567, 45.519639);\n    I(1.815234, 47.929565);\n    I(1.825900, 52.092361);\n    I(1.836567, 53.814770);\n    I(1.847234, 54.304559);\n    I(1.857900, 60.284081);\n    I(1.868567, 58.481409);\n    I(1.879234, 54.701406);\n    I(1.889900, 58.761428);\n    I(1.900567, 60.899068);\n    I(1.911234, 71.456660);\n    I(1.921900, 81.229794);\n    I(1.932567, 81.524402);\n    I(1.943234, 82.314316);\n    I(1.953900, 82.741516);\n    I(1.964567, 82.479064);\n    I(1.975234, 81.807118);\n    I(1.985900, 81.288848);\n    I(1.996567, 81.143248);\n    I(2.007234, 81.239460);\n    I(2.017900, 81.453487);\n    I(2.028567, 81.884503);\n    I(2.039234, 82.626996);\n    I(2.049900, 83.484906);\n    I(2.060567, 84.138105);\n    I(2.071234, 84.057159);\n    I(2.081900, 82.133621);\n    I(2.092567, 77.176106);\n    I(2.103234, 68.905191);\n    I(2.113900, 62.664758);\n    I(2.124567, 61.216470);\n    I(2.135234, 60.583326);\n    I(2.145900, 61.218054);\n    I(2.156567, 65.207171);\n    I(2.167234, 68.915133);\n    I(2.177900, 70.688123);\n    I(2.188567, 71.606077);\n    I(2.199234, 73.018225);\n    I(2.209900, 75.277937);\n    I(2.220567, 77.302481);\n    I(2.231234, 78.199629);\n    I(2.241900, 78.469156);\n    I(2.252567, 78.377444);\n    I(2.263234, 78.031341);\n    I(2.273900, 78.032505);\n    I(2.284567, 78.436478);\n    I(2.295234, 78.851238);\n    I(2.305900, 79.050431);\n    I(2.316567, 78.972029);\n    I(2.327234, 78.451161);\n    I(2.337900, 77.166154);\n    I(2.348567, 74.560039);\n    I(2.359234, 70.767548);\n    I(2.369900, 68.291446);\n    I(2.380567, 67.777633);\n    I(2.391234, 67.325333);\n    I(2.401900, 66.335608);\n    I(2.412567, 64.873055);\n    I(2.423234, 63.010539);\n    I(2.423234, 0.0);\n       \n    x = t-x;\n    vec4 formants = vec4(f123);\n    \n\tglot = \tTract(x, formants.x * mult, 60.0)  +\n       \t\tTract(x, formants.y * mult, 90.0)  * .9 +\n       \t\tTract(x, formants.z * mult, 140.0) * .8 +\n   \t\t\tTract(x, formants.w * mult, 210.0) * .6;\n\t\n    fric += Fricative(x, formants.x, t) +\n      \t\tFricative(x, formants.y, t) * 1.4 +\n       \t\tFricative(x, formants.z, t) * 1.8 +\n       \t\tFricative(x, formants.w, t) * 1.8;\n    \n    if (v == 0)\n    {\n        fric *= .2;\n    }   \n   \n\tfloat voice = (glot + fric) * pow(10.0, intensity\/20.0) * .00005;\n    \n    \/\/ Footsteps...\n    t = mod(time, 6.0);\n    float feet = (sin(t*TAU*2.0));\n    float foot = sign(feet);\n    feet = smoothstep(0.9, 1.0, abs(feet));\n    feet *= (smoothstep(1.2, .0, t) + smoothstep(3.8, 4.5, t)-smoothstep(4.5, 5.5, t)) * .7;\n    foot = Hash(floor(t*(1000.0+foot*320.0))) * feet;\n   \n    float stereo = 1.0-smoothstep(0.0, 1.2, t) * .5 - smoothstep(3.8, 5.0, t) * .8;\n    vec2 footsteps = vec2((1.0-stereo), stereo) * foot;\n     \n\tvec2 audio = vec2(voice) + footsteps;\n    audio = clamp(audio, -1.0, 1.0) * smoothstep(60.0, 58.0, time);    \n\treturn audio;\n}","name":"","description":"","type":"sound"}]}}