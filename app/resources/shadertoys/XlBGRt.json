{"Shader":{"ver":"0.1","info":{"id":"XlBGRt","date":"1431188618","viewed":663,"name":"JuliaSet3000","username":"SmartPointer","description":"The awesome JuliaSet","likes":1,"published":3,"flags":0,"tags":["fractal"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"const int maxIt = 300;\nvec2 c = vec2(-0.73, 0.27015);\n\/\/vec2 c = vec2(0.39, 0.1);\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 \/ 3.0, 1.0 \/ 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    c.x += sin(c.y * 2.0 + iGlobalTime * 0.2) \/ 20.0;\n    vec2 z, oldz;\n    z.x = 2.0 * (fragCoord.x - iResolution.x \/ 2.0) \/ (0.55 * iResolution.x);\n    z.y = (fragCoord.y - iResolution.y \/ 2.0) \/ (0.55 * iResolution.y);\n\n    int k = 0;\n\tfor (int i = 0; i < maxIt; i++)\n\t{\n\t\toldz.x = z.x;\t\t\/\/ x = real\n\t\toldz.y = z.y;\t\t\/\/ y = imaginary\n\n\t\tz.x = (oldz.x * oldz.x) - (oldz.y * oldz.y) + c.x;\n\t\tz.y = (2.0 * oldz.x * oldz.y) + c.y;\n\n\t\tif ((z.x * z.x + z.y * z.y) > 4.0)\n        {\n            k = i;\n            break;\n        }\n\t}\n\n\tfloat h = (1.0 \/ float(maxIt)) * float(k);\n\n\tfragColor = vec4(hsv2rgb(vec3(h, 1.0, 1.0)), 1.0);\n}\n","name":"","description":"","type":"image"}]}}