{"Shader":{"ver":"0.1","info":{"id":"4tfSzn","date":"1433879678","viewed":722,"name":"maelstrom 70ties","username":"FabriceNeyret2","description":".","likes":10,"published":3,"flags":0,"tags":["noise"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define PI 3.1415927\n\n\/\/ --- noise functions from https:\/\/www.shadertoy.com\/view\/XslGRr\n\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nconst mat3 m = mat3( 0.00,  0.80,  0.60,\n           \t\t    -0.80,  0.36, -0.48,\n             \t\t-0.60, -0.48,  0.64 );\n\nfloat hash( float n ) {\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec3 x ) { \/\/ in [0,1]\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f*f*(3.-2.*f);\n\n    float n = p.x + p.y*57. + 113.*p.z;\n\n    float res = mix(mix(mix( hash(n+  0.), hash(n+  1.),f.x),\n                        mix( hash(n+ 57.), hash(n+ 58.),f.x),f.y),\n                    mix(mix( hash(n+113.), hash(n+114.),f.x),\n                        mix( hash(n+170.), hash(n+171.),f.x),f.y),f.z);\n    return res;\n}\n\nfloat fbm( vec3 p ) { \/\/ in [0,1]\n    float f;\n    f  = 0.5000*noise( p ); p = m*p*2.02;\n    f += 0.2500*noise( p ); p = m*p*2.03;\n    f += 0.1250*noise( p ); p = m*p*2.01;\n    f += 0.0625*noise( p );\n    return f;\n}\n\/\/ --- End of: Created by inigo quilez --------------------\n\nvec2 sfbm2( vec3 p ) {\n    return 2.*vec2(fbm(p),fbm(p-327.67))-1.;\n}\n\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iGlobalTime;\n    vec2 mouse = iMouse.xy \/ iResolution.xy;\n    if (iMouse.z<0.) \n         mouse = vec2(.9,.5)*vec2(cos(1.*t)+.5*sin(2.2*t),sin(1.1*t)+.5*cos(1.9*t))\/1.5;   \n    else \n            mouse = 2.*mouse-1.;\n\tvec2 uv = 2.*(fragCoord.xy \/ iResolution.y-vec2(.9,.5));\n    float a = .1*iGlobalTime, c=cos(a), s=sin(a); mat2 m = mat2(c,-s,s,c);\n    \n    vec4 col=vec4(0.);\n    \/\/vec3 paint = vec3(.7,.5,.4);\n    vec3 paint = vec3(.3,.9,.7);\n    \n    for(float z=0.; z<1.; z+= 1.\/30.) {\n        paint = .5+.5*cos(4.*2.*PI*z+vec3(0.,2.*PI\/3.,-2.*PI\/3.));\n        uv *= m;\n        vec2 duv = vec2(.8,.5)*sfbm2(vec3(1.2*uv,3.*z+iGlobalTime)) - 3.*z*mouse;\n    \tfloat d = length(uv+duv)-1.2*(1.-z),\n              a = smoothstep(.1,.09,abs(d)); \n        d = .5*a+.5*smoothstep(.09,.08,abs(d));\n        col += (1.-col.a)*vec4(d*paint*exp(-0.*z),a);\n        if (col.a>=.9) break;\n    }\n\tfragColor = col;\n}","name":"","description":"","type":"image"}]}}