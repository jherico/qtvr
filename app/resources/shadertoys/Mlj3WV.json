{"Shader":{"ver":"0.1","info":{"id":"Mlj3WV","date":"1432723892","viewed":856,"name":"2D LED Spectrum - Visualiser","username":"uNiversal","description":"A simple 2D LED Spectrum analyser visualisation, based on Led Spectrum Analyser by: simesgreen<br\/><br\/>Made to work in Kodi shadertoy addon https:\/\/github.com\/topfs2\/visualization.shadertoy\/pull\/3","likes":10,"published":3,"flags":0,"tags":["2d","spectrum","audio","visualisation","analyser"],"hasliked":0},"renderpass":[{"inputs":[{"id":19,"src":"\/presets\/mzk02.mp3","ctype":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/*\n2D LED Spectrum - Visualiser\nBased on Led Spectrum Analyser by: simesgreen - 27th February, 2013 https:\/\/www.shadertoy.com\/view\/Msl3zr\n2D LED Spectrum by: uNiversal - 27th May, 2015\nCreative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n*\/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \/\/ create pixel coordinates\n    vec2 uv = fragCoord.xy \/ iResolution.xy;\n\n    \/\/ quantize coordinates\n    const float bands = 30.0;\n    const float segs = 40.0;\n    vec2 p;\n    p.x = floor(uv.x*bands)\/bands;\n    p.y = floor(uv.y*segs)\/segs;\n\n    \/\/ read frequency data from first row of texture\n    float fft  = texture2D( iChannel0, vec2(p.x,0.0) ).x;\n\n    \/\/ led color\n    vec3 color = mix(vec3(0.0, 2.0, 0.0), vec3(2.0, 0.0, 0.0), sqrt(uv.y));\n\n    \/\/ mask for bar graph\n    float mask = (p.y < fft) ? 1.0 : 0.1;\n\n    \/\/ led shape\n    vec2 d = fract((uv - p) *vec2(bands, segs)) - 0.5;\n    float led = smoothstep(0.5, 0.35, abs(d.x)) *\n                smoothstep(0.5, 0.35, abs(d.y));\n    vec3 ledColor = led*color*mask;\n\n    \/\/ output final color\n    fragColor = vec4(ledColor, 1.0);\n}\n","name":"","description":"","type":"image"}]}}