{"Shader":{"ver":"0.1","info":{"id":"Xtl3DB","date":"1424895008","viewed":1685,"name":"Playing with Refleks","username":"eiffie","description":"Uncomment REFLECT_OR_CONTINUE and the march will continue or reflect.","likes":17,"published":3,"flags":0,"tags":["reflectionsmaybe"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/Playing with Refleks by eiffie\n\/\/If you uncomment REFLECT_OR_CONTINUE then the march will either reflect or continue to look for an intersect\n\n\n\/\/#define REFLECT_OR_CONTINUE\n\n#define rez iResolution\n#define tyme iGlobalTime\n\nvec2 rep(vec2 p, vec2 a){return abs(mod(p+a,a*2.0)-a);}\nfloat RSTube(in vec3 z, vec4 r){return length(vec2(length(max(abs(z.xy)-r.xy,0.0))-r.z,z.z))-r.w;}\nfloat Torus(in vec3 z, vec2 r){return length(vec2(length(z.xy)-r.x,z.z))-r.y;}\nfloat SCALE = -1.77,dL;\nvec4 scale=vec4(SCALE,SCALE,SCALE,abs(SCALE));\nfloat DE(in vec3 z0){\n\tfloat dF=-abs(z0.y)+1.82;\n\tfloat y=-z0.y,sW=dF*dF*0.02;\n\tz0.xz=rep(z0.xz,vec2(7.0,6.0));\n\tz0=abs(z0)-vec3(2.74,0.83,2.74);\n\tvec4 z = vec4(z0,1.0),p0=vec4(4.0,4.0,4.0,1.0);\n\tfloat d=length(z.xz+vec2(-0.82+sW*sin(y*10.0+tyme*17.0),-1.0+sW*cos(y*15.0+tyme*20.0))),d2=RSTube(z.xzy+vec3(-1.0,-1.0,0.0),vec4(0.51,0.32,0.74,0.04));\n\tdL=min(dL,d);\n\tvec2 nrm=vec2(0.6,0.38);\n\tfor (int n = 0; n < 3; n++) {\n\t\tz.xz=clamp(z.xz, -1.0, 1.0) *2.0-z.xz;\n\t\tif(n==0){\n\t\t\tfloat h=length(z.xyz+vec3(-0.25,0.13,-0.25));\n\t\t\tdL=min(dL,(h-0.07));d=min(d,h-0.05);\n\t\t\tz.w+=clamp(1.0-h*2.0,0.0,1.0);\n\t\t}\n\t\tz.xz-=2.0*min(0.0,dot(z.xz,nrm))*nrm;\n\t\tz*=scale\/clamp(dot(z.xyz,z.xyz),0.0,0.29);\n\t\td=min(d,length(max(abs(z.xyz\/z.w)-vec3(0.01,0.27,0.01),0.0)));\n\t\tz+=p0;\n\t}\n\treturn min(d,min(d2,dF));\n}\nfloat DEL(in vec3 z0){\n\tz0.xz=rep(z0.xz,vec2(7.0,6.0));\n\tz0=abs(z0)-vec3(2.74,0.83,2.74);\n\treturn length(z0+vec3(-0.82,0.0,-1.0));\n}\nvec4 strap=vec4(0.0);\nfloat CE(in vec3 z0){\n\tfloat dF=-abs(z0.y)+1.82;\n\tz0.xz=rep(z0.xz,vec2(7.0,6.0));\n\tz0=abs(z0)-vec3(2.74,0.83,2.74);\n\tvec4 z = vec4(z0,1.0),p0=vec4(4.0,4.0,4.0,1.0);\n\tfloat d=100.0,d1=Torus(z.xzy+vec3(-1.0,-1.0,0.1),vec2(1.07,0.03)),d2=RSTube(z.xzy+vec3(-1.0,-1.0,0.0),vec4(0.51,0.32,0.74,0.04));\n\tvec2 nrm=vec2(0.6,0.38);\n\tfor (int n = 0; n < 3; n++) {\n\t\tz.xz=clamp(z.xz, -1.0, 1.0) *2.0-z.xz;\n\t\tz.xz-=2.0*min(0.0,dot(z.xz,nrm))*nrm;\n\t\tz*=scale\/clamp(dot(z.xyz,z.xyz),0.0,0.29);\n\t\tvec3 z2=z.xyz\/z.w;\n\t\td=min(d,max(length(z2.xz)-0.01,abs(z2.y)-0.27));\n\t\tz+=p0;\n\t}\n\tif(d<d1 && d<d2 && d<dF){z0*=200.0;d+=0.001*sin(z0.x+sin(z0.y+sin(z0.z)));strap+=vec4(sin(200.0*z.xyz\/z.w)*0.4+0.5,0.2);}\n\telse if(d1<d2 && d1<dF){d=d1;strap+=vec4(0.0);}\n\telse if(d2<dF){d=d2;strap+=vec4(0.9,0.3,0.2,0.0);}\n\telse{d=dF;dF=1.5*pow(abs((fract(z0.x*3.0)-0.5)*(fract(z0.z*3.0)-0.5)),0.1);strap+=vec4(dF,dF,dF,0.1);}\n\treturn d;\n}\nfloat ShadAO(in vec3 ro, in vec3 rd){\n\tfloat t=0.0,s=1.0,d;\n\tfor(int i=0;i<10;i++){\n\t\td=max(DE(ro+rd*t)*1.5,0.01);\n\t\ts=min(s,d\/t+t);\n\t\tt+=d;\n\t}\n\treturn s;\n}\nvec3 GetBackground(in vec3 rd){\n\treturn vec3(0.7)+0.1*rd;\n}\nvec3 Bloom(in float t){\n\treturn exp(-t*100.0)*vec3(2.0,0.4,0.2);\n}\nvec4 scene(in vec3 O, in vec3 D){\n\tvec3 ro=O,rd=D;\n\tfloat totalDist=0.0,firstDist=0.0,t=0.0,pxl=1.5\/iResolution.y;\n\tvec4 col=vec4(0.0);\n\tdL=1000.0;\n #ifdef REFLECT_OR_CONTINUE\n\tfor(int j=0;j<2;j++){\n #endif\n\t\tfloat d,dm=100.0,tm=0.0;\n\t\tfor(int i=0;i<64;i++){\n\t\t\td=DE(ro+rd*t);\n\t\t\tif(d<dm){dm=d;tm=t;}\n\t\t\tt+=d*clamp(t*0.25,0.8,1.0);\n\t\t\tif(t>20.0 || d<0.00001)break;\n\t\t}\n\t\tfloat px=pxl*(totalDist+tm);\n\t\tif(dm<px && dm<dL){\n\t\t\tvec3 so=ro+rd*tm;\n\t\t\tvec2 e=vec2(-1.0,1.0)*px;\n\t\t\tstrap=vec4(0.0);\n\t\t\tfloat ld=dL;\/\/I took the normal calc from nimitz\n\t\t\tvec3 N=normalize(e.yxx*CE(so+e.yxx)+e.xxy*CE(so+e.xxy)+e.xyx*CE(so+e.xyx)+e.yyy*CE(so+e.yyy));\n\t\t\te=vec2(-1.0,1.0)*ld;\/\/turn it around to get direction to the nearest light\n\t\t\tvec3 L=-normalize(e.yxx*DEL(so+e.yxx)+e.xxy*DEL(so+e.xxy)+e.xyx*DEL(so+e.xyx)+e.yyy*DEL(so+e.yyy));\n\t\t\tvec3 scol=strap.rgb*0.25;\n  #ifdef REFLECT_OR_CONTINUE\n\t\t\tfloat refl=strap.a*0.25;\n  #else\n            float refl=0.0;\n  #endif\n\t\t\tvec3 R=reflect(rd,N);\n\t\t\tfloat v=dot(-rd,N),l=dot(N,L);\n\t\t\tfloat shad=ShadAO(so+N*0.001,L);\n\t\t\tvec3 cc=vec3(0.4,0.5,0.7),lc=vec3(1.0,0.8,0.6);\n\t\t\tfloat cd=exp(-distance(O,so));l*=exp(-ld*0.75);\n\t\t\tfloat spcl=pow(max(0.0,dot(R,L)),10.0),spcc=pow(max(0.0,dot(R,-rd)),1.0+cd);\n\t\t\tscol=scol*max(max(cd*v*cc,shad*l*lc),0.0)+cd*spcc*cc+shad*spcl*lc;\n\t\t\tfloat fog=min(tm*0.1,1.0);\/\/exp(-tm*0.1);\n\t\t\tscol=Bloom(ld)+mix(scol,vec3(0.7),fog);\n\t\t\tfloat alpha=(1.0-refl)*(1.0-col.a)*clamp(1.0-dm\/px+fog,0.0,1.0);\n\t\t\tcol+=vec4(clamp(scol,0.0,1.0),1.0)*alpha;\n #ifdef REFLECT_OR_CONTINUE\n\t\t\tif(col.a>0.95)break;\n\t\t\tif(d==dm){\/\/bounce and stuff\n\t\t\t\tif(firstDist==0.0)firstDist=t;\n\t\t\t\tif(refl>0.01){\n\t\t\t\t\tro+=rd*(t-px);\n\t\t\t\t\ttotalDist+=t;\n\t\t\t\t\tt=0.0;\n\t\t\t\t\trd=R;\n\t\t\t\t}else break;\n\t\t\t}\n\t\t\tdL=1000.0;\n #endif\n\t\t}\n #ifdef REFLECT_OR_CONTINUE\n        else if(dL<px)break;\n\t}\n #endif\n\tcol.rgb+=(Bloom(dL)+GetBackground(rd))*(1.0-clamp(col.w,0.0,1.0));\n\treturn vec4(col.rgb,firstDist);\n}\nmat3 lookat(vec3 fw,vec3 up){\n\tfw=normalize(fw);vec3 rt=normalize(cross(fw,normalize(up)));return mat3(rt,cross(rt,fw),fw);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat tim=tyme*0.25;\n\tvec3 ro=vec3(sin(tim)*(2.0+tim)-4.0,0.5,cos(tim)-4.0);\n\tvec3 rd=lookat(vec3(-4.0,-0.6,-4.0)-ro,vec3(0.0,1.0,0.0))*normalize(vec3((2.0*(fragCoord.xy)-rez.xy)\/rez.y,1.0));\n\n\tvec4 color=scene(ro,rd);\/\/eye,normalize(dir));\n\tfragColor = vec4(color.rgb,1.0);\n}\n","name":"","description":"","type":"image"},{"inputs":[],"outputs":[{"channel":"0"}],"code":"float ssaw(float t){return 4.0*(abs(fract(t+0.75)-0.5)-0.25);}\n\nfloat snd(float time){\n\tfloat a1=ssaw(50.0*time);\n\ta1=sign(a1)*pow(abs(a1),1.1+sin(time*20.0));\n\treturn a1;\n}\n#define SPEEDOFSOUND 20.0\n#define DAMPING 1.0\nfloat phys(float time, float dist){\n\tfloat tim=time-dist\/SPEEDOFSOUND;\n\treturn snd(tim)*exp(-dist*DAMPING);\n}\nvec2 rep(vec2 p, vec2 a){return abs(mod(p+a,a*2.0)-a);}\nfloat DEL(in vec3 z0){\n\tz0.xz=rep(z0.xz,vec2(7.0,6.0));\n\tz0=abs(z0)-vec3(2.74,0.83,2.74);\n\treturn length(z0+vec3(-0.82,0.0,-1.0));\n}\nvec3 herert(vec3 fw,vec3 up){\n\tfw=normalize(fw);return normalize(cross(fw,normalize(up)));\n}\nvec2 mainSound(float time)\n{\n\tfloat tim=time*0.25;\n\tvec3 ro=vec3(sin(tim)*(2.0+tim)-4.0,0.5,cos(tim)-4.0);\n\tvec3 rt=0.1*herert(vec3(-4.0,-0.6,-4.0)-ro,vec3(0.0,1.0,0.0));\n\tfloat d1=DEL(ro),d2=DEL(ro+rt);\n\tfloat a1=phys(time,d1),a2=phys(time,d2);\n\treturn vec2(a1,a2);\n}\n","name":"","description":"","type":"sound"}]}}