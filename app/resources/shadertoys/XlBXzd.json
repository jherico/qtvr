{"Shader":{"ver":"0.1","info":{"id":"XlBXzd","date":"1445775811","viewed":459,"name":"black hole 2","username":"fantomas","description":"test","likes":4,"published":3,"flags":0,"tags":["ray"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float distfunc (vec3 p)\n{\n    return min( length(p-vec3(-4.,1,-3.))-2.0, 50.-length(p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.x;\n    float vr=0.5;\n    float cr=15.;\n    \n    vec3 camo = vec3(sin(iGlobalTime*vr)*cr,1.,cos(iGlobalTime*vr)*cr);\n    vec3 camd = vec3(0,0,0);\n    vec3 up = vec3(0.,1.,0.);\n    \n    vec3 dir = normalize(camd-camo);\n    \n    dir = normalize(up*(uv.y-iResolution.y\/iResolution.x\/2.)+cross(dir,up)*(uv.x-0.5)+(dir));\n    \n    \n    vec3 pos = camo;\n    float dmas;\n    float dmar;\n    float dbh;\n    \n    for (int i=0; i<48; i++)\n    {\n        dbh = length(pos);\n        dmar = min(distfunc(pos),dbh\/2.);\n        dir-=pos\/dbh\/dbh\/dbh\/8.;\n        dir=normalize(dir);\n        pos += dir*dmar;\n\n    }\n \n    float do1 = length(pos-vec3(-5.,1,-5.))-2.0;\n    float do2 =  50.-length(pos);\n    \n    vec4 col=vec4(0.,0.,0.,0.);\n    if (do1 < do2)\n    {\n        float dam= (float(mod(pos.x,1.)>.5)-0.5)*(float(mod(pos.z,1.)>.5)-0.5)*(float(mod(pos.y,1.)>.5)-0.5);\n        dam = float(dam>0.);\n   \t\tcol=vec4(dam,1.-dam,0.,1.);\n    }\n    else\n    {\n        float dam= (float(mod(pos.x,16.)>8.)-0.5)*(float(mod(pos.z,16.)>8.)-0.5)*(float(mod(pos.y,16.)>8.)-0.5);\n        dam = float(dam>0.);\n        col=vec4(dam,dam,1.-dam,1.);\n    \t\n    }\n\n    float hit = .1\/(distfunc(pos)+.1);\n    \n    fragColor = (col)*hit;\n}","name":"","description":"","type":"image"}]}}