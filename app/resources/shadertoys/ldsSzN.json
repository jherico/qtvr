{"Shader":{"ver":"0.1","info":{"id":"ldsSzN","date":"1397996625","viewed":799,"name":"Hardware multiscale gradient","username":"FabriceNeyret2","description":"cheap texture gradiant using hardware derivative at each MIPmap level.<br\/>mouse = parameter tuning. No mouse -> auto-demo.<br\/>C: add the ultra-lowres image<br\/>M: uses module(grad) instead<br\/>SPACE: show base texture<br\/>G: shows grad at MIPmap level = mouse.x","likes":2,"published":3,"flags":0,"tags":["dfdx"],"hasliked":0},"renderpass":[{"inputs":[{"id":4,"src":"\/presets\/tex03.jpg","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":33,"src":"\/presets\/tex00.jpg","ctype":"keyboard","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\n#define PI 3.14159265359\n\nbool keyToggle(int ascii) \n{\treturn (texture2D(iChannel2,vec2((.5+float(ascii))\/256.,0.75)).x > 0.); }\n\n\n\/\/ texture, texture gradient and module of gradient\n\nint TEX=0;\nvec3 txt(vec2 uv, float n) { \n\tuv = vec2(0.,1.)-uv;\n\treturn (TEX==0) ? texture2D(iChannel0,uv,n).rgb\n\t\t\t\t\t: texture2D(iChannel1,uv,n).rgb;\n}\n\nvec3 txtFs(vec2 uv, vec2 dir, float n) { \n\tvec3 t = txt(uv,n); \n\treturn ( dFdx(t)*dir.x + dFdy(t)*dir.y)  * pow(2.,n); \/\/ dx = 2^N \/ 2^n\n}\n\nvec3 txtF(vec2 uv, float n) { \n\treturn fwidth(txt(uv,n)) * pow(2.,n);  \/\/ dx = 2^N \/ 2^n\n}\n\n\n\nfloat showFlag(vec2 p, vec2 uv, float v) {\n\tfloat d = length(2.*(uv-p)*iResolution.xy\/iResolution.y);\n\treturn \t1.-step(.06*v,d) + smoothstep(0.005,0.,abs(d-.06));\n}\n\nfloat showFlag(vec2 p, vec2 uv, bool flag) {\n\treturn showFlag(p, uv, (flag) ? 1.: 0.);\n}\n\n\/\/ ---\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tbool auto = (iMouse.z<=0.); \/\/ no-mouse : auto-demo\n\t\n\tvec2 uv = fragCoord.xy\/iResolution.xy;\n\tvec2 dir; float n,k; vec3 v;\n\n\t\/\/ --- tunning\n\t\n\tbool MOD, TXT, GRAD, COL;\n\t\n\tif (!auto) {\n\t\tTXT = keyToggle(32);\n\t\tCOL = keyToggle(67);\n\t\tGRAD = keyToggle(71);\n\t\tMOD = keyToggle(77);\n\n\t\tvec2 mouse = iMouse.xy\/iResolution.xy;\n\t\tn = 9.*mouse.x;\n\t\tk = 2.*(mouse.x-.5);\n\t\tdir = 2.*(mouse-.5);\n\t\tdir = normalize(dir);\n\t} \n\telse \n\t{\n\t\tfloat t = iGlobalTime\/3.;\n\t\t\n\t\t\/\/ set TXT or GRAD or MOD or MOD+COL or (!MOD) or (!MOD)+COL.\t\n\t\tfloat t0 = mod(t,10.); int i = int(t0); \n\t\tTXT  = (i==0);\n\t\tGRAD = (i==1)||(i==2);\n\t\tCOL  = (i==3)||(i==4)||(i==7)||(i==8);\n     \/\/ (!MOD) = (i==5)||(i==6)\n\t\tMOD  = (i==7)||(i==8)||(i==9);\n\t\t\/\/ set each flag then change texture\n\t\tTEX = int(mod(t\/10.,2.)); \n\t\t\n\t\t\/\/ varies tuning within each mode\n\t\tdir = .5*vec2(cos(3.*t)*(1.+cos(t))\/2., sin(3.3*t)*(1.+cos(.7*t))\/2.);\n\t\tt = PI*mod(t0+1.,2.); \/\/ 0..2PI\n\t\tn = 7.*(1.-cos(t))\/2.;\n\t\tk = cos(t);\t\n\t}\n\t\n\tfloat panel = showFlag(vec2(.25,.05),uv, bool(TEX))\n\t\t\t\t+ showFlag(vec2(.35,.05),uv, TXT)\n\t\t\t\t+ showFlag(vec2(.45,.05),uv, GRAD)\n\t\t\t\t+ showFlag(vec2(.55,.05),uv, MOD)\n\t\t\t\t+ showFlag(vec2(.65,.05),uv, !(MOD||TXT||GRAD))\n\t\t\t\t+ showFlag(vec2(.75,.05),uv, COL);\n\t\t\n\t\n\t\/\/ --- display\n\t\n\tif (TXT) \/\/ show base texture instead\n\t\tv = txt(uv,0.*floor(n));\n\t\n\telse if (GRAD) { \/\/ show gradient of MIPmap level n instead ( blue = frac(level) )\n\t\tv = txtF(uv,n);\n\t\tv.b += showFlag(vec2(.5,.5), uv, fract(n));\n\t}\n\t\t\n\telse { \/\/ draw cumulated gradient pyramid\n\t\t\n\t\tv = vec3(0.);\n\t\tfloat q=0., s=1.;\n\t\tfor (int i=0; i<=6; i++) {\n\t\t\t\/\/ if (float(i)>n) continue;\n\t\t\tif (MOD) \n\t\t\t\tv += txtF(uv,float(i));          \/\/ module(grad)\n\t\t\telse\n\t\t\t\tv += txtFs(uv,dir,float(i));     \/\/ grad\n\n\t\t\tq+=s,s*=.5;\n\t\t}\n\t\tv *= 2.\/q; \n\t\tif (MOD)\n\t\t\tif (COL)\n\t\t\t\tv = (txt(uv,6.)+.5*k*v)\/(1.+max(0.,k)); \/\/ draw lowresTex + k.mod(grad)\n\t\t\telse\n\t\t\t\tv = .5*v;                  \/\/ draw mod(grad)\n\n\t\telse \n\t\t\tif (COL)\n\t\t\t\tv = txt(uv,7.)-v;          \/\/ draw lowresTex - grad\n\t\t\telse\n\t\t\t\tv = .5*(1.+v);             \/\/ draw grad\n\n\t}\n\t\n\tv.b += panel;\n\tfragColor = vec4(v,1.); \n\n}","name":"","description":"","type":"image"}]}}