{"Shader":{"ver":"0.1","info":{"id":"Xll3zX","date":"1423858836","viewed":2396,"name":"Voronoi - hierarchical","username":"iq","description":"Hierarchical Voronoi. An attempt really.","likes":14,"published":3,"flags":0,"tags":["2d","voronoi","worley"],"hasliked":0},"renderpass":[{"inputs":[{"id":30,"src":"\/presets\/tex16.png","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ An attempt to hierarchical Voronoi. Failed so far.\n\n#define LEVEL 3\n#define BORDERS \n\nvec3 rand3( vec2 p ) { return texture2D( iChannel0, (p*8.0+0.5)\/256.0, -100.0 ).xyw; }\n\nvec3 voronoi( in vec2 x )\n{\n    vec2 n = floor(x);\n    vec2 f = fract(x);\n\n\tfloat id, le;\n\n    float md = 10.0;\n    \n    for( int j=-1; j<=1; j++ )\n    for( int i=-1; i<=1; i++ )\n    {\n        vec2 g1 = n + vec2(float(i),float(j));\n        vec3 rr = rand3( g1 );\n\t\tvec2 o = g1 + rr.xy;\n        vec2 r = x - o;\n        float d = dot(r,r);\n        float z = rr.z;\n        \n        #if LEVEL>0\n        if( z<0.75 )\n        #endif            \n        {\n            if( d<md )\n            {\n                md = d;\n                id = z + g1.x + g1.y*7.0;\n                le = 0.0;\n            }\n        }\n        #if LEVEL>0\n        else\n        {\n            for( int l=0; l<2; l++ )\n            for( int k=0; k<2; k++ )\n            {\n                vec2 g2 = g1 + vec2(float(k),float(l))\/2.0;\n                rr = rand3( g2 );\n                o = g2 + rr.xy\/2.0;\n                r = x - o;\n                d = dot(r,r);\n                z = rr.z;\n                #if LEVEL>1\n                if( z<0.8 )\n                #endif                    \n                {\n                    if( d<md )\n                    {\n                        md = d;\n                        id = z + g2.x + g2.y*7.0;\n                        le = 1.0;\n                    }\n                }\n                #if LEVEL>1\n                else\n                {\n                    for( int n=0; n<2; n++ )\n                    for( int m=0; m<2; m++ )\n                    {\n                        vec2 g3 = g2 + vec2(float(m),float(n))\/4.0;\n                        rr = rand3( g3 );\n                        o = g3 + rr.xy\/4.0;\n                        r = x - o;\n                        d = dot(r,r);\n                        z = rr.z;\n\n                        #if LEVEL>2\n                        if( z<0.8 )\n                        #endif                    \n                        {\n                            if( d<md )\n                            {\n                                md = d;\n                                id = z + g3.x + g3.y*7.0;\n                                le = 2.0;\n                            }\n                        }\n                        #if LEVEL>2\n                        else\n                        {\n                            for( int t=0; t<2; t++ )\n                            for( int s=0; s<2; s++ )\n                            {\n                                vec2 g4 = g3 + vec2(float(s),float(t))\/8.0;\n                                rr = rand3( g4 );\n                                o = g4 + rr.xy\/8.0;\n                                r = x - o;\n                                d = dot(r,r);\n                                z = rr.z;\n\n                                if( d<md )\n                                {\n                                    md = d;\n                                    id = z + g4.x + g4.y*7.0;\n                                    le = 3.0;\n                                }\n                            }\n                        }\n                        #endif\n                    }\n                }\n                #endif\n            }\n        }\n        #endif        \n    }\n\n    return vec3( md, le, id );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy\/iResolution.x;\n    p += 0.5*cos( 0.1*iGlobalTime + vec2(0.0,1.57) );\n    \n    const float scale = 8.0;\n    \n    vec3 c = voronoi( scale*p );\n\n    vec3 col = 0.6 + 0.4*cos( c.y*0.6 + vec3(0.0,0.9,1.5) );\n    col *= 0.96 + 0.04*sin( 10.0*c.z );\n    col *= smoothstep( 0.008, 0.015, sqrt(c.x) );\n#ifdef BORDERS    \n    vec2 e = vec2( 2.0, 0.0 )\/iResolution.x;\n    vec3 ca = voronoi( scale*(p + e.xy) );\n    vec3 cb = voronoi( scale*(p + e.yx) );\n    col *= 1.0 - clamp( abs(2.0*c.z-ca.z-cb.z)*1000.0,0.0,1.0);\n#else\n    col *= 1.0 - clamp(fwidth(c.z)*1000.0,0.0,1.0);\n#endif\n    \n    \n    fragColor = vec4( col, 1.0 );\n}\n","name":"","description":"","type":"image"}]}}