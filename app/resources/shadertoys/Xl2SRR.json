{"Shader":{"ver":"0.1","info":{"id":"Xl2SRR","date":"1441277044","viewed":916,"name":"Firework Show","username":"yibojiang","description":"Experiment particle system and some effects.","likes":17,"published":3,"flags":0,"tags":["firework","particlesystem"],"hasliked":0},"renderpass":[{"inputs":[{"id":16,"src":"\/presets\/tex11.png","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":21,"src":"\/presets\/mzk04.mp3","ctype":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/yibojiang\n\/*\nI made serveral explosion pattern.\n0 is normal explosion, \n1 is circle,\n2 is flower,\n3 is star,\n4 is heart\n\nYou can uncommet the playLevel to play a firework sequence I've made,\nBut it may crash your browsers on Windows, I'm not sure about the cause\n(may be too many loops) since I havn't a pc to debug, what I do is add\nthe marco to toggle the play, which cuts lots of loops.\n*\/\n\/\/#define playLevel  \/\/Define whether to play a firework sequence.\n#define pi 3.1415926\n\n#define til 10  \/\/ the trail length of firework \n#define etil 3\t\/\/ the trail length of explosion particle, reduce this to 1 can improve performance\n#define numParticle 30\t\/\/ explode particle number\n\n#define grivity .1\n#define explodePow .25 \/\/ explosion force\n#define lengthStep .5\n#define explodeStep .5\n#define grassCount 100\n#define normalflickerPow .005 \/\/flicker intensity of explosion effect\n#define circleflickerPow .02\n#define drawGrass \/\/ whether to draw the grass\n#define dd1 4.\n#define dd2 5.\n#define tt1 2.\n\nvec2 noise(vec2 tc){\n    return (2.*texture2D(iChannel0, tc.xy ).xy-1.).xy;\n}\n\nfloat rand(vec2 c){\n    return fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat randDir(float val, float seed){\n\treturn cos(val*sin(val*seed)*seed);\t\n}\n\nfloat hash(in float n ){\n    return fract(sin(n)*43758.5453123);\n}\n\nfloat powFunc(in float v){\n\n    const float a=0.004;\n    const float t=pi*2.;\n    \n    return mix(a*pow(.2, mod( v  ,t) -2.*pi ) ,\n               a*pow(5., mod( v  ,t) ) ,\n               mod( floor(v \/(.5* t) ) ,2.) );\n\n}\n\nvec2 getPos(in vec2 o,in float t,in vec2 d){\n    return vec2(o.x+ d.x*t, o.y+d.y*t-grivity*t*t);\n}\n\n\/\/no grivity\nvec2 getPos2(in vec2 o,in float t,in vec2 d){\n    return vec2(o.x+ d.x*t, o.y+d.y*t);\n}\n\nfloat drawPoint(in float r,in float size,in vec2 p){\n \treturn smoothstep(r,r+size,length(p) );\n}\n\nvec3 drawParticle(in vec2 p,in float size,in vec3 col){\n    \/\/return mix( col,vec3(0.)  , smoothstep(0.,size,length(p) ) );\n    return mix( col,vec3(0.)  , smoothstep(0.,size, dot(p,p)*90. ) );\n}\n\nvec3 drawFlyHeart(in vec2 uv,in vec2 o,in float off,in vec3 color,in vec2 initDir, float rt ){\n    float t=iGlobalTime+off;\n    vec3 col=vec3(0.);\n    #ifdef playLevel\n    if (t<0. || t>dd2){\n        return col;\n    }\n    #else\n    if (t<0. || t<dd2){\n     \treturn col;   \n    }\n        \n    #endif\n    \n    \n    \n    float nt=floor(t\/dd2)+off+o.x+o.y;\n    t=mod (t,dd2 );\n    \n    if (t<tt1){\n        for (int i=0;i<til;i++){\n            float id=float(i)\/float(til);\n            vec2 q=uv-getPos(o,t-lengthStep*id,initDir)+noise( vec2((id+hash(nt)+t )*.65) )*0.005;\n            col+=drawParticle(q,mix(0.02,0.012,id) ,mix(color,vec3(0.),id ));\n            \n        }\n        \/\/flare\n     \tvec2 flarePos=uv-getPos(o,t,initDir );\n        \/\/col+=mix( color*mix( 1.0,0.0, length(flarePos)*20. ), vec3(0.) , drawPoint( (0.0003*abs(.1+ sin(t*.9+pi*.3) ) )*powFunc( atan( flarePos.y, flarePos.x )*4. ) ,.01,flarePos) );\n        col+=mix( color*mix( 1.0,0.0, dot(flarePos,flarePos)*800. ), \n                 vec3(0.) , drawPoint( (0.0003*abs(.1+ sin(t*.9+pi*.3) ) )*powFunc( atan( flarePos.y, flarePos.x )*4. ) ,.01,flarePos) );\n    }\n    else{\n        float t2=t-tt1;\n        vec2 ep=getPos(o,tt1,initDir);\n\t\tfloat lerp=t2\/(dd2-tt1);\n        \n        for (int j=0;j<100;j++){\n            vec2 rawdir=normalize(noise( vec2( float(j)\/100. , hash(float(j)+nt )*.5 )) );\n\n            float v=atan(rawdir.y,rawdir.x)+rt*t;\n            float r=0.1*(2.-2.*sin(v)+sin(v)*sqrt( abs(cos(v) ) )\/(sin(v)+1.4) );\n            vec2 q=uv-getPos2(ep, t2-0.2*explodeStep,explodePow*r* rawdir );\n            float flicker=circleflickerPow*hash(float(j)+lerp);\n            col+=drawParticle(q, \n                              (0.01+flicker)*abs(cos(lerp*.5*pi) ),\n                              color );\n        }\n\n        \/\/boom light\n        col+=mix( mix(color, vec3(0.), clamp(3.*lerp ,0.,1.)  ) ,\n                 vec3(0.) , \n                 drawPoint(0.0,.7,uv-ep) );\n    }\n    \n\treturn col;\n}\n\nvec3 drawFlyStar(in vec2 uv,in vec2 o,in float off,in vec3 color,in vec2 initDir ){\n    float t=iGlobalTime+off;\n    vec3 col=vec3(0.);\n    #ifdef playLevel\n    if (t<0. || t>dd1){\n        return col;\n    }\n    #else\n    if (t<0. || t<dd1){\n     \treturn col;   \n    }\n        \n    #endif\n    float nt=floor(t\/dd1)+off+o.x+o.y;\n    t=mod (t,dd1 );\n    \n\t\n    if (t<tt1){\n        for (int i=0;i<til;i++){\n            float id=float(i)\/float(til);\n            vec2 q=uv-getPos(o,t-lengthStep*id,initDir)+noise( vec2((id+hash(nt)+t )*.65) )*0.005;\n            col+=drawParticle(q,mix(0.02,0.012,id) ,\n                              mix(color,vec3(0.),id ));\n            \n        }\n        \/\/flare\n     \tvec2 flarePos=uv-getPos(o,t,initDir );\n        col+=mix( color*mix( 1.0,0.0, dot(flarePos,flarePos)*800. ), \n                 vec3(0.) , drawPoint( (0.0003*abs(.1+ sin(t*.9+pi*.3) ) )*powFunc( atan( flarePos.y, flarePos.x )*4. ) ,.01,flarePos) );\n\n    }\n    else{\n        float t2=t-tt1;\n        vec2 ep=getPos(o,tt1,initDir);\n        float lerp=t2\/(dd1-tt1);\n\t\t   \n        for (int j=0;j<150;j++){\n            vec2 rawdir=normalize(noise( vec2( float(j)\/150. , hash(float(j)+nt )*.5 )) );\n\n            float v=atan(rawdir.y,rawdir.x)+1.*t;\n            float r=0.1+0.0015*( powFunc(atan(rawdir.y,rawdir.x)*5.+t*10.*(hash(nt) -.5) ) ); \n            vec2 q=uv-getPos2(ep, t2-0.2*explodeStep,explodePow*r* rawdir );\n            float flicker=circleflickerPow*hash(float(j)+lerp);\n            col+=drawParticle(q, (0.01+flicker)*abs(cos(lerp*.5*pi) ), color );\n        }\n\n        \/\/boom light\n        col+=mix( mix(color, vec3(0.), clamp(3.*lerp ,0.,1.)  ) ,vec3(0.) , drawPoint(0.0,.7,uv-ep) );\n    }\n\treturn col;    \n}\n\nvec3 drawFlyFlower(in vec2 uv,in vec2 o,in float off,in vec3 color,in vec2 initDir, int num ){\n    float t=iGlobalTime+off;\n    vec3 col=vec3(0.);\n    #ifdef playLevel\n    if (t<0. || t>dd2){\n        return col;\n    }\n    #else\n    if (t<0. || t<dd2){\n     \treturn col;   \n    }\n        \n    #endif\n    float nt=floor(t\/dd2)+off+o.x+o.y;\n    t=mod (t,dd2 );\n    \n\t\n    if (t<tt1){\n        for (int i=0;i<til;i++){\n            float id=float(i)\/float(til);\n            vec2 q=uv-getPos(o,t-lengthStep*id,initDir)+noise( vec2((id+hash(nt)+t )*.65) )*0.005;\n            col+=drawParticle(q,mix(0.02,0.012,id) ,mix(color,vec3(0.),id ));\n            \n        }\n        \/\/flare\n     \tvec2 flarePos=uv-getPos(o,t,initDir );\n        col+=mix( color*mix( 1.0,0.0, dot(flarePos,flarePos)*800. ), \n                 vec3(0.) , drawPoint( (0.0003*abs(.1+ sin(t*.9+pi*.3) ) )*powFunc( atan( flarePos.y, flarePos.x )*4. ) ,.01,flarePos) );\n        \/\/col+=mix( color*mix( 1.0,0.0, length(flarePos)*20. ), vec3(0.) , drawPoint( (0.0003*abs(.1+ sin(t*.9+pi*.3) ) )*powFunc( atan( flarePos.y, flarePos.x )*4. ) ,.01,flarePos) );\n    }\n    else{\n\t\t float t2=t-tt1;\n        vec2 ep=getPos(o,tt1,initDir);\n        float lerp=t2\/(dd2-tt1); \n        for (int j=0;j<100;j++){\n            vec2 rawdir=normalize(noise( vec2( float(j)\/100. , hash(float(j)+nt )*.5 )) );\n\n            float v=atan(rawdir.y,rawdir.x)+t*10.*(hash(nt) -.5);\n            float r=0.05*sin(atan(rawdir.y,rawdir.x)*float(num) +t*10.*(hash(nt) -.5) ) ;\n            vec2 q=uv-getPos2(ep, t2-0.2 * explodeStep, r* rawdir );\n            float flicker=circleflickerPow*hash(float(j)+lerp);\n            col+=drawParticle(q, (0.01+flicker)*abs(cos(lerp*.5*pi) ), color );\n        }\n\n        \/\/boom light\n        col+=mix( mix(color, vec3(0.), clamp(3.*lerp ,0.,1.)  ) ,vec3(0.) , drawPoint(0.0,.7,uv-ep) );\n    }\n\treturn col;\n}\n\nvec3 drawFlyCircle(in vec2 uv,in vec2 o,in float off,in vec3 color,in vec2 initDir, float r ){\n    float t=iGlobalTime+off;\n    vec3 col=vec3(0.);\n    #ifdef playLevel\n    if (t<0. || t>dd2){\n        return col;\n    }\n    #else\n    if (t<0. || t<dd2){\n     \treturn col;   \n    }\n        \n    #endif\n\n    float nt=floor(t\/dd2)+off+o.x+o.y;\n    t=mod (t,dd2 );\n    \n\t\n    if (t<tt1){\n        for (int i=0;i<til;i++){\n            float id=float(i)\/float(til);\n            vec2 q=uv-getPos(o,t-lengthStep*id,initDir)+noise( vec2((id+hash(nt)+t )*.65) )*0.005;\n            col+=drawParticle(q,mix(0.02,0.012,id) ,mix(color,vec3(0.),id ));\n            \n        }\n        \/\/flare\n     \tvec2 flarePos=uv-getPos(o,t,initDir );\n        col+=mix( color*mix( 1.0,0.0, dot(flarePos,flarePos)*800. ), \n                 vec3(0.) , drawPoint( (0.0003*abs(.1+ sin(t*.9+pi*.3) ) )*powFunc( atan( flarePos.y, flarePos.x )*4. ) ,.01,flarePos) );\n    }\n    else{\n\t\tfloat t2=t-tt1;\n        vec2 ep=getPos(o,tt1,initDir);\n        float lerp=t2\/(dd2-tt1);\n        for (int j=0;j<50;j++){\n            vec2 rawdir=normalize(noise( vec2( float(j)\/50. , hash(float(j)+nt )*.5 )) );\n            vec2 q=uv-getPos2(ep, t2,r* rawdir );\n            \n            float flicker=circleflickerPow*hash(float(j)+lerp);\n            col+=drawParticle(q, (0.01+flicker)*abs(cos(lerp*.5*pi) ), color );\n        }\n\n        \/\/boom light\n        col+=mix( mix(color, vec3(0.), clamp(3.*lerp ,0.,1.)  ) ,vec3(0.) , drawPoint(0.0,.7,uv-ep) );\n    }\n\treturn col;\n}\n\n\n\nvec3 drawFly(in vec2 uv,in vec2 o,in float off,in vec3 color,in vec2 initDir ){\n   \tfloat t=iGlobalTime+off;\n    vec3 col=vec3(0.);\n    \n\n    #ifdef playLevel\n    if (t<0. || t>dd1){\n        return col;\n    }\n    #else\n    if (t<0. || t<dd1){\n     \treturn col;   \n    }\n        \n    #endif\n\n    float nt=floor(t\/dd1)+off+o.x+o.y;\n    t=mod (t,dd1 );\n    \n\n    if (t<tt1){\n        for (int i=0;i<til;i++){\n            float id=float(i)\/float(til);\n            vec2 q=uv-getPos(o,t-lengthStep*id,initDir)+noise( vec2((id+hash(nt)+t )*.65) )*0.005;\n            col+=drawParticle(q,mix(0.02,0.012,id),\n                              mix(color,vec3(0.),id ));\n            \n        }\n        \/\/flare\n     \tvec2 flarePos=uv-getPos(o,t,initDir );\n        col+=mix( color*mix( 1.0,0.0, dot(flarePos,flarePos)*800. ), \n                 vec3(0.) , drawPoint( (0.0003*abs(.1+ sin(t*.9+pi*.3) ) )*powFunc( atan( flarePos.y, flarePos.x )*4. ) ,.01,flarePos) );\n    }\n    else{\n\t\tfloat t2=t-tt1;\n        vec2 ep=getPos(o,tt1,initDir);\n        float lerp=t2\/(dd1-tt1);\n        for (int i=0;i<etil;i++){\n            float id=float(i)\/float(etil);\n            for (int j=0;j<numParticle;j++){\n                vec2 dir=noise( vec2( float(j)\/float(numParticle) ,\n                                     hash(float(j)+nt )*.5 ) ) *explodePow;\n                    \n                vec2 q=uv-getPos(ep, t2-0.2*explodeStep*id,dir );\n                float flicker=normalflickerPow*hash(float(j)+lerp);\n                col+=drawParticle(q, (0.01+flicker)*abs(cos(lerp*.5*pi) ), color*mix(1.,0.,id ) );\n            }\n        }\n\n        \/\/boom light\n        col+=mix( mix(color, vec3(0.), clamp(3.*lerp ,0.,1.)  ) ,vec3(0.) , drawPoint(0.0,.7,uv-ep) );\n        \n    }\n    \/\/return mix(fcol,ecol, 0.5*sign(t-tt1)+0.5 );\n\treturn col;\n}\n\nfloat drawMoon(in vec2 p){\n    const float r=.18;\n\tfloat moon=smoothstep(r,r+0.01 ,dot(p,p)*4.4 ) ;\n    vec2 lp=p-vec2(-0.05,0.01);\n    float lightMoon=1.-( smoothstep(r-0.01,r+0.03 ,dot(lp,lp)*5.1 )-moon );\n\treturn clamp(lightMoon,0.0,1.0);\n}\n\nvec3 randomFire(vec2 p,vec2 uv,float time,vec2 os){\n \tvec3 col=vec3(0.);\n    vec2 rnd = vec2(0.3, 0.7);\n    for (int i=0;i<10;i++){\n        rnd.x=2.* ( hash( float(i)*0.3+time)-0.5 );\n        rnd.y=hash( float(i*10)*.3+2.+time) ;\n        vec3 color=vec3 ( hash( float(i) ),hash( float(i)+1. ),hash( float(i)+2. ) );\n\n    \tcol+= drawFly(uv,p,time-float(i)*0.25,color, vec2( rnd.x*0.1+os.x , os.y + rnd.y*0.05 ) );\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n\n    vec2 p = fragCoord.xy \/ iResolution.xy;\n   \tfloat ratio= iResolution.y\/iResolution.x;\n    vec2 uv=p;\n    uv.y*=ratio;\n\n    \/\/bg sky\n    float lerp=smoothstep(.0, 1. , uv.y );\n    vec3 col=mix(vec3(.1,.2,.3), vec3(.1,.1,.1) , sqrt(uv.y)  );\n    \n    vec2 moonPos=uv-vec2(.568,.29);\n\t\/\/bg stars\n    col.xyz+=mix(vec3(0.) , sign ( vec3( clamp(rand(uv)-0.9985,0.,1. ) ) ) ,   clamp (sign (dot(moonPos,moonPos)-0.05),0.,1. ) );\n\n    vec3 moonCol=vec3(0.45,0.3,0.3);\n    col=mix (moonCol,col, drawMoon(moonPos ) );\n    \n    \n    \/\/firework level sequence\n    #ifdef playLevel\n\n    float stage=0.;\n    col+=drawFly( uv,vec2(0.65,0.0),0.,vec3(.9,.6,.0), vec2(-0.1,.4) );\n    col+=drawFly( uv,vec2(0.45,0.0),-4.0,vec3(.3,.5,.9), vec2(.1,0.35) );\n\n    col+=drawFly( uv,vec2(0.65,0.0),-8.5,vec3(.9,.1,.0), vec2(-0.1,.4) );\n    col+=drawFly( uv,vec2(0.45,0.0),-8.5,vec3(.3,.2,.9), vec2(0.1,0.35) );\n\n    col+=drawFly( uv,vec2(0.65,0.0),-12.5,vec3(.6,.9,.0), vec2(-0.15,.35) );\n    col+=drawFly( uv,vec2(0.5,0.0),-12.5,vec3(.9,.9,.9), vec2(0.0,.4) );\n    col+=drawFly( uv,vec2(0.45,0.0),-12.5,vec3(.9,.5,.1), vec2(.15,0.35) );\n\n\n    stage-=16.;\n    for (float i=0.;i<5.;i++){\n        col+=drawFly( uv,vec2(0.3+0.1*i,0.0),stage-0.5*i,vec3(.6,.4,.0), vec2(0.0,.4) );\n    }\n\/*\n    stage-=5.0;\n    for (float i=0.;i<5.;i++){\n        col+=drawFly( uv,vec2(0.7-0.1*i,0.0),stage-i*0.5,vec3(.6,.4,.0), vec2(0.0,.4) );\n    }\n\n    \n    stage-=5.;\n\n\n    col+=drawFly( uv,vec2(0.4,0.0),stage,vec3(.6,.3,.5), vec2(0,0.3) );\n    col+=drawFly( uv,vec2(0.6,0.0),stage,vec3(.6,.3,.5), vec2(0,0.3) );\n\n\n    stage-=2.;\n    col+=drawFly( uv,vec2(0.4,0.0),stage,vec3(.3,.5,.0), vec2(0,0.35) );\n    col+=drawFly( uv,vec2(0.6,0.0),stage,vec3(.3,.5,.0), vec2(0,0.35) );\n\n    stage-=2.;\n    col+=drawFly( uv,vec2(0.4,0.0),stage,vec3(.1,.4,.4), vec2(0,0.4) );\n    col+=drawFly( uv,vec2(0.6,0.0),stage,vec3(.1,.4,.4), vec2(0,0.4) );\n*\/\n    stage-=4.;\n    col+=randomFire(vec2(0.5,0.0),uv,stage,vec2(0.,0.35) );\n\n    stage-=5.;\n    for (float i=0.;i<5.;i++){\n        col+=drawFly( uv,vec2(0.7-i*0.1,0.0),stage-i*0.5,vec3(.1,.4,.6), vec2(0.1,.4) );\n    }\n   \n    stage-=4.;\n    for (float i=0.;i<5.;i++){\n        col+=drawFly( uv,vec2(0.7-i*0.1,0.0),stage-i*0.5,vec3(.6,.2,.6), vec2(-0.1,.4) );\n    }\n   \n    stage-=4.;\n    for (float i=0.;i<5.;i++){\n        col+=drawFly( uv,vec2(0.7-i*0.1,0.0),stage-i*0.5,vec3(.1,.4,.6), vec2(0.1,.4) );\n        col+=drawFly( uv,vec2(0.7-i*0.1,0.0),stage-2.0+i*0.5,vec3(.6,.2,.6), vec2(-0.1,0.4) );\n    }\n \n    stage-=4.;\n    for (float i=0.;i<5.;i++){\n        col+=drawFly( uv,vec2(0.7-i*0.1,0.0),stage-2.0+i*0.5,vec3(.2,.4,.4), vec2(0.1,.4) );\n        col+=drawFly( uv,vec2(0.7-i*0.1,0.0),stage-i*0.5,vec3(.6,.2,.2), vec2(-0.1,0.4) );\n    }\n   \/*\n    stage-=4.;\n    for (float i=0.;i<5.;i++){\n        col+=drawFly( uv,vec2(0.7-i*0.1,0.0),stage-i*0.5,vec3(.6,.4,.0), vec2(0.1,.4) );\n        col+=drawFly( uv,vec2(0.7-i*0.1,0.0),stage-2.0+i*0.5,vec3(.6,.4,.0), vec2(-0.1,0.4) );\n    }\n    \n    for (float i=0.;i<5.;i++){\n        col+=drawFly( uv,vec2(0.7-i*0.1,0.0),stage-2.0+i*0.5,vec3(.6,.4,.0), vec2(0.1,.4) );\n        col+=drawFly( uv,vec2(0.7-i*0.1,0.0),stage-i*0.5,vec3(.6,.4,.0), vec2(-0.1,0.4) );\n    }\n*\/\n    stage-=4.;\n\n    col+=drawFlyHeart( uv,vec2(0.5,0.0),stage,vec3(.7,.4,.6), vec2(0.0,0.4) ,0.01);\n    \n    stage-=6.;\n    col+=drawFlyCircle( uv,vec2(0.3,0.0),stage,vec3(.1,.4,.6), vec2(0.0,0.35) ,0.06);\n    col+=drawFlyCircle( uv,vec2(0.7,0.0),stage,vec3(.1,.4,.6), vec2(0.0,0.35) ,0.06);\n   \n   \tstage-=2.;\n    col+=drawFlyFlower( uv,vec2(0.4,0.0),stage,vec3(.7,.4,.1), vec2(0.0,0.4) ,5);\n    col+=drawFlyFlower( uv,vec2(0.6,0.0),stage,vec3(.7,.4,.1), vec2(0.0,0.4) ,5);\n    \n    stage-=2.;\n    col+=drawFlyCircle( uv,vec2(0.3,0.0),stage,vec3(.6,.5,.6), vec2(0.0,0.35) ,0.06);\n    col+=drawFlyCircle( uv,vec2(0.7,0.0),stage,vec3(.6,.5,.6), vec2(0.0,0.35) ,0.06);\n    \n    stage-=2.;\n    col+=drawFlyFlower( uv,vec2(0.4,0.0),stage,vec3(.1,.4,.7), vec2(0.0,0.4) ,5);\n    col+=drawFlyFlower( uv,vec2(0.6,0.0),stage,vec3(.1,.4,.7), vec2(0.0,0.4) ,5);\n\n    stage-=4.;\n    for (float i=0.;i<4.;i++){\n        col+=drawFlyCircle( uv,vec2(0.2+i*0.2,0.0),stage-i,vec3(.6,.2,.0), vec2(0.0,.4),0.06 );\n    }\n    \n    stage-=.5;\n    for (float i=0.;i<3.;i++){\n\t\tcol+=drawFlyCircle( uv,vec2(0.3+i*0.2,0.0),stage-i,vec3(.2,.4,.6), vec2(0.0,0.35),0.06 );\n    }\n    \n    stage-=5.;\n    for (float i=0.;i<4.;i++){\n        col+=drawFlyCircle( uv,vec2(0.2+i*0.2,0.0),stage,vec3(.6,.1,.0), vec2(0.0,.4),0.06 );\n    }\n    \n    for (float i=0.;i<3.;i++){\n\t\tcol+=drawFlyCircle( uv,vec2(0.3+i*0.2,0.0),stage,vec3(.2,.4,.6), vec2(0.0,0.35),0.06 );\n    }\n    \n    \/\/stage-=4.;\n    \/\/col+=randomFire(vec2(0.5,0.0),uv,stage,vec2(0.0,0.36) );\n    \n    stage-=2.;\n    col+=drawFlyFlower( uv,vec2(0.2,0.0),stage,vec3(.7,.4,.1), vec2(0.0,0.35) ,4);\n\tcol+=drawFlyFlower( uv,vec2(0.8,0.0),stage,vec3(.7,.4,.1), vec2(0.0,0.35) ,4);\n    \n\n    stage-=4.;\n        \/*\n    for (float i=0.;i<5.;i++){\n        col+=drawFlyHeart( uv,vec2(0.3,0.0),stage-i*5.0,vec3(.7,.4,.6), vec2(-0.05,0.38) ,-0.1);\n        col+=drawFlyHeart( uv,vec2(0.7,0.0),stage-i*5.0,vec3(.7,.4,.6), vec2(0.05,0.38) ,0.1);\n    }\n          *\/           \n  \n    for (float i=0.0;i<5.;i++){\n    \t col+=drawFly( uv,vec2(0.6,0.0),stage-i*10.5,vec3(.7,.3,.0), vec2(0.07,0.36) );\n        col+=drawFlyCircle(uv,vec2(0.6,0.0),stage-i*10.5-1.0,vec3(.6,.4,.0), vec2(-0.1,.3), 0.05 );\n        col+=drawFlyStar(uv,vec2(0.4,0.0),stage-i*10.5-2.5,vec3(.0,.4,.6), vec2(0.1,0.4) );\n \t\tcol+=drawFlyFlower( uv,vec2(0.5,0.0),stage-i*10.5-4.5,vec3(.2,.6,.1), vec2(-.13,0.28) , 5);\n    \tcol+=drawFlyHeart( uv,vec2(0.5,0.0),stage-i*10.5-5.5,vec3(.7,.4,.6), vec2(0.0,0.45) , -0.05);   \n    }\n    \n\t#else\n    \n\n\t\/\/col+=randomFire(vec2(0.5,0.0),uv,0.,vec2(0.0,0.36) );\n\n\n\t\/*\n    for (float i=0.0;i<10.;i++){\n\t    col+=drawFly( uv,vec2(0.6,0.0),-i*10.5,vec3(.7,.3,.0), vec2(0.07,0.36) );\n        col+=drawFlyCircle(uv,vec2(0.6,0.0),-i*10.5-1.0,vec3(.6,.4,.0), vec2(-0.1,.3), 0.05 );\n        col+=drawFlyStar(uv,vec2(0.4,0.0),-i*10.5-2.5,vec3(.0,.4,.6), vec2(0.1,0.4) );\n \t\tcol+=drawFlyFlower( uv,vec2(0.5,0.0),-i*10.5-4.5,vec3(.2,.6,.1), vec2(0.0,0.35) , 5);\n    \tcol+=drawFlyHeart( uv,vec2(0.5,0.0),-i*10.5-5.5,vec3(.7,.4,.6), vec2(-0.13,0.38) , -0.1);\n    }\n*\/\n    \tcol+=drawFly( uv,vec2(0.6,0.0),0.0,vec3(.7,.3,.0), vec2(0.07,0.36) );\n   \t\tcol+=drawFlyCircle(uv,vec2(0.6,0.0),-1.0,vec3(.6,.4,.0), vec2(-0.1,.3), 0.05 );\n        col+=drawFlyStar(uv,vec2(0.4,0.0),-2.5,vec3(.0,.4,.6), vec2(0.1,0.4) );\n \t\tcol+=drawFlyFlower( uv,vec2(0.5,0.0),-4.5,vec3(.2,.6,.1), vec2(0.0,0.35) , 5);\n    \tcol+=drawFlyHeart( uv,vec2(0.5,0.0),-5.5,vec3(.7,.4,.6), vec2(-0.13,0.38) , -0.1);\n\n\t\n\t#endif\n    \n\t\/\/ground\n    vec3 earthCol=vec3(0.1,0.1,0.1);\n    float g=0.02*exp( (uv.x )*1.2);\n    col=mix (earthCol,col, smoothstep(g,g+0.015 ,abs(uv.y+0.02) )  );\n \t\n    \/\/grass\n\n    \/\/vec3 grassCol=vec3(.5,.7,.4);\n #ifdef drawGrass\n    float it=0.;\n    for (int i=0; i<grassCount;i++){\n        it+=1.;\n\t    float h=.04+it*hash(it)*0.0008;\n        vec2 gp=uv-vec2(it*1.\/float(grassCount)+hash(it)*0.02 +mix(0.,0.15,uv.y)* cos(iGlobalTime*(1.+0.5* sin(it) ) +it) ,h+0.0005*it);\n        float w=mix(.0015,0.,(uv.y+gp.y)\/h );\n\t    col=mix(earthCol,col, 1.- (1.- smoothstep(h,h+0.001, abs(gp.y ) )  ) * (1.- smoothstep(w,w+0.001, abs(gp.x-0.04*cos(12.*gp.y+it\/100.*pi) ) )  ) );        \n    }\n#endif\n    \n   \/\/float ll=0.1*hash(uv.x*1.);\n    \/\/\/\/ll=1.0*noise( uv*40. ).x;\n    \/\/col=mix(vec3(1.),col,smoothstep(ll,ll+0.01, p.y) );\n    fragColor=vec4(col,0.  );\n\n}","name":"","description":"","type":"image"}]}}