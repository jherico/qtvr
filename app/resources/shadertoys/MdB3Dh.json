{"Shader":{"ver":"0.1","info":{"id":"MdB3Dh","date":"1386891792","viewed":232,"name":"Sunset over the sea","username":"4rknova","description":"Move along, nothing to see here.","likes":1,"published":3,"flags":0,"tags":["raymarching","ocean"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ by nikos papadopoulos, 4rknova \/ 2013\n\/\/ Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n#define RMARCH_MAX_STEPS \t280\n#define FOG_COLOR\t\t\tvec3(.65, .4875, .1625)\n#define FOG_K\t\t\t\t.021\n\n#define EPS \t\t\t\t.001\n#define PI\t\t\t\t\t3.14159265359\n#define RADIAN\t\t\t\t180. \/ PI\n\nfloat hash(in vec3 p)\n{\n    return fract(sin(dot(p,vec3(127.1,311.7, 321.4)))*43758.5453123);\n}\n\nfloat noise(in vec3 p)\n{\n    vec3 i = floor(p);\n\tvec3 f = fract(p); \n\tf *= f * (3.-2.*f);\n\n    return mix(\n\t\tmix(mix(hash(i + vec3(0.,0.,0.)), hash(i + vec3(1.,0.,0.)),f.x),\n\t\t\tmix(hash(i + vec3(0.,1.,0.)), hash(i + vec3(1.,1.,0.)),f.x),\n\t\t\tf.y),\n\t\tmix(mix(hash(i + vec3(0.,0.,1.)), hash(i + vec3(1.,0.,1.)),f.x),\n\t\t\tmix(hash(i + vec3(0.,1.,1.)), hash(i + vec3(1.,1.,1.)),f.x),\n\t\t\tf.y),\n\t\tf.z);\n}\n\nfloat fbm(vec3 p)\n{\n\treturn  .151 * noise(1.242 * p + iGlobalTime * .2362)\n\t\t   +.203 * noise(1.436 * p + iGlobalTime * .4121)\n\t\t   +.512 * noise(1.181 * p + iGlobalTime * .3360);\n}\n\nvec3  cubemap(vec3 d, vec3 c1, vec3 c2)\n{\n\treturn fbm(d) * mix(c1, c2, clamp(d * .5 + .5, 0. ,1.));\n}\n\nvec3 sun(vec3 d, vec3 bg)\n{\n\tvec3 r = bg;\n\t\n\tfloat k = 2. - length(vec2(d.x * 2., d.z + 1. ));\n\t\t\n\tif (k < 10.) {\n\t\tr = .21 * k * FOG_COLOR + bg;\n\t}\n\t\n\treturn r;\n}\n\nfloat dst(in vec3 p)\n{\n\tfloat t = iGlobalTime * 2.;\n\treturn dot(p + 0.1 *\n\t\t   vec3(hash(vec3(p-t)), .5 * fbm(2.5 * p - vec3(t, p.z + t, t - p.x)), hash(p*t)), vec3(0.,1.,0.));\n}\n\nvec3 nrm(vec3 pos, float d)\n{\n\treturn normalize(\n    \tvec3(dst(vec3(pos.x + EPS, pos.y, pos.z)),\n\t\t\t dst(vec3(pos.x, pos.y + EPS, pos.z)),\n\t         dst(vec3(pos.x, pos.y, pos.z + EPS))) - d);\n}\n\nvec3 scene_shade(vec3 p, vec3 n, vec3 c)\n{\n\tvec3 l = normalize(c-p);\n\n\treturn vec3(.4, .3, .4) * dot(l, n) +\n\t\t \tvec3(1., .7, .4) *\n\t\t  pow(abs(dot(reflect(normalize(vec3(0., 128.,-256.)), n), l)), 256.);\n}\n\nbool rmarch(vec3 ro, vec3 rd, out vec3 p, out vec3 n)\n{\n\tp = ro;\n\tvec3 pos = p;\n\tfloat d = 1.;\n\n\tfor (int i = 0; i < RMARCH_MAX_STEPS; i++) {\n\t\td = dst(pos);\n\t\tif (d < EPS) {\n\t\t\tp = pos;\n\t\t\tbreak;\n\t\t}\n\t\tpos += d * rd;\n\t}\n\tn = nrm(p, d);\n\treturn d < EPS;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tvec2 uvn = (2.*uv-1.)\n\t\t\t * vec2(iResolution.x \/ iResolution.y, 1.);\n\t\n\tvec3 ro, ct, cu;\n\tro = vec3(0., 3.75 + .5 *noise(vec3(iGlobalTime)) * .3, 0.);\n\tct = vec3(0., 1., -100.);\n\tct.y += ro.y;\n\tro.z += ct.y * .1;\n\tcu = normalize(vec3(sin(iGlobalTime * 1.5)*.03,1.,0.));\n\t\n\tvec3 rd = normalize(vec3(uvn.x, uvn.y, 1. \/ tan(30. * RADIAN)));\n\t\n\tvec3 cd = ct - ro;\n\n\tvec3 rx,ry,rz;\n\trz = normalize(cd);\n\trx = normalize(cross(rz, cu));\n\try = normalize(cross(rx, rz));\n\t\n\tmat3 tmat = mat3(rx.x, rx.y, rx.z,\n\t\t\t  \t\t ry.x, ry.y, ry.z,\n\t\t\t\t\t rz.x, rz.y, rz.z);\n\n\trd = normalize(tmat * rd);\n\t\n\tvec3 sp, sn, col;\n\t\n\tif (dot(rd, vec3(0.,1.,0.)) < -0.05 ? rmarch(ro, rd, sp, sn): false)\n\t{\n\t\tcol = scene_shade(sp, sn, ro);\n\t\tcol += FOG_COLOR * FOG_K * length(ro - sp);\n\t}\n\telse\n\t{\n\t\tcol = 0.08 * mix(rd, mix(vec3(dot(vec3(.8125, .7154, .9721), vec3(1.4))), vec3(1.4), 1.3), 1.5)\n\t\t\t+ 0.08 + mix(vec3(.65), vec3(.15,.25,.52) + .41 * cubemap(rd.zxy * 12.4  + cos(0.0021 * iGlobalTime),vec3(.6,.4, 0.), vec3(.0,.4,0.))\n\t\t\t- .36 * cubemap(rd.zyx * 8.3  + sin(EPS * iGlobalTime),vec3(1.,.1,.1), vec3(1.,.7,.2)),\n\t\t\tvec3(rd.y * 9.));\n\t\t\n\t\tcol = sun(rd, col);\n\t}\n\t\n\tfragColor = vec4(col * smoothstep(EPS, 3.5, iGlobalTime), 1.);\n}","name":"","description":"","type":"image"}]}}