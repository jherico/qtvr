{"Shader":{"ver":"0.1","info":{"id":"XljGR1","date":"1426900343","viewed":650,"name":"For CoderDojo","username":"XIX","description":"Very Very Simple Examples","likes":0,"published":3,"flags":0,"tags":["simple"],"hasliked":0},"renderpass":[{"inputs":[{"id":31,"src":"\/presets\/webcam.png","ctype":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\n\n\n\n\n\n\/\/ default test\nvoid mainImage_00( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iGlobalTime),1.0);\n}\n\n\n\n\n\n\n\/\/ single color output\nvoid mainImage_01( out vec4 fragColor, in vec2 fragCoord )\n{\n\/\/\t\t\t\t\t\tred\t\tgreen\tblue\talpha\n\tfragColor = vec4(\t0.0 ,\t0.5 ,\t0.0 ,\t1.0 );\n}\n\n\n\n\n\n\n\/\/ gradient left->right color output\nvoid mainImage_02( out vec4 fragColor, in vec2 fragCoord )\n{\n\/\/ uv.x and uv.y go from 0.0 to 1.0 across and up the screen\n    vec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec4 c0 = vec4( 0.0 , 0.5 , 0.0 , 1.0 );\n    vec4 c1 = vec4( 1.0 , 0.0 , 0.0 , 1.0 );\n    \n\/\/\n\tfragColor = mix(c0,c1,uv.x);\n}\n\n\n\n\n\n\/\/ draw a circle where the mouse is\n\/\/ iMouse contains the mouse position when clicked\n\/\/ use the distance from there to the current pixel to draw a circle\nvoid mainImage_03( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 c0 = vec4( 0.0 , 0.5 , 0.0 , 1.0 );\n    vec4 c1 = vec4( 1.0 , 1.0 , 1.0 , 1.0 );\n    float d = distance(iMouse.xy,fragCoord.xy) \/ 16.0; \/\/ \/size of circle\n\tfragColor = mix(c1,c0,min(1.0,pow(d,4.0)));\n}\n\n\n\n\n\n\/\/ draw a texture (select webcam in chanel 0 )\nvoid mainImage_04( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tfragColor = texture2D(iChannel0,uv);\n\n\/\/ make image brighter?\n\/\/\tfragColor.rgb = sqrt(fragColor.rgb);\n}\n\n\n\n\n\n\n\n\/\/ (select webcam or something else in iChannel0 )\n\/\/ draw a texture and draw a circle over the top\n\/\/ where the mouse is\nvoid mainImage_05( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec4 c0 = texture2D(iChannel0,uv);\n    vec4 c1 = vec4( 1.0 , 1.0 , 1.0 , 1.0 );\n    float d = distance(iMouse.xy,fragCoord.xy) \/ 16.0; \/\/ \/size of circle\n\tfragColor = mix(c1,c0,min(1.0,pow(d,4.0)));\n}\n\n\n\n\n\n\/\/ distort a texture\nvoid mainImage_06( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    vec2 mm = iMouse.xy \/ iResolution.xy;\n    uv=uv-mm;\n\tuv=uv*pow(length(uv),0.25);\n\tuv=uv+mm;\n\tvec4 c0 = texture2D(iChannel0,uv);\n\tvec4 c1 = vec4( 1.0 , 1.0 , 1.0 , 1.0 );\n\tfloat d = distance(iMouse.xy,fragCoord.xy) \/ 4.0; \/\/ \/size of circle\n\tfragColor = mix(c1,c0,min(1.0,pow(d,4.0)));\n}\n\n\n\n\n\n\n\n\/\/ choose which one of the above mainImage_XX functions to run\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    mainImage_01(fragColor,fragCoord);\n}\n\n\n\n\n\n","name":"","description":"","type":"image"}]}}