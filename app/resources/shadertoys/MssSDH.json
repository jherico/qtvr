{"Shader":{"ver":"0.1","info":{"id":"MssSDH","date":"1400605310","viewed":781,"name":"parabolic mirror","username":"FabriceNeyret2","description":"reflection by a parabolic mirror<br\/><br\/>(tune light position with mouse)","likes":5,"published":3,"flags":0,"tags":["optic"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define NB_RAY 80.\n#define x0 .85\n\n\n#define PI 3.1415927\nfloat t = .3*iGlobalTime;\n\n\/\/ pow allowing -int\nfloat mypow(float x, int n) {\t\n\treturn pow(abs(x),float(n)) * ( (2*(n\/2)==n) ? 1. : sign(x) ); \n} \n\n\n\/\/ antialiased cos\nfloat icos(float a) {\n\tfloat da = length(vec2(dFdx(a),dFdy(a)));\n\treturn (sin(a+da)-sin(a-da))\/(2.*da);\t\t\t\t  \n}\n\n\/\/ antialiased cos^n\nfloat icospow(float a, int n) { \/\/ for odd n only\n\t\/\/ cos^(2n+1) = cos.(1-sin\u00b2)^n = cos.sum{ Ci,n. (-sin\u00b2)^i }\n\t\/\/ -> int = sum{ Ci,n. (-1)^i.sin^(2i+1)\/(2i+1) }\n\tfloat da = length(vec2(dFdx(a),dFdy(a)));\n\n\tfloat s = 0., C = 1.; n = (n-1)\/2;\t\n\tfor (int i=0; i<=50; i++)\t{\n\t\tif (i>n) return s\/(2.*da);\n\t\t\n\t\tint p = 2*i+1;\n\t\ts += C*( mypow(sin(a+da),p) - mypow(sin(a-da),p) )\/float(p);\n\t\tC *= -float(n-i)\/max(float(i),1.);\n\t}\n\treturn s\/(2.*da);\t\n}\n\n\/\/ antialiased exp\nfloat iexp(float a) {\n\tfloat da = length(vec2(dFdx(a),dFdy(a)));\n\treturn (exp(a+da)-exp(a-da))\/(2.*da);\t\n}\n\/\/ antialiased gauss\nfloat igauss(float v, float s) {\n\t\/\/ exp(-n\/2.(x)^2) ~ cos(x)^n\n\t\/\/ -> exp(-1\/2.(x\/s)^2) ~ cos(x)^(1\/s^2) ~ cos(x\/(s.sqrt(n)))^n\n\tint n = 11; \/\/ int(.5+1.\/(s*s)); n=2*(n\/2)+1;\n\tv \/= s*sqrt(float(n));\n\tif (abs(v)>1.5) return 0.;\n\treturn icospow(v,n);\n}\n\t\n\/\/ -----------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy \/ iResolution.y;\n\tvec2 m = floor(iMouse.xy\/2.)*2. \/ iResolution.y;\n\tif (iMouse.z<=0.) \n\t\tm = (.5+.3*vec2(cos(t)+sin(5.234*t)\/2.,sin(1.351*t)-cos(7.453*t)\/2.)\/1.5)*vec2(1.8,1.);\n\n\tfloat ray=0., reflected=0.;\n\t\n\tfor (float i=0.; i<NB_RAY; i++) {\n\t\t\n\t\t\/\/ ray dir\n\t\tfloat c=cos(2.*PI*i\/NB_RAY), s=sin(2.*PI*i\/NB_RAY);\n\n\t\t\/\/ rays from mouse to mirror\n\t\tvec2  n = vec2(s,-c); \t\t\/\/ ortho to ray. ray: n.(p-p0) = 0\n\t\tfloat v = dot(p-m,n), d;  \n\t\tif (i<NB_RAY\/2.) ray += exp(-2e5*v*v);\n\t\t\n\t\t\/\/ intersection on parabolic miror at p0\n\t\tfloat x = m.x-x0, \n\t\t\t  A = c*c, B = 2.*c*x-s, C = x*x-m.y;\n\t\tif (A<1e-4) \n\t\t\td = -C\/B;\n\t\telse {\n\t\t\tfloat D = B*B-4.*A*C; \n\t\t\tif (D<0.) continue;\n\t\t\td = (-B+sqrt(D))\/(2.*A);\n\t\t}\n\t\tvec2 p0 = m+d*vec2(c,s); \/\/ point on mirror for ray i\n\t\t\n\t\t\/\/ normal at p0\n\t\tx = p0.x-x0;  vec2 N = normalize(vec2(1.,2.*x));\n\t\t\/\/ reflected ray = sym(ray) relative to N\n\n\t\tn = 2.*dot(N,n)*N-n;   \t\t\/\/ sym \n\t\tv = dot(p-p0,n);      \/\/ reflected ray: n.(p-p0) = 0\n\t\treflected += exp(-1e5*v*v);\n\t}\n\t\n\t\/\/ draw rays clamped by the mirror\n\tfloat x = p.x-x0, v = p.y-x*x;\n\tfragColor = (v>0.) ? vec4(reflected,ray*(1.-reflected),0.,1.) : vec4(0.);\n\n\t\/\/ draw mirror\n\tfragColor += vec4(smoothstep(.0001,0.,v*v));\n}","name":"","description":"","type":"image"}]}}