{"Shader":{"ver":"0.1","info":{"id":"4ssXRl","date":"1413723008","viewed":325,"name":"Flag: Greece","username":"4rknova","description":"Flag of Greece. (1978 to date)","likes":3,"published":3,"flags":0,"tags":["flag","greece"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ by Nikos Papadopoulos, 4rknova \/ 2014\n\/\/ Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n#define EPS .001\n\n#define SUPERSAMPLING 4.\n#define ANIMATE\n\n#define FLAG_GR_PROP      3.\/2.\n#define FLAG_GR_COL_BLUE  vec3(.14117647058, .25098039215, .94901960784)\n#define FLAG_GR_COL_WHITE vec3(1)\n#define FLAG_GR_LINES     9.\n#define FLAG_GR_CROSS_X   2.\/5. * FLAG_GR_PROP\n#define FLAG_GR_CROSS_Y   4.\/9.\n\nvec3 flag_gr(in vec2 p) {\n    if (p.x > FLAG_GR_PROP || p.x < 0. ||\n        p.y > 1. || p.y <0.) return vec3(0.);\n    \n    float st = floor(FLAG_GR_LINES * p.y);\n    vec3 c = FLAG_GR_COL_BLUE;\n\t\n    \/\/ Cross\n    if (p.x < FLAG_GR_CROSS_X && p.y > FLAG_GR_CROSS_Y)\n    {\n        if (st == 6. ||\n           length(p.x - FLAG_GR_CROSS_X \/ 2.) < (1. \/ FLAG_GR_LINES * .5)\n        ) c = FLAG_GR_COL_WHITE;\n    }\n    \/\/ Stripes\n    else if (mod(st, 2.) > 0.) c = FLAG_GR_COL_WHITE;\n\t\n\treturn c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ar = iResolution.x\/iResolution.y;\n\tvec2 uv = (fragCoord.xy \/ iResolution.xy) * vec2(ar, 1);\n    \n    float zoom = 1.4;\n    vec2  pos  = vec2(.5,.25);\n    \n    uv = uv * zoom - pos; \/\/ Position the flag\n    vec2 pv = uv;\n\n#ifdef ANIMATE \/\/ Wave animation    \n    vec2 cv = uv;    \n\tpv.y = uv.y + (.3 + cv.x) * pow(sin(cv.x * 6. - iGlobalTime * 6.0), 2.) * .032;\n    pv.x = uv.x + cv.y * cos(cv.x - cv.y * 2. - iGlobalTime * .5) * .05;\n#endif\n    \n    vec3 col = vec3(0);\n\n#ifdef SUPERSAMPLING\n    \/\/ Antialiasing via supersampling\n    float e = 1. \/ min(iResolution.y , iResolution.x) \/ zoom;\n    for (float i = -SUPERSAMPLING; i < SUPERSAMPLING; ++i) {\n        for (float j = -SUPERSAMPLING; j < SUPERSAMPLING; ++j) {\n    \t\tcol += flag_gr(pv + vec2(i, j) * (e\/SUPERSAMPLING)) \n                \/ (4.*SUPERSAMPLING*SUPERSAMPLING);\n        }\n    }\n#else\n     col = flag_gr(pv);\n#endif\n    \n    float s = 1.;\n    \n#ifdef ANIMATE\n    s = pow(dot(normalize(vec3(pv - uv, 1)), normalize(vec3(0, 25, 4))), .4);\n#endif\n    \n\tfragColor = vec4(col * s, 1);\n}","name":"","description":"","type":"image"}]}}