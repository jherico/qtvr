{"Shader":{"ver":"0.1","info":{"id":"4dlGW8","date":"1368636703","viewed":624,"name":"Eye sketch","username":"Dave_Hoskins","description":"'Sketching' using triangles. * SQUINT * <img src=\"\/img\/emoticonHappy.png\"\/>","likes":18,"published":3,"flags":0,"tags":["eyes","triangles","sketch"],"hasliked":0},"renderpass":[{"inputs":[{"id":9,"src":"\/presets\/tex08.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Eye sketch - by Dave Hoskins 2013\n\/\/ Made with Shadertoy\n\nvec3 col = vec3(1.0); \/\/ Start white...\nvec2 uv;\n#define INV_SCALE 1.0\/vec2(326.0, 183.0)\n#define ADD_DITHER\nvec2 coord;\n\n#ifdef ADD_DITHER\nvec2 randValues = vec2(0.03, 0.015);\nvec2 Hash2( vec2 x )\n{\n\tfloat n = dot(x,vec2(13.31510,113.00));\n    return fract(sin(vec2(n))*vec2(43758.5453123,22578.1459123));\n}\n#endif\n\n\nvec2 unpackCoord(float f) \n{\n    return vec2((mod(f, 512.0)), floor(f \/ 512.0)) * INV_SCALE;\n}\n\nvec2 unpackColour(float f) \n{\n    return vec2((mod (f, 256.0)), floor(f \/ 256.0)) \/ 255.0;\n}\n\nvoid Tri(float n, float pA, float pB, float pC, float pCol1)\n{\n\tif (n > iGlobalTime*8.1) return;\n\tvec2 pos = uv;\n\tvec2 a = unpackCoord(pA);\n\tvec2 b = unpackCoord(pB);\n\tvec2 c = unpackCoord(pC);\n#ifdef ADD_DITHER\n\tpos += Hash2(coord.xy) * randValues.x - randValues.y;\n\tpos = clamp(pos, vec2(0.0001), vec2(.996));\n#endif\n\t\/\/ Triangle test...\n\tvec2 as = pos-a;\n\tvec2 bs = pos-b;\n\tif  ( (b.x-a.x)*as.y-(b.y-a.y)*as.x > 0.0 &&\n\t\t  (a.x-c.x)*as.y-(a.y-c.y)*as.x > 0.0 &&\n    \t  (c.x-b.x)*bs.y-(c.y-b.y)*bs.x > 0.0)\n\t{\n\t\tvec2 c1 = unpackColour(pCol1);\n\t\tcol = mix (col, vec3(c1.x), c1.y * (texture2D( iChannel0, uv*3.5+a*14.4).x)*2.3); \n\t}\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    coord =  fragCoord;\n\tuv = fragCoord.xy \/ iResolution.xy;\n\tTri(0., 7795., 94023.,93878., 15116.);\n\tTri(1., 55054., 77583.,48336., 14337.);\n\tTri(2., 76615., 49691.,1248., 7969.);\n\tTri(3., 77883., 327.,94022., 15116.);\n\tTri(4., 54082., 80639.,198., 12328.);\n\tTri(5., 67399., 75931.,42277., 15110.);\n\tTri(6., 7795., 40773.,94023., 14848.);\n\tTri(7., 35625., 0.,206., 8081.);\n\tTri(8., 327., 5447.,91782., 14898.);\n\tTri(9., 65263., 79872.,49895., 15358.);\n\tTri(10., 92715., 7225.,45157., 10567.);\n\tTri(11., 37481., 74244.,24075., 14118.);\n\tTri(12., 64523., 17508.,76886., 14852.);\n\tTri(13., 68719., 201.,92382., 14359.);\n\tTri(14., 12392., 82944.,0., 9800.);\n\tTri(15., 21595., 32358.,25146., 15207.);\n\tTri(16., 73787., 63084.,77093., 15357.);\n\tTri(17., 93918., 52039.,94023., 15106.);\n\tTri(18., 43179., 44253.,72946., 15357.);\n\tTri(19., 38004., 94016.,90732., 14723.);\n\tTri(20., 41632., 27344.,71334., 14867.);\n\tTri(21., 61952., 56525.,93756., 13164.);\n\tTri(22., 15975., 70656.,31744., 8258.);\n\tTri(23., 33287., 52300.,52268., 15105.);\n\tTri(24., 41182., 79607.,77004., 11517.);\n\tTri(25., 56009., 28892.,34588., 13569.);\n\tTri(26., 26267., 7396.,78066., 15099.);\n\tTri(27., 215., 45192.,137., 15106.);\n\tTri(28., 92730., 7.,33367., 11004.);\n\tTri(29., 71186., 29761.,84703., 12802.);\n\tTri(30., 94023., 93804.,43846., 15107.);\n\tTri(31., 48662., 27146.,53303., 14082.);\n\tTri(32., 81570., 8304.,41163., 13572.);\n\tTri(33., 65863., 71909.,326., 15105.);\n\tTri(34., 46645., 40474.,30., 15357.);\n\tTri(35., 35992., 215.,37191., 15023.);\n\tTri(36., 61016., 36394.,15443., 11010.);\n\tTri(37., 214., 27772.,152., 14597.);\n\tTri(38., 48689., 42006.,47171., 15105.);\n\tTri(39., 75323., 51924.,93782., 10053.);\n\tTri(40., 59911., 55866.,73279., 15106.);\n\tTri(41., 43011., 59471.,55815., 15101.);\n\tTri(42., 66560., 78499.,93696., 15356.);\n\tTri(43., 14367., 9924.,31749., 12684.);\n\tTri(44., 93846., 81408.,34441., 13030.);\n\tTri(45., 8492., 35650.,6241., 15061.);\n\tTri(46., 124., 327.,87183., 15105.);\n\tTri(47., 84157., 66164.,85241., 14367.);\n\tTri(48., 24675., 173.,51507., 9771.);\n\tTri(49., 67804., 204.,7479., 15101.);\n\tTri(50., 43216., 28372.,44329., 14605.);\n\tTri(51., 94023., 93946.,55073., 12548.);\n\tTri(52., 93700., 30321.,93824., 15098.);\n\tTri(53., 90294., 43704.,67297., 15203.);\n\tTri(54., 93308., 82031.,210., 15174.);\n\tTri(55., 72429., 62153.,70922., 15105.);\n\tTri(56., 93867., 93713.,31343., 15100.);\n\tTri(57., 67813., 45243.,276., 14077.);\n\tTri(58., 71231., 29232.,48739., 15105.);\n\tTri(59., 86104., 4762.,75885., 8794.);\n\tTri(60., 17592., 68703.,6238., 14589.);\n\tTri(61., 63692., 84137.,65149., 15185.);\n\tTri(62., 4798., 325.,66823., 15254.);\n\tTri(63., 727., 8400.,185., 15106.);\n\tTri(64., 698., 285.,47943., 15355.);\n\tTri(65., 32393., 71782.,83., 15357.);\n\tTri(66., 56647., 50909.,24332., 14948.);\n\tTri(67., 132., 234.,93826., 10500.);\n\tTri(68., 25148., 43039.,26134., 15357.);\n\tTri(69., 93381., 109.,219., 11029.);\n\tTri(70., 33919., 93837.,93703., 15102.);\n\tTri(71., 70785., 122.,93367., 15207.);\n\tTri(72., 17116., 279.,40747., 15090.);\n\tTri(73., 55067., 48838.,43710., 14818.);\n\tTri(74., 59719., 93977.,93858., 15220.);\n\tTri(75., 47288., 49360.,67286., 14849.);\n\tTri(76., 93874., 93829.,8816., 13194.);\n\tTri(77., 40131., 21193.,38215., 15254.);\n\tTri(78., 44131., 53341.,32310., 15245.);\n\tTri(79., 93776., 42496.,93904., 15334.);\n\n\tfragColor = vec4(col, 1.0 );\n}\n","name":"","description":"","type":"image"}]}}