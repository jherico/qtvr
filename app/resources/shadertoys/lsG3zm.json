{"Shader":{"ver":"0.1","info":{"id":"lsG3zm","date":"1453985255","viewed":64,"name":"Rotating Color Ring","username":"Sima214","description":"My first public shadertoy!!!<br\/>Nothing complicated. Just a few circles and vectors.","likes":0,"published":3,"flags":0,"tags":["2d"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/You could say it's speed\n#define LOOP_TIME 20.0\n\/\/No i couldn't think of a more unique name\n#define LOOPS 0.5\n\/\/Whether to use iq's suggestion\n#define IQ\n\/\/Circle constants\nconst vec2 pK = vec2(0.5, 0.5);\nconst float r1 = 0.25;\nconst float r2 = 0.48;\n\/\/PI constants\nconst float PI = 3.14159265359;\nconst float PI2 = PI * 2.0;\nconst float PI_HALF = PI \/ 2.0;\n\n\/\/Based of http:\/\/lolengine.net\/blog\/2013\/07\/27\/rgb-to-hsv-in-glsl\nconst vec4 K = vec4(1.0, 2.0 \/ 3.0, 1.0 \/ 3.0, 3.0);\nvec3 hue2rgb(float hue){\n    vec3 p = abs(fract(hue + K.xyz) * 6.0 - K.www);\n    return clamp(p - K.xxx, 0.0, 1.0);\n}\n\nfloat getRingMult(vec2 va){\n  return smoothstep(r1, r2, length(va));\n}\nvec2 genUV(in vec2 fragCoord){\n    vec2 uv = fragCoord;\n    uv.x -= (iResolution.x - iResolution.y)\/2.0;\n    uv \/= iResolution.y;\n    return uv;\n}\nvec3 getBackground(){\n    return vec3(0.2);\n}\n#ifndef IQ\nvec2 getStartVec(){\n    float angle = (iGlobalTime\/LOOP_TIME) * PI2;\n    return vec2(cos(angle), sin(angle));\n}\n#endif\nvec3 genColor(vec2 vKA){\n    #ifdef IQ\n    float angle = (iGlobalTime\/LOOP_TIME) * PI2 + atan(vKA.x, vKA.y) - PI_HALF;\n    #else\n    float angle = dot(getStartVec(), normalize(vKA));\n    angle = acos(angle);\n    #endif\n    return hue2rgb(angle \/ PI * LOOPS);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 pA = genUV(fragCoord);\n    vec2 vKA = pA - pK;\n    float dist = getRingMult(vKA);\n    vec3 final = getBackground();\n    if(dist!=0.0 && dist!=1.0){\n        final = mix(genColor(vKA), final, dist);\n    }\n\tfragColor = vec4(final, 1.0);\n}","name":"","description":"","type":"image"}]}}