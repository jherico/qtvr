{"Shader":{"ver":"0.1","info":{"id":"ltXXDN","date":"1436817530","viewed":984,"name":"[2TC15] Starfield! (258c)","username":"aiekick","description":"Reduced version of <a href=\"https:\/\/www.shadertoy.com\/view\/ltXSDN\"  class=\"regular\" target=\"_blank\">Starfield!<\/a><br\/><br\/>908c to 271c","likes":3,"published":3,"flags":0,"tags":["starfield"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\n\/\/ 258 by FabriceNeyret2\n#define r(o) fract(sin(vec4(6,9,1,o)*i) * 9e2)\nvoid mainImage(out vec4 f, vec2 v )  {\n    f-=f;\n\tfloat t = iGlobalTime;\n    \n  \tfor (float i=0.; i < 20.; i+=.1) \n        r(5.*t).w > .98 ? f \n        : f +=   r(0)\/8e2\n             \/ pow(\n                  length(\n                     v\/iResolution.y \n                      - 3.*fract( r(5).zw \n                                  + (sin(t\/vec2(1,2))+cos(t\/vec2(5,3)))* (r(0).x+1.)\/6.\n                    )           )\n               , 1.2 );  \n}\n\n\/* 272 by Coyote\n#define r(o) fract(sin(o*i) * 9e2)\nvoid mainImage(inout vec4 f, vec2 v ) \n{\n\tvec4 t = iGlobalTime \/ vec4(1,5,2,3);\n  \tfor (float i=0.; i < 2e2; i++) \n        f += pow(\n                  length(\n                     v\/iResolution.y \n                      - 3.*fract(r(vec2(.1,.5)) + (sin(t.xz)+cos(t.yw)) * (r(.6)+1.)\/6.)\n                    )\n               , -1.2) \/ 8e2\n            * r(vec4(.6,.9,.1,0)) \n            * ( r(.5*t.x) > .98?.5:1.);  \n}\n*\/\n\n\/* 280 by FabriceNeyret2\n#define r(o) fract(sin(o*i) * 9e2)\nvoid mainImage(inout vec4 f, vec2 v ) \n{\n\tvec4 t = iGlobalTime * vec4(1,.2,.5,.3);\n  \tfor (float i=0.; i < 200.; i++) \n        f += pow(\n                  length(\n                     v\/iResolution.y \n                      - 3.*fract(r(vec2(.1,.5)) + (sin(t.xz)+cos(t.yw)) * (r(.6)+1.)\/6.)\n                    )\n               , -1.2) \/ 8e2\n            * r(vec4(.6,.9,.1,0)) \n            * ( r(.5*t.x) > .98?.5:1.);  \n}\n*\/\n\/* 342 by FabriceNeyret2\n#define r(o) fract(sin(o*i) * 937.)\nvoid mainImage(out vec4 f, vec2 v )\n{\n    vec4 t = iGlobalTime * vec4(1,.21,.52,.36);\n    f=t-t;\/\/bug if not init on glsl mode\n\tvec2 q = sin(t.xz)+cos(t.yw);\n    for (float i=0.; i<200.; i++) \n    {\n        vec2 p = mod(vec2(r(.12),r(.5))*3. + q * (t.y = r(0.63)*.5+.5), 3.);\n        t.z =  pow(length(v\/iResolution.y-p), -1.2) \/ 8e2;\n        f += vec4(r(.654), r(.953), r(.123),1) * (r(.589*t.x) > r(.868)+.8?t.z * .5:t.z);\n    }\n}\n*\/\n    \n\/* 409 by me\n#define r(o) fract(sin(dot(o*vec2(i) ,vec2(32.9898,78.233))) * 43758.5453)\nvoid mainImage(out vec4 f, vec2 v )\n{\n    vec4 t = iGlobalTime * vec4(1,.21,.52,.36);\n    f=t-t;\/\/bug if not init on glsl mode\n\tvec2 q = vec2(sin(t.x)+cos(t.y), sin(t.z)+cos(t.w));\n    for (float i=0.; i<200.; i++) \n    {\n        vec2 p = mod(vec2(r(.12),r(.5))*3. + q * (t.y = r(0.63)*.5+.5), 3.);\n        t.z = 2e-3 * pow(length(v\/iResolution.y-p), -1.2) * t.y;\n        f.rgb += vec3(r(.654), r(.953), r(.123)) * (r(.589*t.x) > r(.868)+.8?t.z * .5:t.z);\n    }\n}\n*\/\n\n\/* original 908 by Kos   \nvec2 aspect;\nvec2 uv;\nvec2 pan;\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(32.9898,78.233))) * 43758.5453);\n}\n\nfloat rand1(float i) {\n    return rand(vec2(i, i));\n}\n\nvec4 star(int n) {\n    float fn = float(n);\n    vec2 p = vec2(\n        rand1(0.12+float(n))* 3.,\n        rand1(0.5+float(n)) * 3.);\n   \tfloat pf = rand1(fn*0.63)*0.5+0.5;\n    p += pan*pf;\n    p = mod(p, 3.);\n    p -= vec2(0.5);\n    \n    vec3 rgb = vec3(\n        rand1(0.654*fn),\n        rand1(0.953*fn),\n        rand1(0.123*fn));\n    \n    float blink = rand1(0.868*fn)+0.8;\n    \n    float dist = length(uv-p);\n\t\n    float i;    \n    i = 0.002 * pow(length(uv-p), -1.2) * pf;\n    \n    if (rand1(0.589*fn*iGlobalTime) > blink) {\n        i *= 0.5;\n    }\n    \n    return vec4(rgb*i, 1);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    aspect = iResolution.xy \/ min(iResolution.x, iResolution.y);\n\tuv = fragCoord.xy \/ min(iResolution.x, iResolution.y);\n    \n\tfragColor = vec4(uv,0.5+0.5*sin(iGlobalTime),1.0);\n    fragColor = vec4(0);\n    \n    pan = vec2(sin(iGlobalTime)+cos(iGlobalTime*0.21),\n               sin(iGlobalTime*0.52)+cos(iGlobalTime*0.36));\n    \n    for (int i=0; i<200; ++i) {\n        fragColor += star(i);\n    }\n    \n    \n}\n*\/","name":"","description":"","type":"image"}]}}