{"Shader":{"ver":"0.1","info":{"id":"ltj3W1","date":"1428740067","viewed":750,"name":"Revision 2015 Livecoding Round 1","username":"mu6k","description":"Written under 25 minutes at Revision 2015 live-coding qualifier round. I tried to adapt it by making as less modifications as possible. Put some music into iChannel0 and remove the comments from the first define.","likes":5,"published":3,"flags":0,"tags":["3d","raymarching","livecoding"],"hasliked":0},"renderpass":[{"inputs":[{"id":20,"src":"\/presets\/mzk03.mp3","ctype":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/#define LIGHT_REACT_TO_MUSIC\n\n#define time iGlobalTime\n#define v2Resolution iResolution.xy\n#define texFFTSmoothed iChannel0\n#define texFFT iChannel0\n#define fGlobalTime iGlobalTime\n#define out_color fragColor\n\nvec4 plas( vec2 v, float time )\n{\n  float c = 0.5 + sin( v.x * 10.0 ) + cos( sin( time + v.y ) * 20.0 );\n  return vec4( sin(c * 0.2 + cos(time)), c * 0.15, cos( c * 0.1 + time \/ .4 ) * .25, 1.0 );\n}\n\n\n\nfloat df ( vec3 p)\n{\n  p+=0.5;\n  float a=time*.3,cs=cos(a),ss=sin(a);\n  mat3 r = mat3(cs,0,ss,0,1,0,-ss,0,cs);\n\na=time*.4,cs=cos(a),ss=sin(a);\n  mat3 r2 = mat3(cs,ss,0, -ss,cs,0 ,0,0,1);\n\n\n  float e = .5;\n  p = abs(p*r*r2)-.5-sin(time)*.005;;\n  p = abs(p*r*r2)-.25-sin(time)*.005;\n  p = abs(p*r*r2)-.125-sin(time)*.005;\n  p = abs(p*r*r2)-.06125-sin(time)*.005;\n  p = abs(p*r*r2)-.0025-sin(time)*.005;\n  p = abs(p*r*r2)-.00025-sin(time)*.005;\n  return mix(length(p)-.02,max(p.x,max(p.y,p.z))-.02, sin(time)*.5+.5 );\n}\n\nvec3 nf (vec3 p)\n{\n  vec2 e = vec2(.0,.001);\n  float c = df(p);\n  return normalize(\n vec3(df(p+e.yxx), df(p+e.xyx), df(p+e.xxy))\n );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = vec2(gl_FragCoord.x \/ v2Resolution.x, gl_FragCoord.y \/ v2Resolution.y);\n  uv -= 0.5;\n  uv \/= vec2(v2Resolution.y \/ v2Resolution.x, 1);\n\n  vec2 m;\n  m.x = atan(uv.x \/ uv.y) \/ 3.14;\n  m.y = 1.0 \/ length(uv) * .2;\n  float d = m.y;\n\n  float a=time*.2,cs=cos(a),ss=sin(a);\n  mat3 r = mat3(cs,0,ss,0,1,0,-ss,0,cs);\n\n  a=time*.37,cs=cos(a),ss=sin(a);\n  mat3 r2 = mat3(cs,ss,0, -ss,cs,0 ,0,0,1);\n\n  float zoom = sin(time*2.1)*.3+.5;\n  float distr = texture2D(texFFTSmoothed, vec2(pow(uv.y-.5,2.0))*44.0*(sin(time)*.5+.5,.0)).x;\n\n  vec3 p = vec3(.0,.0,-4.0+sin(time*.8)*0.5);\n  vec3 dir = normalize(vec3(uv*zoom,distr+1.0-length(uv)));\n\n  p*=r*r2;\n  dir*=r*r2;\n\n  for (int i=0; i<40; i++)\n  {\n    float d = df(p);\n    p += d*dir;\n    \n   }\n  \n  vec3 l = normalize(vec3(.1,.2,.3));\n\n  vec3 c = nf(p)\/(1.0+df(p));\n  c=vec3(.5+df(p-l*.01)*.5+df(p-l)*.5+df(p-l*2.0)*.25);\n  c*= dot(nf(p),-l)*.5+.8;\n  float f = texture2D( texFFT, vec2(d,.0) ).r * 100.0;\n  \n    #ifdef LIGHT_REACT_TO_MUSIC\n  float beat = texture2D(texFFTSmoothed,vec2(.1,.0)).x*1.4;\n\t#else\n  float beat = .7;\n    #endif\n    \n    \n  c = min(vec3(1.0),c);\n\n  c-=texture2D(texFFTSmoothed,vec2(pow(uv.y*.5,2.0)*2.0-1.0,.0)).xxx*uv.x*2.0;\n\n  m.x += sin( fGlobalTime ) * 0.1;\n  m.y += fGlobalTime * 0.25;\n\n  c -= length(uv);\n  c += mix(vec3(.1,.4,.9), vec3(.9,.7,.2), (uv.y+.5));\n  \/\/c -= .1;\n  vec4 t = plas( m * 3.14, fGlobalTime ) \/ d;\n  t = clamp( t, 0.0, 1.0 );\n  out_color = vec4(c,1.0)*beat + t*.05;;\n}\n\n\n","name":"","description":"","type":"image"}]}}