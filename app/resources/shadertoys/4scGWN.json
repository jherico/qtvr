{"Shader":{"ver":"0.1","info":{"id":"4scGWN","date":"1449553263","viewed":322,"name":"test2 endomorphosis","username":"endomorphosis","description":"test2","likes":4,"published":3,"flags":0,"tags":["test"],"hasliked":0},"renderpass":[{"inputs":[{"id":7,"src":"\/presets\/tex06.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":30,"src":"\/presets\/tex16.png","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"id":47,"src":"\/presets\/tex19.png","ctype":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n\/\/ A simple and cheap 2D shader to accompany the Pirates of the Caribean music.\n\n\nfloat fbm( vec2 p )\n{\n    return 0.5000*texture2D( iChannel1, p*1.00 ).x + \n           0.2500*texture2D( iChannel1, p*2.02 ).x + \n           0.1250*texture2D( iChannel1, p*4.03 ).x + \n           0.0625*texture2D( iChannel1, p*8.04 ).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = mod( iGlobalTime, 60.0 );\n\tvec2 p = (-iResolution.xy+2.0*fragCoord.xy) \/ iResolution.y;\n    vec2 i = p;\n\n    \/\/ camera\n    p += vec2(1.0,3.0)*0.001*2.0*cos( iGlobalTime*5.0 + vec2(0.0,1.5) );    \n    p += vec2(1.0,3.0)*0.001*1.0*cos( iGlobalTime*1.0 + vec2(1.0,4.5) );    \n    p *= 0.85 + 0.05*length(p);\n    float an = 0.3*sin( 0.1*time );\n    float co = cos(an);\n    float si = sin(an);\n    p = mat2( co, -si, si, co )*p;\n    \n    \/\/ water\n    vec2 q = vec2(p.x,1.0)\/p.y;\n    q.y -= 0.9*time;    \n    vec2 off = texture2D( iChannel0, 0.1*q*vec2(1.0,2.0) - vec2(0.0,0.007*iGlobalTime) ).xy;\n    q += 0.4*(-1.0 + 2.0*off);\n    vec3 col = texture2D( iChannel0, 0.1*q *vec2(.5,8.0) + vec2(0.0,0.01*iGlobalTime) ).zyx;\n    col *= 0.4;\n    float re = 1.0-smoothstep( 0.0, 0.7, abs(p.x-0.6) - abs(p.y)*0.5+0.2 );\n    col += 1.0*vec3(1.0,0.9,0.73)*re*0.2*off.y*5.0*(1.0-col.x);\n    float re2 = 1.0-smoothstep( 0.0, 2.0, abs(p.x-0.6) - abs(p.y)*0.85 );\n    col += 0.7*re2*smoothstep(0.35,1.0,texture2D( iChannel1, 0.1*q *vec2(0.5,8.0) ).x);\n    \n    \/\/ sky\n    vec3 sky = vec3(0.0,0.05,0.1)*1.4;\n    \/\/ stars    \n    sky += 0.5*smoothstep( 0.95,1.00,texture2D( iChannel1, 0.25*p ).x);\n    sky += 0.5*smoothstep( 0.85,1.0,texture2D( iChannel1, 0.25*p ).x);\n    sky += 0.2*pow(1.0-max(0.0,p.y),2.0);\n    \/\/ clouds    \n    float f = fbm( 0.002*vec2(p.x,1.0)\/p.y );\n    vec3 cloud = vec3(0.3,0.4,0.5)*0.7*(1.0-0.85*sqrt(smoothstep(0.4,1.0,f)));\n    sky = mix( sky, cloud, 0.95*smoothstep( 0.4, 0.6, f ) );\n    sky = mix( sky, vec3(0.33,0.34,0.35), pow(1.0-max(0.0,p.y),2.0) );\n    col = mix( col, sky, smoothstep(0.0,0.1,p.y) );\n    \n    \/\/ horizon\n    col += 0.1*pow(clamp(1.0-abs(p.y),0.0,1.0),9.0);\n\n    \/\/ moon\n    float d = length(p-vec2(0.6,0.5));\n    float g = 1.0 - smoothstep( 0.2, 0.22, d );\n    float moontex = 0.8+0.2*smoothstep(0.25,0.7,fbm(0.06*p));\n    vec3 moon = vec3(1.0,0.97,0.9)*(1.0-0.1*smoothstep(0.2,0.5,f));\n    col += 0.8*moon*exp(-4.0*d)*vec3(1.1,1.0,0.8);\n    col += 0.2*moon*exp(-2.0*d);\n    col = mix( col, moon*moontex, g );\n    \n    \/\/ postprocess\n    col *= 1.4;\n    col = pow( col, vec3(1.5,1.2,1.0) );    \n    col *= clamp(1.0-0.3*length(i), 0.0, 1.0 );\n\n    \/\/ fade\n\n    fragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}