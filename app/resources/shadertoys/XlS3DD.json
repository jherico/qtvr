{"Shader":{"ver":"0.1","info":{"id":"XlS3DD","date":"1428958340","viewed":980,"name":"spectrum analysor","username":"FabriceNeyret2","description":"speak, sing, play guitar, and see the sound formants !<br\/>Mouse.y: time window from 1\" to 10\".<br\/>Orange: 440Hz=A   Red: octaves   Green: harmonics ","likes":11,"published":3,"flags":4,"tags":["sound","spectrum","discard","mic"],"hasliked":0},"renderpass":[{"inputs":[{"id":32,"src":"\/presets\/mic.png","ctype":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"float message(vec2 uv) { \/\/ to alter in the icon\n    uv-=vec2(1.,10.); if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(32.-uv.x)));\n    if (int(uv.y)==2) i=  757737252\/bit; \/\/ 11010010 11010101 11011000 11011011\n    if (int(uv.y)==1) i= 1869043565\/bit; \/\/ 10010000 10011000 10101000 10010010\n    if (int(uv.y)==0) i=  623593060\/bit; \/\/ 11011010 11010100 10111001 10011011\n \treturn float(1-i+2*(i\/2));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iResolution.y<200.) {float c=message(fragCoord.xy\/8.);if(c>=0.){fragColor=vec4(c);return;}}\n    \n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n \tfloat fmax = iSampleRate\/4.;\n \n    float T = pow(10.,iMouse.y\/ iResolution.y); \/\/ time window on screen\n    \n    if (mod(iGlobalTime\/T-uv.x,1.)>.1) discard;  \/\/ update only one column on screen\n    \n    float zoom = 5.;               \/\/ zoom in frequencies\n    uv.y \/= zoom;\n    float f = uv.y*fmax;           \/\/ mapping y - frequency\n    \nfor (int once=0; once<1; once++) { \/\/ because early returns cause issues on some compilers\n\n    \/\/ bars\n    if (mod(fragCoord.x,8.)<2.) {\n    if (abs(f-440.)< fmax\/(zoom*iResolution.y))\n        { fragColor = vec4(1.,.7,0.,0.); break;\t}\n \tif (mod(log(f\/440.)\/log(2.),1.)< .25\/(iResolution.y*uv.y))\n        { fragColor = vec4(.7,0.,0.,0.); break;\t}\n \tif (mod(f,440.)< fmax\/(zoom*iResolution.y))\n        { fragColor = vec4(0.,.7,0.,0.); break;\t}\n    }\n    \/\/ data\n    float c =  texture2D(iChannel0,vec2(uv.y,.5\/2.)).r;\n\n    c = (c-.3)\/.7; \/\/ cut 30% of noise\n    fragColor = vec4(1.5*c,c,.7*c,1);\n}}","name":"","description":"","type":"image"}]}}