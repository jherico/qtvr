{"Shader":{"ver":"0.1","info":{"id":"Msj3zD","date":"1384793242","viewed":12043,"name":"Super Mario Bros.","username":"HLorenzi","description":"Mario jumping dynamically through a random level! How does Mario retain his jumping speed if shaders here are not supposed to know past frames? Would have done more sprites (bushes, clouds, enemies), but it's already really heavy to compile as it is...","likes":69,"published":3,"flags":0,"tags":["game","sprite","mario","platform","nes","super","bros","jump","state","dynamic"],"hasliked":0},"renderpass":[{"inputs":[{"id":19,"src":"\/presets\/mzk02.mp3","ctype":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Super Mario Bros. by HLorenzi\n\n\/\/ If it does not run at 60 FPS,\n\/\/ try pausing\/turning off the music!\n\n\/\/ Uncomment for totally random level!\n\/\/ Just to show off Mario's dynamic movements :P\n\/\/#define TOTALLY_RANDOM_LEVEL 1\n\n\t\n\/\/ Positions to start and end Mario simulation (relative to screen position)\n\/\/ You can try changing these! (the difference between the two should be a multiple of 4)\n\/\/ Put startX too close to endX, and Mario'll experience jittering!\n#define startX  0.0\n#define endX   80.0\n\n\n\n\n\n\n\n#define RGB(r,g,b) vec4(float(r)\/255.0,float(g)\/255.0,float(b)\/255.0,1.0)\n\n#define SPRROW(x,a,b,c,d,e,f,g,h, i,j,k,l,m,n,o,p) (x <= 7 ? SPRROW_H(a,b,c,d,e,f,g,h) : SPRROW_H(i,j,k,l,m,n,o,p))\n#define SPRROW_H(a,b,c,d,e,f,g,h) (a+4.0*(b+4.0*(c+4.0*(d+4.0*(e+4.0*(f+4.0*(g+4.0*(h))))))))\n#define SECROW(x,a,b,c,d,e,f,g,h) (x <= 3 ? SECROW_H(a,b,c,d) : SECROW_H(e,f,g,h))\n#define SECROW_H(a,b,c,d) (a+8.0*(b+8.0*(c+8.0*(d))))\n#define SELECT(x,i) mod(floor(i\/pow(4.0,float(x))),4.0)\n#define SELECTSEC(x,i) mod(floor(i\/pow(8.0,float(x))),8.0)\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec4 sprGround(int x, int y)\n{\n\tfloat col = 0.0;\n\tif (y == 15) col = SPRROW(x,1.,0.,0.,0.,0.,0.,0.,0., 0.,2.,1.,0.,0.,0.,0.,1.);\n\tif (y == 14) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,2.,0.,1.,1.,1.,1.,2.);\n\tif (y == 13) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,2.,0.,1.,1.,1.,1.,2.);\n\tif (y == 12) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,2.,0.,1.,1.,1.,1.,2.);\n\tif (y == 11) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,2.,0.,2.,1.,1.,1.,2.);\n\tif (y == 10) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,2.,1.,2.,2.,2.,2.,1.);\n\tif (y ==  9) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,2.,0.,0.,0.,0.,0.,2.);\n\tif (y ==  8) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,2.,0.,1.,1.,1.,1.,2.);\n\t\n\tif (y ==  7) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,2.,0.,1.,1.,1.,1.,2.);\n\tif (y ==  6) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,2.,0.,1.,1.,1.,1.,2.);\n\tif (y ==  5) col = SPRROW(x,2.,2.,1.,1.,1.,1.,1.,1., 2.,0.,1.,1.,1.,1.,1.,2.);\n\tif (y ==  4) col = SPRROW(x,0.,0.,2.,2.,1.,1.,1.,1., 2.,0.,1.,1.,1.,1.,1.,2.);\n\tif (y ==  3) col = SPRROW(x,0.,1.,0.,0.,2.,2.,2.,2., 0.,1.,1.,1.,1.,1.,1.,2.);\n\tif (y ==  2) col = SPRROW(x,0.,1.,1.,1.,0.,0.,0.,2., 0.,1.,1.,1.,1.,1.,1.,2.);\n\tif (y ==  1) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,2., 0.,1.,1.,1.,1.,1.,2.,2.);\n\tif (y ==  0) col = SPRROW(x,1.,2.,2.,2.,2.,2.,2.,1., 0.,2.,2.,2.,2.,2.,2.,1.);\n\t\n\tcol = SELECT(mod(float(x),8.0),col);\n\tif (col == 0.0) return RGB(247,214,181);\n\tif (col == 1.0) return RGB(231,90,16);\n\treturn RGB(0,0,0);\n}\n\nvec4 sprQuestionBlock(int x, int y)\n{\n\tfloat col = 0.0;\n\tif (y == 15) col = SPRROW(x,3.,0.,0.,0.,0.,0.,0.,0., 0.,0.,0.,0.,0.,0.,0.,3.);\n\tif (y == 14) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,2.);\n\tif (y == 13) col = SPRROW(x,0.,1.,2.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,2.,1.,2.);\n\tif (y == 12) col = SPRROW(x,0.,1.,1.,1.,1.,0.,0.,0., 0.,0.,1.,1.,1.,1.,1.,2.);\n\tif (y == 11) col = SPRROW(x,0.,1.,1.,1.,0.,0.,2.,2., 2.,0.,0.,1.,1.,1.,1.,2.);\n\tif (y == 10) col = SPRROW(x,0.,1.,1.,1.,0.,0.,2.,1., 1.,0.,0.,2.,1.,1.,1.,2.);\n\tif (y ==  9) col = SPRROW(x,0.,1.,1.,1.,0.,0.,2.,1., 1.,0.,0.,2.,1.,1.,1.,2.);\n\tif (y ==  8) col = SPRROW(x,0.,1.,1.,1.,1.,2.,2.,1., 0.,0.,0.,2.,1.,1.,1.,2.);\n\t\n\tif (y ==  7) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,0., 0.,2.,2.,2.,1.,1.,1.,2.);\n\tif (y ==  6) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,0., 0.,2.,1.,1.,1.,1.,1.,2.);\n\tif (y ==  5) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 2.,2.,1.,1.,1.,1.,1.,2.);\n\tif (y ==  4) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,0., 0.,0.,1.,1.,1.,1.,1.,2.);\n\tif (y ==  3) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,0., 0.,2.,1.,1.,1.,1.,1.,2.);\n\tif (y ==  2) col = SPRROW(x,0.,1.,2.,1.,1.,1.,1.,1., 2.,2.,1.,1.,1.,2.,1.,2.);\n\tif (y ==  1) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,2.);\n\tif (y ==  0) col = SPRROW(x,2.,2.,2.,2.,2.,2.,2.,2., 2.,2.,2.,2.,2.,2.,2.,2.);\n\t\n\tif (y < 0 || y > 15) return RGB(107,140,255);\n\t\n\tcol = SELECT(mod(float(x),8.0),col);\n\tif (col == 0.0) return RGB(231,90,16);\n\tif (col == 1.0) return RGB(255,165,66);\n\tif (col == 2.0) return RGB(0,0,0);\n\treturn RGB(107,140,255);\n}\n\nvec4 sprUsedBlock(int x, int y)\n{\n\tfloat col = 0.0;\n\tif (y == 15) col = SPRROW(x,3.,0.,0.,0.,0.,0.,0.,0., 0.,0.,0.,0.,0.,0.,0.,3.);\n\tif (y == 14) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,0.);\n\tif (y == 13) col = SPRROW(x,0.,1.,0.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,0.,1.,0.);\n\tif (y == 12) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,0.);\n\tif (y == 11) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,0.);\n\tif (y == 10) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,0.);\n\tif (y ==  9) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,0.);\n\tif (y ==  8) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,0.);\n\t\n\tif (y ==  7) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,0.);\n\tif (y ==  6) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,0.);\n\tif (y ==  5) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,0.);\n\tif (y ==  4) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,0.);\n\tif (y ==  3) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,0.);\n\tif (y ==  2) col = SPRROW(x,0.,1.,0.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,0.,1.,0.);\n\tif (y ==  1) col = SPRROW(x,0.,1.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,1.,0.);\n\tif (y ==  0) col = SPRROW(x,3.,0.,0.,0.,0.,0.,0.,0., 0.,0.,0.,0.,0.,0.,0.,3.);\n\t\n\tif (y < 0 || y > 15) return RGB(107,140,255);\n\t\n\tcol = SELECT(mod(float(x),8.0),col);\n\tif (col == 0.0) return RGB(0,0,0);\n\tif (col == 1.0) return RGB(231,90,16);\n\treturn RGB(107,140,255);\n}\n\nvec4 sprMarioJump(int x, int y)\n{\n\tfloat col = 0.0;\n\tif (y == 15) col = SPRROW(x,0.,0.,0.,0.,0.,0.,0.,0., 0.,0.,0.,0.,0.,2.,2.,2.);\n\tif (y == 14) col = SPRROW(x,0.,0.,0.,0.,0.,0.,1.,1., 1.,1.,1.,0.,0.,2.,2.,2.);\n\tif (y == 13) col = SPRROW(x,0.,0.,0.,0.,0.,1.,1.,1., 1.,1.,1.,1.,1.,1.,2.,2.);\n\tif (y == 12) col = SPRROW(x,0.,0.,0.,0.,0.,3.,3.,3., 2.,2.,3.,2.,0.,3.,3.,3.);\n\tif (y == 11) col = SPRROW(x,0.,0.,0.,0.,3.,2.,3.,2., 2.,2.,3.,2.,2.,3.,3.,3.);\n\tif (y == 10) col = SPRROW(x,0.,0.,0.,0.,3.,2.,3.,3., 2.,2.,2.,3.,2.,2.,2.,3.);\n\tif (y ==  9) col = SPRROW(x,0.,0.,0.,0.,3.,3.,2.,2., 2.,2.,3.,3.,3.,3.,3.,0.);\n\tif (y ==  8) col = SPRROW(x,0.,0.,0.,0.,0.,0.,2.,2., 2.,2.,2.,2.,2.,3.,0.,0.);\n\t\n\tif (y ==  7) col = SPRROW(x,0.,0.,3.,3.,3.,3.,3.,1., 3.,3.,3.,1.,3.,0.,0.,0.);\n\tif (y ==  6) col = SPRROW(x,0.,3.,3.,3.,3.,3.,3.,3., 1.,3.,3.,3.,1.,0.,0.,3.);\n\tif (y ==  5) col = SPRROW(x,2.,2.,3.,3.,3.,3.,3.,3., 1.,1.,1.,1.,1.,0.,0.,3.);\n\tif (y ==  4) col = SPRROW(x,2.,2.,2.,0.,1.,1.,3.,1., 1.,2.,1.,1.,2.,1.,3.,3.);\n\tif (y ==  3) col = SPRROW(x,0.,2.,0.,3.,1.,1.,1.,1., 1.,1.,1.,1.,1.,1.,3.,3.);\n\tif (y ==  2) col = SPRROW(x,0.,0.,3.,3.,3.,1.,1.,1., 1.,1.,1.,1.,1.,1.,3.,3.);\n\tif (y ==  1) col = SPRROW(x,0.,3.,3.,3.,1.,1.,1.,1., 1.,1.,1.,0.,0.,0.,0.,0.);\n\tif (y ==  0) col = SPRROW(x,0.,3.,0.,0.,1.,1.,1.,1., 0.,0.,0.,0.,0.,0.,0.,0.);\n\t\n\tcol = SELECT(mod(float(x),8.0),col);\n\tif (col == 0.0) return RGB(0,0,0);\n\tif (col == 1.0) return RGB(177,52,37);\n\tif (col == 2.0) return RGB(227,157,37);\n\tif (col == 3.0) return RGB(106,107,4);\n\treturn RGB(0,0,0);\n}\n\nvec4 sprMarioWalk3(int x, int y)\n{\n\tfloat col = 0.0;\n\tif (y == 15) col = SPRROW(x,0.,0.,0.,0.,0.,1.,1.,1., 1.,1.,0.,0.,0.,0.,0.,0.);\n\tif (y == 14) col = SPRROW(x,0.,0.,0.,0.,1.,1.,1.,1., 1.,1.,1.,1.,1.,0.,0.,0.);\n\tif (y == 13) col = SPRROW(x,0.,0.,0.,0.,3.,3.,3.,2., 2.,3.,2.,0.,0.,0.,0.,0.);\n\tif (y == 12) col = SPRROW(x,0.,0.,0.,3.,2.,3.,2.,2., 2.,3.,2.,2.,2.,0.,0.,0.);\n\tif (y == 11) col = SPRROW(x,0.,0.,0.,3.,2.,3.,3.,2., 2.,2.,3.,2.,2.,2.,0.,0.);\n\tif (y == 10) col = SPRROW(x,0.,0.,0.,3.,3.,2.,2.,2., 2.,3.,3.,3.,3.,0.,0.,0.);\n\tif (y ==  9) col = SPRROW(x,0.,0.,0.,0.,0.,2.,2.,2., 2.,2.,2.,2.,0.,0.,0.,0.);\n\tif (y ==  8) col = SPRROW(x,0.,0.,3.,3.,3.,3.,1.,1., 3.,3.,0.,0.,0.,0.,0.,0.);\n\t\n\tif (y ==  7) col = SPRROW(x,2.,2.,3.,3.,3.,3.,1.,1., 1.,3.,3.,3.,2.,2.,2.,0.);\n\tif (y ==  6) col = SPRROW(x,2.,2.,2.,0.,3.,3.,1.,2., 1.,1.,1.,3.,3.,2.,2.,0.);\n\tif (y ==  5) col = SPRROW(x,2.,2.,0.,0.,1.,1.,1.,1., 1.,1.,1.,0.,0.,3.,0.,0.);\n\tif (y ==  4) col = SPRROW(x,0.,0.,0.,1.,1.,1.,1.,1., 1.,1.,1.,1.,3.,3.,0.,0.);\n\tif (y ==  3) col = SPRROW(x,0.,0.,1.,1.,1.,1.,1.,1., 1.,1.,1.,1.,3.,3.,0.,0.);\n\tif (y ==  2) col = SPRROW(x,0.,3.,3.,1.,1.,1.,0.,0., 0.,1.,1.,1.,3.,3.,0.,0.);\n\tif (y ==  1) col = SPRROW(x,0.,3.,3.,3.,0.,0.,0.,0., 0.,0.,0.,0.,0.,0.,0.,0.);\n\tif (y ==  0) col = SPRROW(x,0.,0.,3.,3.,3.,0.,0.,0., 0.,0.,0.,0.,0.,0.,0.,0.);\n\t\n\tcol = SELECT(mod(float(x),8.0),col);\n\tif (col == 0.0) return RGB(0,0,0);\n\tif (col == 1.0) return RGB(177,52,37);\n\tif (col == 2.0) return RGB(227,157,37);\n\tif (col == 3.0) return RGB(106,107,4);\n\treturn RGB(0,0,0);\n}\n\n\nvec4 sprMarioWalk2(int x, int y)\n{\n\tfloat col = 0.0;\n\tif (y == 15) col = SPRROW(x,0.,0.,0.,0.,0.,1.,1.,1., 1.,1.,0.,0.,0.,0.,0.,0.);\n\tif (y == 14) col = SPRROW(x,0.,0.,0.,0.,1.,1.,1.,1., 1.,1.,1.,1.,1.,0.,0.,0.);\n\tif (y == 13) col = SPRROW(x,0.,0.,0.,0.,3.,3.,3.,2., 2.,3.,2.,0.,0.,0.,0.,0.);\n\tif (y == 12) col = SPRROW(x,0.,0.,0.,3.,2.,3.,2.,2., 2.,3.,2.,2.,2.,0.,0.,0.);\n\tif (y == 11) col = SPRROW(x,0.,0.,0.,3.,2.,3.,3.,2., 2.,2.,3.,2.,2.,2.,0.,0.);\n\tif (y == 10) col = SPRROW(x,0.,0.,0.,3.,3.,2.,2.,2., 2.,3.,3.,3.,3.,0.,0.,0.);\n\tif (y ==  9) col = SPRROW(x,0.,0.,0.,0.,0.,2.,2.,2., 2.,2.,2.,2.,0.,0.,0.,0.);\n\tif (y ==  8) col = SPRROW(x,0.,0.,0.,0.,3.,3.,1.,3., 3.,3.,0.,0.,0.,0.,0.,0.);\n\t\n\tif (y ==  7) col = SPRROW(x,0.,0.,0.,3.,3.,3.,3.,1., 1.,3.,3.,0.,0.,0.,0.,0.);\n\tif (y ==  6) col = SPRROW(x,0.,0.,0.,3.,3.,3.,1.,1., 2.,1.,1.,2.,0.,0.,0.,0.);\n\tif (y ==  5) col = SPRROW(x,0.,0.,0.,3.,3.,3.,3.,1., 1.,1.,1.,1.,0.,0.,0.,0.);\n\tif (y ==  4) col = SPRROW(x,0.,0.,0.,1.,3.,3.,2.,2., 2.,1.,1.,1.,0.,0.,0.,0.);\n\tif (y ==  3) col = SPRROW(x,0.,0.,0.,0.,1.,3.,2.,2., 1.,1.,1.,0.,0.,0.,0.,0.);\n\tif (y ==  2) col = SPRROW(x,0.,0.,0.,0.,0.,1.,1.,1., 3.,3.,3.,0.,0.,0.,0.,0.);\n\tif (y ==  1) col = SPRROW(x,0.,0.,0.,0.,0.,3.,3.,3., 3.,3.,3.,3.,0.,0.,0.,0.);\n\tif (y ==  0) col = SPRROW(x,0.,0.,0.,0.,0.,3.,3.,3., 3.,0.,0.,0.,0.,0.,0.,0.);\n\t\n\tcol = SELECT(mod(float(x),8.0),col);\n\tif (col == 0.0) return RGB(0,0,0);\n\tif (col == 1.0) return RGB(177,52,37);\n\tif (col == 2.0) return RGB(227,157,37);\n\tif (col == 3.0) return RGB(106,107,4);\n\treturn RGB(0,0,0);\n}\n\n\nvec4 sprMarioWalk1(int x, int y)\n{\n\tfloat col = 0.0;\n\tif (y == 15) col = SPRROW(x,0.,0.,0.,0.,0.,0.,0.,0., 0.,0.,0.,0.,0.,0.,0.,0.);\n\tif (y == 14) col = SPRROW(x,0.,0.,0.,0.,0.,0.,1.,1., 1.,1.,1.,0.,0.,0.,0.,0.);\n\tif (y == 13) col = SPRROW(x,0.,0.,0.,0.,0.,1.,1.,1., 1.,1.,1.,1.,1.,1.,0.,0.);\n\tif (y == 12) col = SPRROW(x,0.,0.,0.,0.,0.,3.,3.,3., 2.,2.,3.,2.,0.,0.,0.,0.);\n\tif (y == 11) col = SPRROW(x,0.,0.,0.,0.,3.,2.,3.,2., 2.,2.,3.,2.,2.,2.,0.,0.);\n\tif (y == 10) col = SPRROW(x,0.,0.,0.,0.,3.,2.,3.,3., 2.,2.,2.,3.,2.,2.,2.,0.);\n\tif (y ==  9) col = SPRROW(x,0.,0.,0.,0.,3.,3.,2.,2., 2.,2.,3.,3.,3.,3.,0.,0.);\n\tif (y ==  8) col = SPRROW(x,0.,0.,0.,0.,0.,0.,2.,2., 2.,2.,2.,2.,2.,0.,0.,0.);\n\t\n\tif (y ==  7) col = SPRROW(x,0.,0.,0.,0.,0.,3.,3.,3., 3.,1.,3.,0.,2.,0.,0.,0.);\n\tif (y ==  6) col = SPRROW(x,0.,0.,0.,0.,2.,3.,3.,3., 3.,3.,3.,2.,2.,2.,0.,0.);\n\tif (y ==  5) col = SPRROW(x,0.,0.,0.,2.,2.,1.,3.,3., 3.,3.,3.,2.,2.,0.,0.,0.);\n\tif (y ==  4) col = SPRROW(x,0.,0.,0.,3.,3.,1.,1.,1., 1.,1.,1.,1.,0.,0.,0.,0.);\n\tif (y ==  3) col = SPRROW(x,0.,0.,0.,3.,1.,1.,1.,1., 1.,1.,1.,1.,0.,0.,0.,0.);\n\tif (y ==  2) col = SPRROW(x,0.,0.,3.,3.,1.,1.,1.,0., 1.,1.,1.,0.,0.,0.,0.,0.);\n\tif (y ==  1) col = SPRROW(x,0.,0.,3.,0.,0.,0.,0.,3., 3.,3.,0.,0.,0.,0.,0.,0.);\n\tif (y ==  0) col = SPRROW(x,0.,0.,0.,0.,0.,0.,0.,3., 3.,3.,3.,0.,0.,0.,0.,0.);\n\t\n\tcol = SELECT(mod(float(x),8.0),col);\n\tif (col == 0.0) return RGB(0,0,0);\n\tif (col == 1.0) return RGB(177,52,37);\n\tif (col == 2.0) return RGB(227,157,37);\n\tif (col == 3.0) return RGB(106,107,4);\n\treturn RGB(0,0,0);\n}\n\nvec4 getTile(int t, int x, int y)\n{\n\tif (t == 0) return RGB(107,140,255);\n\tif (t == 1) return sprGround(x,y);\n\tif (t == 2) return sprQuestionBlock(x,y);\n\tif (t == 3) return sprUsedBlock(x,y);\n\t\n\treturn RGB(107,140,255);\n}\n\nint getSection(int s, int x, int y)\n{\n\tfloat col = 0.0;\n\tif (s == 0) {\n\t\tif (y == 6) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 5) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 4) col = SECROW(x,0.,0.,3.,3.,3.,0.,0.,0.);\n\t\tif (y == 3) col = SECROW(x,0.,0.,2.,2.,2.,0.,0.,0.);\n\t\tif (y == 2) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 1) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y <= 0) col = SECROW(x,1.,1.,1.,1.,1.,1.,1.,1.);\n\t}\n\tif (s == 1) {\n\t\tif (y == 6) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 5) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 4) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 3) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 2) col = SECROW(x,0.,0.,0.,0.,0.,1.,0.,0.);\n\t\tif (y == 1) col = SECROW(x,0.,0.,0.,1.,1.,1.,0.,0.);\n\t\tif (y <= 0) col = SECROW(x,1.,1.,1.,1.,1.,1.,1.,1.);\n\t}\n\tif (s == 2) {\n\t\tif (y == 6) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 5) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 4) col = SECROW(x,0.,0.,3.,0.,0.,3.,0.,0.);\n\t\tif (y == 3) col = SECROW(x,0.,0.,2.,0.,0.,2.,0.,0.);\n\t\tif (y == 2) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 1) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y <= 0) col = SECROW(x,1.,1.,1.,1.,1.,1.,1.,1.);\n\t}\n\tif (s == 3) {\n\t\tif (y == 6) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 5) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 4) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 3) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 2) col = SECROW(x,0.,0.,0.,1.,1.,0.,0.,0.);\n\t\tif (y == 1) col = SECROW(x,0.,0.,0.,1.,1.,1.,0.,0.);\n\t\tif (y <= 0) col = SECROW(x,1.,1.,1.,1.,1.,1.,1.,1.);\n\t}\n\tif (s == 4) {\n\t\tif (y == 6) col = SECROW(x,0.,0.,0.,0.,3.,0.,0.,0.);\n\t\tif (y == 5) col = SECROW(x,0.,0.,0.,0.,2.,0.,0.,0.);\n\t\tif (y == 4) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 3) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 2) col = SECROW(x,0.,0.,0.,1.,1.,1.,0.,0.);\n\t\tif (y == 1) col = SECROW(x,0.,0.,0.,1.,1.,1.,0.,0.);\n\t\tif (y <= 0) col = SECROW(x,1.,1.,1.,1.,1.,1.,1.,1.);\n\t}\n\tif (s == 5) {\n\t\tif (y == 6) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 5) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 4) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 3) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 2) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y == 1) col = SECROW(x,0.,0.,0.,0.,0.,0.,0.,0.);\n\t\tif (y <= 0) col = SECROW(x,1.,1.,1.,0.,0.,1.,1.,1.);\n\t}\n\t\n\t\n\t\n\treturn int(SELECTSEC(mod(float(x),4.0),col));\n}\n\nint getBlock(int x, int y)\n{\n#ifdef TOTALLY_RANDOM_LEVEL\n\tint height = 1 + int(rand(vec2(int(float(x) \/ 3.0),2.3)) * 3.0);\n\treturn (y < height ? 1 : 0);\n#else\n\tif (y > 6) return 0;\n\t\n\tint section = int(rand(vec2(int(float(x) \/ 8.0),3.0)) * 6.0);\n\tint sectionX = int(mod(float(x), 8.0));\n\t\n\treturn getSection(section,sectionX,y - int(rand(vec2(section,2.0)) * 0.0));\n#endif\n}\n\nbool isSolid(int b)\n{\n\treturn (b != 0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tconst float gameSpeed = 60.0;\n\t\n\t\/\/ Get the current game pixel\n\t\/\/ (Each game pixel is two screen pixels)\n\t\/\/  (or four, if the screen is larger)\n\tfloat x = fragCoord.x \/ 2.0;\n\tfloat y = fragCoord.y \/ 2.0;\n\tif (iResolution.y >= 640.0) {\n\t\tx \/= 2.0;\n\t\ty \/= 2.0;\n\t}\n\tif (iResolution.y < 200.0) {\n\t\tx *= 2.0;\n\t\ty *= 2.0;\n\t}\n\t\n\t\/\/ Just move the screen up for half a block's size\n\ty -= 8.0;\n\n\t\/\/ Get the grid index of the block at this pixel,\n\t\/\/ and of the block at the screen's leftmost position\n\tint firstBlockX = int((iGlobalTime * gameSpeed) \/ 16.0);\n\tint blockX = int((x + iGlobalTime * gameSpeed) \/ 16.0);\n\tint blockY = int(y \/ 16.0);\n\t\n\t\/\/ Ask for the block ID that exists in the current position\n\tint block = getBlock(blockX,blockY);\n\t\n\t\/\/ Get the fractional position inside current block\n\tint subx = int(mod((x + iGlobalTime * gameSpeed),16.0));\n\tint suby = int(mod(y,16.0));\n\t\n\t\/\/ Animate block if it's a Question Block\n\tif (block == 2) {\n\t\tif (blockX - firstBlockX == 5) {\n\t\t\tsuby -= int(max(0.0,(sin(mod((iGlobalTime * gameSpeed \/ 16.0),1.0) * 3.141592 * 1.5) * 8.0)));\n\t\t}\n\t\t\n\t\tif ((floor((x + iGlobalTime * gameSpeed) \/ 16.0) - (iGlobalTime * gameSpeed) \/ 16.0) < 4.25) block = 3;\n\t\/\/ Animate block if it's on top of a Question Block\n\t} else if (block == 3) {\n\t\tblock = 2;\n\t\tsuby += 16;\n\t\tif (blockX - firstBlockX == 5) {\n\t\t\tsuby -= int(max(0.0,(sin(mod((iGlobalTime * gameSpeed \/ 16.0),1.0) * 3.141592 * 1.5) * 8.0)));\n\t\t}\n\t}\n\t\/\/ Get the final color for this pixel\n\t\/\/ (Mario can override this later on)\n\tfragColor = getTile(block,subx,suby);\n\t\n\t\n\t\/\/ If this is the column where Mario stops simulating...\n\t\/\/ (it's the only column he can appear in)\n\tif (x >= endX && x < endX + 16.0) {\n\t\t\n\t\t\/\/ Screen position in pixels:\n\t\t\/\/ Every block is 16 pixels wide\n\t\tfloat screenX = iGlobalTime * gameSpeed;\n\t\t\n\t\t\/\/ Mario's starting position and speed\n\t\tfloat marioX = screenX + startX;\n\t\tfloat marioY = 16.0;\n\t\tfloat marioXSpd = 4.0;\n\t\tfloat marioYSpd = 0.0;\n\t\t\n\t\t\/\/ Find out the first empty block in this column,\n\t\t\/\/ starting from the bottom, as to put Mario on top of it\n\t\tfor(int i = 1; i < 4; i++) {\n\t\t\tif (!isSolid(getBlock(int(marioX \/ 16.0), i))) {\n\t\t\t\tmarioY = float(i) * 16.0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\/\/ Number of steps to simulate;\n\t\t\/\/ We'll simulate at 15 FPS and interpolate later,\n\t\t\/\/ hence the division by 4.0\n\t\t\/\/ (Mario should actually be walking 1 pixel every 1\/60th of a second,\n\t\t\/\/  but he'll be walking 4 pixels every 1\/15th)\n\t\tconst int simSteps = int((endX - startX) \/ 4.0);\n\t\t\n\t\t\/\/ Previous position, as to interpolate later, for high frame rates\n\t\tfloat lastX = 0.0;\n\t\tfloat lastY = 0.0;\n\t\t\n\t\t\/\/ Start simulating\n\t\tbool onGround = false;\n\t\tfor(int sim = 0; sim < simSteps; sim++) {\n\t\t\t\/\/ Store the previous position\n\t\t\tlastX = marioX;\n\t\t\tlastY = marioY;\n\t\t\t\n\t\t\t\/\/ If Mario is inside a block, move him up\n\t\t\t\/\/ (This happens only at the start of the simulation,\n\t\t\t\/\/  sometimes because he is heads-up with a wall and\n\t\t\t\/\/  cannot make a jump properly)\n\t\t\tonGround = false;\n\t\t\tif (isSolid(getBlock(int(marioX \/ 16.0) + 1, int(marioY \/ 16.0)))) {\n\t\t\t\tmarioY = (floor(marioY \/ 16.0) * 16.0) + 16.0;\n\t\t\t}\n\t\t\t\n\t\t\t\/\/ Next, pretty standard platforming code\n\t\t\t\n\t\t\t\/\/ Apply gravity and move in the Y-axis\n\t\t\tmarioYSpd -= 2.5;\n\t\t\tmarioY += marioYSpd;\n\t\t\t\n\t\t\t\/\/ If he is going up,\n\t\t\t\/\/ and if there is a block above him,\n\t\t\t\/\/ align him with the grid (as to avoid getting inside the block),\n\t\t\t\/\/ and invert his YSpeed, as to fall quickly (because he bounced his head)\n\t\t\tif (marioYSpd > 0.0) {\n\t\t\t\tif (isSolid(getBlock(int(floor((marioX + 12.0) \/ 16.0)), int(floor((marioY + 15.9) \/ 16.0))))) {\n\t\t\t\t\tmarioYSpd *= -0.5;\n\t\t\t\t\tmarioY = (floor(marioY \/ 16.0) * 16.0);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\/\/ If he is going down,\n\t\t\t\/\/ and if there is a block beneath him,\n\t\t\t\/\/ align him with the grid (as to land properly on top of the block),\n\t\t\t\/\/ and mark him as onGround (to be able to perform a jump)\n\t\t\tif (marioYSpd < 0.0) {\n\t\t\t\tif (isSolid(getBlock(int(floor((marioX) \/ 16.0)), int(floor(marioY \/ 16.0)))) ||\n\t\t\t\t\tisSolid(getBlock(int(floor((marioX + 15.9) \/ 16.0)), int(floor(marioY \/ 16.0))))) {\n\t\t\t\t\tmarioYSpd = 0.0;\n\t\t\t\t\tmarioY = (floor(marioY \/ 16.0) * 16.0) + 16.0;\n\t\t\t\t\tonGround = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\/\/ Finally, move him in the X-axis\n\t\t\t\/\/ I assume here he'll never hit a block horizontally\n\t\t\tmarioX += marioXSpd;\n\t\t\t\n\t\t\t\/\/ Now, if he's onGround,\n\t\t\t\/\/ and if there are blocks in front of him,\n\t\t\t\/\/ or if there is a pit right next to him,\n\t\t\t\/\/ set his YSpeed to jump\n\t\t\tif (onGround) {\n\t\t\t\tif (!isSolid(getBlock(int((marioX) \/ 16.0) + 1,0))) {\n\t\t\t\t\tmarioYSpd = 15.5;\n\t\t\t\t} else if (isSolid(getBlock(int((marioX + 36.0) \/ 16.0), int((marioY + 24.0) \/ 16.0)))) {\n\t\t\t\t\tmarioYSpd = 15.5;\n\t\t\t\t} else if (isSolid(getBlock(int((marioX) \/ 16.0) + 2, int((marioY + 8.0) \/ 16.0)))) {\n\t\t\t\t\tmarioYSpd = 12.5;\n\t\t\t\t} else if (getBlock(int((marioX) \/ 16.0) + 1, int((marioY + 8.0) \/ 16.0) + 2) == 2) {\n\t\t\t\t\tmarioYSpd = 15.5;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t\/\/ Interpolate Y-pos for smooth high-frame-rate movement\n\t\tmarioY = mix(lastY,marioY,mod(iGlobalTime * 15.0,1.0)) - 1.0;\n\t\t\n\t\t\/\/ Finally, if he appears at this row, fetch a pixel from his sprites\n\t\tif (y >= marioY && y < marioY + 16.0) {\n\t\t\tvec4 spr = vec4(0,0,0,0);\n\t\t\tif (onGround) {\n\t\t\t\t\/\/ Which frame?\n\t\t\t\tint f = int(mod(iGlobalTime * 10.0, 3.0));\n\t\t\t\tif (f == 0) spr = sprMarioWalk1(int(x - (marioX - screenX)),int(y - marioY));\n\t\t\t\tif (f == 1) spr = sprMarioWalk2(int(x - (marioX - screenX)),int(y - marioY));\n\t\t\t\tif (f == 2) spr = sprMarioWalk3(int(x - (marioX - screenX)),int(y - marioY));\n\t\t\t} else {\n\t\t\t\tspr = sprMarioJump(int(x - (marioX - screenX)),int(y - marioY));\n\t\t\t}\n\t\t\t\/\/ Transparency check\n\t\t\tif (spr.x != 0.0) fragColor = spr;\n\t\t}\n\t}\n}","name":"","description":"","type":"image"}]}}