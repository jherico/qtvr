{"Shader":{"ver":"0.1","info":{"id":"lsS3Wc","date":"1394251826","viewed":1161,"name":"HSV and HSL","username":"iq","description":"Converting from HSL and HSV color spaces to RGB. Could probably be faster, but not smaller (seems most people out there use lots of branches to do the same thing - too bad)","likes":15,"published":3,"flags":0,"tags":["2d","color","hsv","hsl","colorspace"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ Somehow optimized HSV and HSL to RGB conversion functions. \n\n\/\/========================================================================\n\nconst float eps = 0.0000001;\n\n\nvec3 hsv2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nvec3 rgb2hsv( in vec3 c)\n{\n    vec4 k = vec4(0.0, -1.0\/3.0, 2.0\/3.0, -1.0);\n    vec4 p = mix(vec4(c.zy, k.wz), vec4(c.yz, k.xy), (c.z<c.y) ? 1.0 : 0.0);\n    vec4 q = mix(vec4(p.xyw, c.x), vec4(c.x, p.yzx), (p.x<c.x) ? 1.0 : 0.0);\n    float d = q.x - min(q.w, q.y);\n    return vec3(abs(q.z + (q.w - q.y) \/ (6.0*d+eps)), d \/ (q.x+eps), q.x);\n}\n\nvec3 rgb2hsl( vec3 col )\n{\n    float minc = min( col.r, min(col.g, col.b) );\n    float maxc = max( col.r, max(col.g, col.b) );\n    vec3  mask = step(col.grr,col.rgb) * step(col.bbg,col.rgb);\n    vec3 h = mask * (vec3(0.0,2.0,4.0) + (col.gbr-col.brg)\/(maxc-minc + eps)) \/ 6.0;\n    return vec3( fract( 1.0 + h.x + h.y + h.z ),              \/\/ H\n                 (maxc-minc)\/(1.0-abs(minc+maxc-1.0) + eps),  \/\/ S\n                 (minc+maxc)*0.5 );                           \/\/ L\n}\n\n\/\/========================================================================\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\t\n\tvec3 hsv = vec3( uv.x, 0.5+0.5*sin(iGlobalTime), uv.y );\n\t\n\tvec3 rgb = hsv2rgb(hsv);\n\t\/\/vec3 rgb = hsl2rgb(hsl);\n\t\n\tfragColor = vec4( rgb, 1.0 );\n}","name":"","description":"","type":"image"}]}}