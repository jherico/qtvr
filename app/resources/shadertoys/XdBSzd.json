{"Shader":{"ver":"0.1","info":{"id":"XdBSzd","date":"1414746800","viewed":3256,"name":"Tissue","username":"iq","description":"Another experiment in stacking texture in a 2D plane deformation.","likes":47,"published":3,"flags":0,"tags":["procedural","2d","tunnel"],"hasliked":0},"renderpass":[{"inputs":[{"id":8,"src":"\/presets\/tex07.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":17,"src":"\/presets\/tex12.png","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define HSAMPLES 128    \/\/ try 256\n#define MSAMPLES   4    \/\/ try  12\n\n#define DISABLE_MIPMAP  \/\/ slower, but if fixes errors in some systems\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2  p = (-iResolution.xy+2.0*fragCoord.xy)\/iResolution.y;\n    float t =  iGlobalTime + 10.0*iMouse.x\/iResolution.x;\n\t#ifdef DISABLE_MIPMAP\n    float lodbias = -100.0;\n    #else\n    float lodbias = 0.0;\n    #endif\n    float ran = texture2D( iChannel1, fragCoord.xy\/iChannelResolution[1].xy ).x;\n    float dof = dot( p, p );\n\n    vec3 tot = vec3(0.0);\n    for( int j=0; j<MSAMPLES; j++ )\n    {\n        float mnc = (float(j)+ran)\/float(MSAMPLES);\n        float tim = t + 0.5*(1.0\/24.0)*(float(j)+ran)\/float(MSAMPLES);\n        vec2  off = vec2( 0.2*tim, 0.2*sin(tim*0.2) );\n \t\n\t    vec2 q = p + dof*0.03*mnc*vec2(cos(15.7*mnc),sin(15.7*mnc));\n        vec2 r = vec2( length(q), 0.5+0.5*atan(q.y,q.x)\/3.1416 );\n\n        vec3 uv;\n        for( int i=0; i<HSAMPLES; i++ )\n        {\n            uv.z = (float(i)+ran)\/float(HSAMPLES-1);\n            uv.xy = off + vec2( 0.2\/(r.x*(1.0-0.6*uv.z)), r.y );\n            if( texture2D( iChannel0, uv.xy, lodbias ).x < uv.z )\n                break;\n        }\n    \n        vec2  uv2 = uv.xy + vec2(0.02,0.0);\n        float dif = clamp( 8.0*(texture2D(iChannel0, uv.xy, lodbias).x - texture2D(iChannel0, uv2.xy, lodbias).x), 0.0, 1.0 );\n        vec3  col = vec3(1.0);\n        col *= 1.0-texture2D( iChannel0, 1.0*uv.xy, lodbias ).xyz;\n        col = mix( col*1.2, 1.5*texture2D( iChannel0, vec2(uv.x*0.4,0.1*sin(2.0*uv.y*3.1316)), lodbias ).yzx, 1.0-0.7*col );\n        col = mix( col, vec3(0.2,0.1,0.1), 0.5-0.5*smoothstep( 0.0, 0.3, 0.3-0.8*uv.z + texture2D( iChannel0, 2.0*uv.xy + uv.z, lodbias ).x ) );      \n        col *= 1.0-1.3*uv.z;\n        col *= 1.3-0.2*dif;        \n        col *= exp(-0.35\/(0.0001+r.x));\n        \n        tot += col;\n    }\n    tot \/= float(MSAMPLES);\n \n    tot.x += 0.05;\n    tot = pow( tot, vec3(0.6,1.0,1.0) );\n    \n    fragColor = vec4( tot*smoothstep(0.0,2.0,iGlobalTime), 1.0 );\n}","name":"","description":"","type":"image"}]}}