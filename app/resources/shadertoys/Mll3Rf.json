{"Shader":{"ver":"0.1","info":{"id":"Mll3Rf","date":"1424040707","viewed":731,"name":"Transition : Cube","username":"aiekick","description":"shadertoy version of shader from https:\/\/glsl.io\/transition\/ee15128c2b87d0e74dee<br\/>mouse control active","likes":3,"published":3,"flags":0,"tags":["cube","transitions"],"hasliked":0},"renderpass":[{"inputs":[{"id":12,"src":"\/presets\/vid01.webm","ctype":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":36,"src":"\/presets\/vid03.webm","ctype":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"float progress = sin(iGlobalTime*0.6+10.)*.5+.5;\nfloat persp = .7;\nfloat unzoom = .3;\nfloat reflection = .4;\nfloat floating = 3.;\n\nvec2 project (vec2 p) \n{\n\treturn p * vec2(1, -1.2) + vec2(0, -floating\/100.);\n}\n\nbool inBounds (vec2 p) \n{\n      return all(lessThan(vec2(0), p)) && all(lessThan(p, vec2(1)));\n}\n\nvec4 bgColor (vec2 p, vec2 pfr, vec2 pto) \n{\n  \tvec4 c = vec4(0, 0, 0, 1);\n  \tpfr = project(pfr);\n  \tif (inBounds(pfr)) \n    {\n    \tc += mix(vec4(0), texture2D(iChannel0, pfr), reflection * mix(1., 0., pfr.y));\n  \t}\n  \tpto = project(pto);\n  \tif (inBounds(pto)) \n    {\n    \tc += mix(vec4(0), texture2D(iChannel1, pto), reflection * mix(1., 0., pto.y));\n  \t}\n  \treturn c;\n}\n\n\/\/ p : the position\n\/\/ persp : the perspective in [ 0, 1 ]\n\/\/ center : the xcenter in [0, 1] \\ 0.5 excluded\nvec2 xskew (vec2 p, float persp, float center) \n{\n  \tfloat x = mix(p.x, 1.-p.x, center);\n  \treturn (\n    \t(\n      \t\tvec2( x, (p.y - .5*(1.-persp) * x) \/ (1.+(persp-1.)*x) )\n      \t\t- vec2(.5-distance(center, .5), 0)\n    \t)\n    \t* vec2(.5 \/ distance(center, .5) * (center<0.5 ? 1. : -1.), 1.)\n    \t+ vec2(center<0.5 ? 0. : 1., .0)\n  \t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n\tif (iMouse.z>0.) progress = iMouse.x\/iResolution.x;;\n        \n  \tvec2 op = fragCoord.xy \/ iResolution.xy;\n  \tfloat uz = unzoom * 2.0*(0.5-distance(0.5, progress));\n  \tvec2 p = -uz*0.5+(1.0+uz) * op;\n  \tvec2 fromP = xskew(\n    \t(p - vec2(progress, 0.0)) \/ vec2(1.0-progress, 1.0),\n    \t1.0-mix(progress, 0.0, persp),\n    \t0.0\n  \t);\n  \tvec2 toP = xskew(\n    \tp \/ vec2(progress, 1.0),\n    \tmix(pow(progress, 2.0), 1.0, persp),\n    \t1.0\n  \t);\n  \tif (inBounds(fromP)) \n    {\n    \tfragColor = texture2D(iChannel0, fromP);\n  \t}\n  \telse if (inBounds(toP)) \n    {\n    \tfragColor = texture2D(iChannel1, toP);\n  \t}\n  \telse \n    {\n    \tfragColor = bgColor(op, fromP, toP);\n  \t}\n}","name":"","description":"","type":"image"}]}}