{"Shader":{"ver":"0.1","info":{"id":"MdfSzn","date":"1395717092","viewed":1202,"name":"Metatunnel","username":"XT95","description":"Fixed step marching.","likes":17,"published":3,"flags":0,"tags":["raymarching","metatunnel","fixedstep"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by anatole duprat - XT95\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n\/\/ http:\/\/www.pouet.net\/prod.php?which=52777\n\nfloat time = iGlobalTime*.5;\n\nconst float s=0.4; \/\/Density threshold\n \n\n\nfloat obj(vec3 p)\n{\n    float d = 1.0;\n    d *= distance(p, vec3(cos(time)+sin(time*0.2),0.3,2.0+cos(time*0.5)*0.5) );\n    d *= distance(p,vec3(-cos(time*0.7),0.3,2.0+sin(time*0.5)));\n    d *= distance(p,vec3(-sin(time*0.2)*0.5,sin(time),2.0));\n    d *=cos(p.y)*cos(p.x)-0.1-cos(p.z*7.+time*7.)*cos(p.x*3.)*cos(p.y*4.)*0.1;\n    return d;\n}\n \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = fragCoord.xy\/iResolution.xy;\n\tvec2 v = -1.0+2.0*q;\n\tv.x *= iResolution.x\/iResolution.y*.5+.5;\n\t\n\tvec3 o = vec3(v.x,v.y,0.0);\n    vec3 d = normalize(vec3(v.x+cos(time)*.3,v.y,1.0))\/64.0;\n\t\n    vec3 color = vec3(0.0);\n    float t = 0.0;\n    bool hit = false;\n\t\n    for(int i=0; i<100; i++)\n    {\n        if(!hit)\n        {\n\t\t\tif(obj(o+d*t) < s)\n\t\t\t{\n\t\t\t\tt-=5.0;\n\t\t\t\tfor(int j=0; j<5; j++)\n\t\t\t\t\tif(obj(o+d*t) > s)\n\t\t\t\t\tt+=1.0;\n\t\t\t\t\t\n\t\t\t\tvec3 e=vec3(0.01,.0,.0);\n\t\t\t\tvec3 n=vec3(0.0);\n\t\t\t\tn.x=obj(o+d*t)-obj(vec3(o+d*t+e.xyy));\n\t\t\t\tn.y=obj(o+d*t)-obj(vec3(o+d*t+e.yxy));\n\t\t\t\tn.z=obj(o+d*t)-obj(vec3(o+d*t+e.yyx));\n\t\t\t\tn = normalize(n);\n\t\t\t\t\n\t\t\t\tcolor = vec3(1.) * max(dot(vec3(0.0,0.0,-0.5),n),0.0)+max(dot(vec3(0.0,-0.5,0.5),n),0.0)*0.5;\n\t\t\t\thit=true;\n\t\t\t}\n\t\t\t\n\t\t\tt+=5.0;\n\t\t}\n    }\n    fragColor= vec4(color,1.)+vec4(0.1,0.2,0.5,1.0)*(t*0.025);\n}","name":"","description":"","type":"image"}]}}