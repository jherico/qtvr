{"Shader":{"ver":"0.1","info":{"id":"Ms23Wm","date":"1389637734","viewed":1945,"name":"SSAO (basic)","username":"iq","description":"SSAO, without using normals for better sampling nor bilateral filtering for smoothing the noise out","likes":20,"published":3,"flags":0,"tags":["2d","ssao"],"hasliked":0},"renderpass":[{"inputs":[{"id":28,"src":"\/presets\/tex15.png","ctype":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"id":30,"src":"\/presets\/tex16.png","ctype":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    \/\/ sample zbuffer (in linear eye space) at the current shading point\t\n\tfloat zr = 1.0-texture2D( iChannel0, fragCoord.xy \/ iResolution.xy ).x;\n\n    \/\/ sample neighbor pixels\n\tfloat ao = 0.0;\n\tfor( int i=0; i<8; i++ )\n\t{\n        \/\/ get a random 2D offset vector\n        vec2 off = -1.0 + 2.0*texture2D( iChannel1, (fragCoord.xy + 23.71*float(i))\/iChannelResolution[1].xy ).xz;\t\n        \/\/ sample the zbuffer at a neightbor pixel (in a 16 pixel radious)        \t\t\n        float z = 1.0-texture2D( iChannel0, (fragCoord.xy + floor(off*16.0))\/iResolution.xy ).x;\n        \/\/ accumulate occlusion if difference is less than 0.1 units\t\t\n\t\tao += clamp( (zr-z)\/0.1, 0.0, 1.0);\n\t}\n    \/\/ average down the occlusion\t\n    ao = clamp( 1.0 - ao\/8.0, 0.0, 1.0 );\n\t\n\tvec3 col = vec3(ao);\n\t\n    \/\/ uncomment this one out for seeing AO with actual image\/zbuffer\t\n\t\/\/col *= texture2D( iChannel0, fragCoord.xy \/ iResolution.xy ).xyz;\n\t\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}