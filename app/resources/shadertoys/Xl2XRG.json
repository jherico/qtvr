{"Shader":{"ver":"0.1","info":{"id":"Xl2XRG","date":"1444641757","viewed":254,"name":"Sierpinski Carpet 2","username":"tsone","description":"Sierpinski carpet configurations. This time morphing.","likes":2,"published":3,"flags":0,"tags":["sierpinski","carpet"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (fragCoord.xy - 0.5*iResolution.xy) * (3.0\/iResolution.y);\n    \n    float t = 0.25 * iGlobalTime + 3.5;\n    float ti = floor(t);\n    float dt = t - ti;\n    \n    vec2 ct[2];\n    ct[0] = floor(mod(vec2(ti, ti\/3.0), 3.0) - 1.0);\n    ti += 1.0;\n    ct[1] = floor(mod(vec2(ti, ti\/3.0), 3.0) - 1.0);\n    \n    float a = smoothstep(0.0, 1.0, min(2.0 * dt, 1.0));\n    float b = 1.0 - a;\n    \n\tfloat c = float(abs(p.x) <= 1.5);\n    for (int i = 0; i < 4; ++i) {\n        vec2 pt = floor(p + 0.5);\n        \n        vec2 x1 = abs(p - ct[0]);\n        vec2 x2 = abs(p - ct[1]);        \n        x1[0] = max(x1.x, x1.y);\n        x2[0] = max(x2.x, x2.y);\n        \n        float m = float(\n            (x1[0] >= 0.5 || x1[0] <= a*0.5)\n        \t&& (x2[0] >= 0.5 || x2[0] <= b*0.5)\n       \t);\n        c *= m;\n        \n        p = 3.0 * (p-pt);\n        \n        if (x1[0] < 0.5) {\n            p \/= a;\n        }\n        if (x2[0] < 0.5) {\n        \tp \/= b;\n        }\n    }\n\n\tfragColor = vec4(vec3(0.1 + 0.9*c), 1.0);\n}","name":"","description":"","type":"image"}]}}