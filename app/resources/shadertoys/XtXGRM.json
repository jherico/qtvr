{"Shader":{"ver":"0.1","info":{"id":"XtXGRM","date":"1419606906","viewed":1436,"name":"Value to Bit Array","username":"4rknova","description":"A simple utility to visualize the bit array for a literal. All 32 bits are shown, however only the first 24 are usable in practice, the remaining 8 have a darker shade. You can use the mouse to generate a random pattern by holding down the left button.","likes":9,"published":3,"flags":0,"tags":["sprites","encoding","bits"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ by Nikos Papadopoulos, 4rknova \/ 2014\n\/\/ Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ Change the following value to test your pattern.\n#define VAL 3445.\n\n#define BG vec3(.0, .2, .4567)\n#define C0 vec3(.3, .1, .1)\n#define C1 vec3(.1, .9, .1)\n#define CL vec3(0)\n#define CM vec3(1)\n\nfloat val = VAL;\nfloat z   = 20.;\n\nfloat df_line(in vec2 p, in vec2 a, in vec2 b)\n{\n    vec2 pa = p - a, ba = b - a;\n\tfloat h = clamp(dot(pa,ba) \/ dot(ba,ba), 0., 1.);\t\n\treturn length(pa - ba * h);\n}\n\nfloat df_circ(in vec2 p, in vec2 c, in float r)\n{\n    return abs(r - length(p - c));\n}\n\nfloat sharpen(in float d, in float w)\n{\n    float e = 1. \/ min(iResolution.y , iResolution.x);\n    return 1. - smoothstep(-e, e, d - w);\n}\n\nvoid rect(in vec4 _p, in vec3 _c, in vec2 fragCoord, inout vec4 fragColor)\n{\n\tvec2 p = fragCoord.xy;\n    if((_p.x<p.x&&p.x<_p.x+_p.z&&_p.y<p.y&&p.y<_p.y+_p.w))fragColor=vec4(_c,0.);\n}\n\n\/\/ Print Utility by FMS_Cat\n\/\/ https:\/\/www.shadertoy.com\/view\/4ts3R8\nvoid print(in float _i, in vec2 _f,vec2 _p, in vec3 _c, in vec2 fragCoord, inout vec4 fragColor)\n{\n    bool n=(_i<0.)?true:false;\n    _i=abs(_i);\n    if(fragCoord.x<_p.x-5.-(max(ceil(log(_i)\/log(10.)),_f.x)+(n?1.:0.))*30.||_p.x+6.+_f.y*30.<fragCoord.x||fragCoord.y<_p.y||_p.y+31.<fragCoord.y)return;\n    \n    if(0.<_f.y){rect(vec4(_p.x-5.,_p.y,11.,11.), vec3(1.), fragCoord, fragColor);rect(vec4(_p.x-4.,_p.y+1.,9.,9.), _c, fragCoord, fragColor);}\n    \n    float c=-_f.y,m=0.;\n    for(int i=0;i<16;i++)\n    {\n        float x,y=_p.y;\n        if(0.<=c){x=_p.x-35.-30.*c;}\n        else{x=_p.x-25.-30.*c;}\n        if(int(_f.x)<=int(c)&&_i\/pow(10.,c)<1.&&0.<c)\n        {\n            if(n){rect(vec4(x,y+10.,31.,11.),vec3(1.), fragCoord, fragColor);rect(vec4(x+1.,y+11.,29.,9.),_c, fragCoord, fragColor);}\n            break;\n        }\n        float l=fract(_i\/pow(10.,c+1.));\n        if(l<.1){rect(vec4(x,y,31.,31.),vec3(1.), fragCoord, fragColor);rect(vec4(x+1.,y+1.,29.,29.),_c, fragCoord, fragColor);rect(vec4(x+15.,y+10.,1.,11.),vec3(1.), fragCoord, fragColor);}\n        else if(l<.2){rect(vec4(x+5.,y,21.,31.),vec3(1.), fragCoord, fragColor);rect(vec4(x,y,31.,11.),vec3(1.), fragCoord, fragColor);rect(vec4(x,y+20.,6.,11.),vec3(1.), fragCoord, fragColor);rect(vec4(x+6.,y+1.,19.,29.),_c, fragCoord, fragColor);rect(vec4(x+1.,y+1.,29.,9.),_c, fragCoord, fragColor);rect(vec4(x+1.,y+21.,5.,9.),_c, fragCoord, fragColor);}\n        else if(l<.3){rect(vec4(x,y,31.,31.),vec3(1.), fragCoord, fragColor);rect(vec4(x+1.,y+1.,29.,29.),_c, fragCoord, fragColor);rect(vec4(x+15.,y+10.,15.,1.),vec3(1.), fragCoord, fragColor);rect(vec4(x+1.,y+20.,15.,1.),vec3(1.), fragCoord, fragColor);}\n        else if(l<.4){rect(vec4(x,y,31.,31.),vec3(1.), fragCoord, fragColor);rect(vec4(x+1.,y+1.,29.,29.),_c, fragCoord, fragColor);rect(vec4(x+1.,y+10.,15.,1.),vec3(1.), fragCoord, fragColor);rect(vec4(x+1.,y+20.,15.,1.),vec3(1.), fragCoord, fragColor);}\n        else if(l<.5){rect(vec4(x,y+5.,15.,26.),vec3(1.), fragCoord, fragColor);rect(vec4(x+15.,y,16.,31.),vec3(1.), fragCoord, fragColor);rect(vec4(x+1.,y+6.,14.,24.),_c, fragCoord, fragColor);rect(vec4(x+16.,y+1.,14.,29.),_c, fragCoord, fragColor);rect(vec4(x+15.,y+6.,1.,10.),_c, fragCoord, fragColor);}\n        else if(l<.6){rect(vec4(x,y,31.,31.),vec3(1.), fragCoord, fragColor);rect(vec4(x+1.,y+1.,29.,29.),_c, fragCoord, fragColor);rect(vec4(x+1.,y+10.,15.,1.),vec3(1.), fragCoord, fragColor);rect(vec4(x+15.,y+20.,15.,1.),vec3(1.), fragCoord, fragColor);}\n        else if(l<.7){rect(vec4(x,y,31.,31.),vec3(1.), fragCoord, fragColor);rect(vec4(x+1.,y+1.,29.,29.),_c, fragCoord, fragColor);rect(vec4(x+10.,y+10.,11.,1.),vec3(1.), fragCoord, fragColor);rect(vec4(x+10.,y+20.,20.,1.),vec3(1.), fragCoord, fragColor);}\n        else if(l<.8){rect(vec4(x,y+10.,15.,21.),vec3(1.), fragCoord, fragColor);rect(vec4(x+15.,y,16.,31.),vec3(1.), fragCoord, fragColor);rect(vec4(x+1.,y+11.,14.,19.),_c, fragCoord, fragColor);rect(vec4(x+16.,y+1.,14.,29.),_c, fragCoord, fragColor);rect(vec4(x+15.,y+20.,1.,10.),_c, fragCoord, fragColor);}\n        else if(l<.9){rect(vec4(x,y,31.,31.),vec3(1.), fragCoord, fragColor);rect(vec4(x+1.,y+1.,29.,29.),_c, fragCoord, fragColor);rect(vec4(x+10.,y+10.,11.,1.),vec3(1.), fragCoord, fragColor);rect(vec4(x+10.,y+20.,11.,1.),vec3(1.), fragCoord, fragColor);}\n        else{rect(vec4(x,y,31.,31.),vec3(1.), fragCoord, fragColor);rect(vec4(x+1.,y+1.,29.,29.),_c, fragCoord, fragColor);rect(vec4(x+1.,y+10.,20.,1.),vec3(1.), fragCoord, fragColor);rect(vec4(x+10.,y+20.,11.,1.),vec3(1.), fragCoord, fragColor);}\n        c+=1.;\n    }\n}\n\nvoid draw_bg(in vec2 p, inout vec4 fragColor)\n{\n    fragColor = vec4(mod(p.x + p.y, 2.) * .05 + BG, 1);\n}\n\nvoid draw_text(in vec2 p, in vec2 fragCoord, inout vec4 fragColor)\n{\n    print(val, vec2(1), vec2(iResolution.x - 50.,10.), vec3(0), fragCoord, fragColor);\n}\n\nvoid draw_01x32(in vec2 p, in vec2 uv, inout vec4 fragColor)\n{\n    vec2 o = vec2(2., floor(z - 2.));\n\tp -= o;\n    vec2 c = uv * z - o;\n\n    { \/\/ Cell frame        \n\t    float w = 0.25;\n\t\tfloat l = sharpen(df_line(c, vec2( 0,1), vec2(32,1)), w)\n\t            + sharpen(df_line(c, vec2( 0,0), vec2(32,0)), w)\n\t        \t+ sharpen(df_line(c, vec2( 0,1), vec2( 0,0)), w)\n\t        \t+ sharpen(df_line(c, vec2(32,1), vec2(32,0)), w);\n    \n\t    if (l > 0.) fragColor = vec4(CL, 1);\n    }\n    \n    { \/\/ Cells        \n    \tif (p.x >= 0. && p.y == 0. &&  p.x <= 31.) {\n    \t\tfloat bit = 0.;\n        \tbit = mod(val \/ pow(2., 31. - p.x), 2.);\n            float mut = 31. - p.x > 23. ? .4 : 1.;\n    \t\tfragColor = vec4((floor(bit) > 0. ? C1 : C0) * mut, 1);\n\t\t}\n    }\n    \n    { \/\/ Cell lines\n    \n    \tfloat l = 0.;\n    \tfloat w = 0.06;\n\t    \n\t    for (int i = 0; i < 32; ++i) {\n\t        l += sharpen(df_line(c, vec2(i,1), vec2(i,0)), w);\n\t    }\n    \n\t    if (l > 0.) fragColor = vec4(CL, 1);\n    }\n}\n\nvoid draw_04x08(in vec2 p, in vec2 uv, inout vec4 fragColor)\n{\n    vec2 o = vec2(2., floor(z - 15.));\n    p -= o;\n    vec2 c = uv * z - o;\n\n    { \/\/ Cell frame\n\t    float w = 0.25;\n\t\tfloat l = sharpen(df_line(c, vec2( 0, 0), vec2( 4, 0)), w)\n\t            + sharpen(df_line(c, vec2( 0, 8), vec2( 0, 0)), w)\n            \t+ sharpen(df_line(c, vec2( 4, 8), vec2( 4, 0)), w)\n            \t+ sharpen(df_line(c, vec2( 0, 8), vec2( 4, 8)), w);\n    \n\t    if (l > 0.) fragColor = vec4(CL, 1);\n    }\n    \n    { \/\/ Cells\n    \tif (   p.x >= 0. && p.y >= 0.\n\t        && p.x <= 3. && p.y <= 7.) {\n\t    \tfloat bit = 0.;\n\t        float idx = p.y * 4. + 3. - p.x;\n\t        bit = mod(val \/ pow(2., idx), 2.);\n            float mut = idx > 23. ? .4 : 1.;\n\t    \tfragColor = vec4((floor(bit) > 0. ? C1 : C0) * mut, 1);\n\t\t}\n    }\n}\n\nvoid handle_mouse(in vec2 p, inout vec4 fragColor)\n{\n    if (iMouse.z > 0.) {\n        val = ceil(iMouse.x \/ iResolution.x * 4096.) *\n              ceil(iMouse.y \/ iResolution.y * 4096.);\n        \n\t\tfloat w = 0.001;\n        float a = sin(10.*iGlobalTime);\n\t\tfloat l =\n            sharpen(df_circ(p, iMouse.xy \/ iResolution.xy * vec2(iResolution.x \/ iResolution.y, 1.), \n                    .025 + a * .005), w);\n   \t\tif (l > 0.) fragColor = vec4(mix(CM, BG, a), 1);\n    }\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy\n            * vec2(iResolution.x \/ iResolution.y, 1.);\n\n    vec2  o1 = vec2(2., floor(z - 2.));\n    vec2  p = floor(uv * z);\n    \n    draw_bg(p, fragColor);\n    handle_mouse(uv, fragColor);\n    draw_01x32(p, uv, fragColor);    \n    draw_04x08(p, uv, fragColor);    \n    draw_text(uv, fragCoord, fragColor);\n}","name":"","description":"","type":"image"}]}}