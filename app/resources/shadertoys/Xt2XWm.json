{"Shader":{"ver":"0.1","info":{"id":"Xt2XWm","date":"1444225593","viewed":750,"name":"AntiAliasing Line Error","username":"foxes","description":"some fing crazy.<br\/>first i am write aaLine, and when i try experiment, i received this result when aaLine was a mistake - aaLineError<br\/>and i save it like shader on shadertoy.","likes":7,"published":3,"flags":0,"tags":["procedural","2d","lines","splash"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"vec3 preaaLine(vec2 a,vec2 b,vec2 uv)\n{\n\tvec2 v2=(b-a)*0.5; \n\tvec2 v1=uv-v2-a; \n    return vec3(dot(v1,v2),dot(v1,v1),dot(v2,v2));\n }\n\nfloat aaLine(vec2 a,vec2 b,vec2 uv)\n{\n    vec3 al=preaaLine(a,b,uv);\n    float g=al.y*al.z-al.x*al.x;\n    float t=al.z*0.00001;\n\tif (al.z-al.y<=0.0) return 0.0;\n    return max(0.0,1.0-g\/t);\n}\n\nfloat aaLineError(vec2 a,vec2 b,vec2 uv)\n{\n\tvec3 al=preaaLine(a,b,uv); \n    float g=al.y*al.z-al.x*al.x;\n    float t=al.z*0.1;\n\tif (al.z-al.y<=0.0) return 0.0;\n    return abs(1.0-g\/t)*0.5;\n}\n\nfloat aaLineError2(vec2 a,vec2 b,vec2 uv)\n{\n    vec3 al=preaaLine(a,b,uv); \n    float g1=al.y*al.z-al.x*al.x;\n    float g2=abs(al.z*al.x)-al.y*al.y;\n    float t=al.z*0.1;\n\tif (g2<=0.0) return 0.0;\n    return abs(1.0-g1\/t)*0.3*min(1.0,g2*10000.0);\n}\n\nvec4 raysOfLight(vec2 center,vec2 uv,vec4 color,float time)\n{\n    float gt=floor(time);\n    float lt=fract(time);\n    float rat=iResolution.x\/iResolution.y;\n    float xsel=uv.x\/rat;\n\tif (iMouse.z>0.0) xsel=iMouse.x\/iResolution.x; \n    float l=0.0;\n    center.x*=rat;\n    \n    vec2 ADD=vec2(425.255,125.23334);\n    for (int i=0;i<20;i++) {\n        float ii=float(i);\n        float iia0=ii+gt-1.0;\n        vec2 aiia0=(vec2(iia0)+vec2(2000.0,3000.0))*ADD;\n        vec2 P20=sin(aiia0); aiia0+=ADD;\n    \tvec2 P21=sin(aiia0); aiia0+=ADD;\n        vec2 P22=sin(aiia0); aiia0+=ADD;\n        vec2 P23=sin(aiia0);\n        \n        \/\/ Catmull-Rom spline\n\t\tvec2 fcoef0= (P23- P20)*0.5 + (P21 - P22)*1.5;\n\t\tvec2 fcoef1= P20 -2.5*P21 + 2.0*P22 - 0.5*P23;\n\t\tvec2 P2 = ((fcoef0*lt+fcoef1)*lt+(P22-P20)*0.5)*lt+P21;\n        \n        float inn=max(0.0,1.5-length(P2));\n        P2+=vec2(0.5);\n        P2.x*=rat;\n        inn=sqrt(inn);\n        if (xsel<=0.25) l=aaLine(center,P2,uv);\n        if (xsel>0.25 && xsel<=0.5) l=aaLineError(center,P2,uv);\n        if (xsel>0.5 && xsel<=0.75) l=aaLineError2(center,P2,uv);\n        if (xsel>0.75) l=aaLineError(center,P2,uv)-aaLineError2(center,P2,uv);\n      \tvec3 colorl=vec3(0.5)+0.5*sin(vec3(ii)*vec3(10.4,100.4,30.4)+vec3(0.0,2000.0,1000.0));\n       \tcolor=color+vec4(colorl*l*0.2*inn,0.0);\n    }\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.y;\n\n    fragColor = vec4(0.0);\n    float gt=floor(iGlobalTime);\n    float lt=fract(iGlobalTime);\n    \n    float t=iGlobalTime*0.5;\n    vec2 P1=sin(vec2(t,t*0.6))*0.4+vec2(0.5);\n    fragColor=raysOfLight(P1,uv,fragColor,t);\n    P1=sin(vec2(t*0.6,t*1.7))*0.4+vec2(0.5);\n    fragColor=raysOfLight(P1,uv,fragColor,t+0.5);\n\n}","name":"","description":"","type":"image"}]}}