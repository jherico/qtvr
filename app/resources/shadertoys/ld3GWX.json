{"Shader":{"ver":"0.1","info":{"id":"ld3GWX","date":"1452503881","viewed":202,"name":"load texture 3 : Lena in colors","username":"FabriceNeyret2","description":" now, the color !                      >>>  seems to not work on Firefox <<<<br\/>                               Work in progress...     messy bag of experiment !","likes":3,"published":3,"flags":96,"tags":["texture","load"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ inspired from https:\/\/www.shadertoy.com\/view\/4s33Df\n\n\/\/ I encoded the color images with 3 lines of octave (the open source Matlab clone ) :\n\/\/\n\/\/  :  y = double(imread(\"lena_col.jpg\")) \/ 255;\n\/\/  :  v = vec( reshape(y,512,512*3)' );\n\/\/  :  wavwrite( 2*v-1, 44100,8,\"lena_C4.wav\");\n\/\/\n\/\/ then upload the file to soundcloud (don't forget \"allow download\" in permissions)\n\nfloat message(vec2 p) {  \/\/ the alert function to add to your shader\n    int x = int(p.x+1.)-1, y=int(p.y)-10,  i;\n    if (x<1||x>32||y<0||y>2) return -1.; \n    i = ( y==2? i=  757737252: y==1? i= 1869043565: y==0? 623593060: 0 )\/ int(exp2(float(32-x)));\n \treturn i==2*(i\/2) ? 1. : 0.;\n}\n\n\nvoid mainImage( out vec4 O, vec2 U ) \n{ \n    if (iResolution.y<200.) \/\/ alert for the icon\n        {   float c=message(U\/8.); if(c>=0.){ O=vec4(c,0,0,0);return; } }\n\n    O = texture2D(iChannel0, U\/iResolution.xy); \n  \/\/O = vec4 ( U. x< iChannelResolution[3].x , U.x < 512.,0,0);  \/\/ test audiobuff size\n  \/\/O = vec4 ( U. x< iSampleRate\/100. , U.x < 441.,0,0);         \/\/ test audiobuff sampling\n}","name":"","description":"","type":"image"},{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":679,"src":"https:\/\/soundcloud.com\/fabricen\/lena-c4","ctype":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ inspired from https:\/\/www.shadertoy.com\/view\/4s33Df\n\n#define CASE 4  \/\/ testing various encodings\n#define L 512.  \/\/ image size\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    O = texture2D(iChannel0, U\/R);\n\n    U =floor(U);  if (U.x >= L) return; \/\/ out of the image\n\n    float l = iChannelResolution[3].x,  \/\/ sound buffer length\n          n = CASE==4 ? 3. : 1.,        \/\/ n=3 for R,G,B line triples\n       \/\/ i = mod( floor(iChannelTime[3]*44100.\/l)*l , L*L*n), \/\/ chunk 1st index  \n          i = 5.*l\/2. + mod( floor(4.*iChannelTime[3]*44100.\/l)*l\/4. , L*L*n), \/\/ chunk 1st index  ,\n          p = U.x + n*L*(iResolution.y-U.y); \/\/ index requested for cur pixel\n        \n    if ( p >= i && p < i+n*l ) {        \/\/ if cur sound chunk match requested index\n\n#if CASE == 0 || CASE == 2      \/\/ greyscale or stereo [ but no stereo delivered ]\n\t    O = texture2D(iChannel3, vec2(fract((p-i)\/l), .75)); \/\/ lena-c2 : stereo = R,G\n#else\n        float v = texture2D(iChannel3, vec2(fract((p-i)\/l), .75)).x; \n#endif\n            \n#if CASE == 1                   \/\/ lena-c : 5*3 bits\/ 16bits [ but only 8 bits delivered ]\n      \/\/O = O*255.\/256.;\n        vec4 m = pow(vec4(32),vec4(1,2,3,0));\n        O = fract(v*m\/32.);\n      \/\/O = floor(mod(O*m,32.))\/32.;\n#elif CASE == 3                 \/\/ lena-c3 : 3,3,2 bits \/ 8bits [ bugged... or too crude ]\n        vec4 m = pow(vec4(8),vec4(1,2,3,0));\n        O = fract(v*m\/8.);\n      \/\/O = floor(mod(O*m,8.))\/8.;\n#elif CASE == 4                 \/\/ lena-c4 : triples of lines R,G,B\n        i = mod(i\/l,3.);\n        if      (i==0.) O.r = v;\n        else if (i==1.) O.g = v;\n        else            O.b = v;\n#endif\n    }\n}","name":"","description":"","type":"buffer"}]}}