{"Shader":{"ver":"0.1","info":{"id":"Xd2Gzt","date":"1392324154","viewed":512,"name":"Expansion illusion","username":"Dave_Hoskins","description":"You know the drill, make full screen and stare at the red dot for a while, then look at the keyboard or some textured thing like a poster or wall.<br\/>Obviously this is Harekiet's code, and it reminded me of this illusion, so thanks for the nudge Harekiet!","likes":5,"published":3,"flags":0,"tags":["illusion","expansionillusion"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Dave Hoskins. Feb 2014.\n\/\/ Butchered Harekiet's code. Thanks Harekiet!\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = abs(2.0 * (fragCoord.xy \/ iResolution.xy) - vec2( 1 )); \n\tp.x *= iResolution.x \/ iResolution.y;;\n\n\t\/\/Get some angle\n\tfloat a = atan( p.x, p.y );\n\t\/\/Get radius\n\tfloat r = dot( p, p ) * 1.5;\n\t\n\tvec3 c = vec3(sin(6.28318530718 * mod( 4.0 * iGlobalTime + r*iResolution.y \/ 70.0, 1.0))); \n\t\n\tc = mix(c, vec3(1.0, 0.0, 0.0), smoothstep(.001, .00005, r));\n\t\n\tfragColor = vec4( c, 1.0);\t\n}","name":"","description":"","type":"image"}]}}