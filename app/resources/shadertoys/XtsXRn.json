{"Shader":{"ver":"0.1","info":{"id":"XtsXRn","date":"1434056182","viewed":756,"name":"Cheap Fractal Noise","username":"dgreensp","description":"Cheap, simple, fractal noise based on iq's https:\/\/www.shadertoy.com\/view\/4sfGzS","likes":5,"published":3,"flags":0,"tags":["fractalnoisefbm"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"float noise(vec3 x) {\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.-2.*f);\n\t\n    float n = p.x + p.y*157. + 113.*p.z;\n    \n    vec4 v1 = fract(753.5453123*sin(n + vec4(0., 1., 157., 158.)));\n    vec4 v2 = fract(753.5453123*sin(n + vec4(113., 114., 270., 271.)));\n    vec4 v3 = mix(v1, v2, f.z);\n    vec2 v4 = mix(v3.xy, v3.zw, f.y);\n    return mix(v4.x, v4.y, f.x);\n}\n\nfloat fnoise(vec3 p) {\n  \/\/ random rotation reduces artifacts\n  p = mat3(0.28862355854826727, 0.6997227302779844, 0.6535170557707412,\n           0.06997493955670424, 0.6653237235314099, -0.7432683571499161,\n           -0.9548821651308448, 0.26025457467376617, 0.14306504491456504)*p;\n  return dot(vec4(noise(p), noise(p*2.), noise(p*4.), noise(p*8.)),\n             vec4(0.5, 0.25, 0.125, 0.06));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.yy;\n    vec3 p = vec3(uv*16., 0.);\n    float result = fnoise(p);\n\tfragColor = vec4(vec3(result),1.0);\n}","name":"","description":"","type":"image"}]}}