{"Shader":{"ver":"0.1","info":{"id":"ltS3Rm","date":"1427803554","viewed":735,"name":"Vector Shapes with even-odd wind","username":"klk","description":"2D shapes with even-odd winding rule and antialiasing<br\/>Keys 1 and 2 toggle outline and blur respectively<br\/>LMB pressed -- draw red triangles and change some params<br\/>Enjoy.","likes":4,"published":3,"flags":16,"tags":["2d","antialiasing","vector","windingrule"],"hasliked":0},"renderpass":[{"inputs":[{"id":33,"src":"\/presets\/tex00.jpg","ctype":"keyboard","channel":2,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ I love HLSL for type consistency\n\/\/ float is one dimensional\n\/\/ float2 is two dimensional\n\/\/ float3 is three dimensional\n\n#define float3 vec3\n#define float2 vec2\n#define float4 vec4\n\n#define KEY_1 49\n#define KEY_2 50\n#define KEY_3 51\n\nbool keyToggled(int key)\n{\n\treturn texture2D(iChannel2,float2((float(key)+0.5)\/256.0,0.75)).x>0.0;\n}\n\nconst float pi=3.14159265359;\n\nprecision highp float;\n\nfloat3 h2rgb(float h)\n{\n    return clamp(2.0-abs(mod(h*3.0+float3(0.0,0.0,2.0),3.0)-float3(2.0,1.0,2.0))*2.0,0.0,1.0);\n}\n\nfloat Draw(float2 p0, float2 p1, float2 uv)\n{\n    float2 dp=normalize(p1-p0);\n    float2 dpp=float2(dp.y, -dp.x);\n    float l=abs(dot(dpp,uv-p0));\n    if((dot(dp,uv-p0)<0.0))\n        l=length(uv-p0);\n    if((dot(-dp,uv-p1)<0.0))\n        l=length(uv-p1);\n    return l;\n}\n\n\nfloat Fill(float2 _p0, float2 _p1, float2 uv)\n{\n    float2 p0;\n    float2 p1;\n    if(_p0.y<_p1.y)\n    {\n        p0=_p0;\n        p1=_p1;\n    }\n    else\n    {\n        p0=_p1;\n        p1=_p0;\n    }\n    if(uv.y<p0.y)\n        return 0.0;\n    if(uv.y>=p1.y)\n        return 0.0;\n    float2 dp=p1-p0;\n    float2 du=uv-p0;\n    if(dot(float2(dp.y,-dp.x),du)>0.0) \n        return 0.0;\n    return 0.5;\n}\n\nfloat s=0.0; \nfloat l=1.0;\nfloat line;\nfloat shape;\nfloat2 CP0;\nfloat2 CP;\nfloat2 uv;\nfloat size;\n\nvoid BeginShape()\n{\n    s=0.0; \n    l=1.0;\n}\n\nvoid MoveTo(float2 p)\n{\n    CP0=CP=p;\n}\n\nvoid LineTo(float2 p)\n{\n    l=min(l,Draw(CP,p,uv));\n    s+=Fill(CP,p,uv);\n    CP=p;\n}\n\nvoid CloseShape()\n{\n    LineTo(CP0);\n}\n\nvoid FinishShape()\n{\n    s=fract(s)*2.0;\n    float l0=sqrt(l*l*size*size);\n    if(keyToggled(KEY_2))\n        l0*=0.2;\n    l=clamp(1.0-2.0*l0,0.0,1.0)*0.5;\n    shape=abs(s-l);\n    line=clamp(1.0-l0,0.0,1.0);\n}\n\nfloat sx;\nfloat sy;\n\nfloat2 F(float t)\n{\n    t*=0.06;\n\treturn float2(cos(t),sin(t))*sin(t*sy)*sin(t*sx)*0.45;\n}\n\nfloat3 gmix(float3 c1, float3 c2, float v)\n{\n    float3 gamma=float3(2.2);\n    if(keyToggled(KEY_3))\n    {\n    \treturn pow(mix(pow(c1,gamma),pow(c2,gamma),v),1.0\/gamma);\n    }\n    else\n    \treturn mix(c1,c2,v);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    size=min(iResolution.x, iResolution.y);\n    float2 mp=iMouse.xy\/iResolution.xy-0.5;\n    mp.x=mp.x*iResolution.x\/iResolution.y;\n\n    float t=iGlobalTime*0.25;\n\tuv = fragCoord.xy\/iResolution.xy-0.5;\n    uv.x=uv.x*iResolution.x\/iResolution.y;\n    \n    \n\tsx=(mp.x)*5.0;\n\tsy=(mp.y)*5.0;\n    \n    sx+=sin(3.0-t*13.0\/100.0)*5.0;\n    sy+=sin(5.0+t*14.0\/100.0)*5.0;\n\n    BeginShape();\n    MoveTo(float2(0));\n    for(int i=1;i<450;i++)\n    {\n        LineTo(F(float(i)));\n    }\n    CloseShape();\n    FinishShape();\n\n    float3 col0=1.0-0.5*h2rgb(atan(uv.x,uv.y)\/pi\/2.0);\n    float3 col1=h2rgb(atan(uv.x,uv.y)\/pi\/2.0);\n    float3 col2=float3(0);\n\n    fragColor=float4(col0,1.0);\n    fragColor.rgb=gmix(fragColor.rgb,col1,shape);\n   \tif(keyToggled(KEY_1))\n    \tfragColor.rgb=gmix(fragColor.rgb,col2,line);\n\n    BeginShape();\n    if(iMouse.z>0.0)\n    {\n        MoveTo(float2(0));\n        LineTo(float2(0,0.5));\n        LineTo(float2(0.5,0));\n        CloseShape();\n\n        MoveTo(mp*float2(0.5,0.7));\n        LineTo(mp*float2(0.8,0.3));\n        LineTo(mp);\n        CloseShape();\n        FinishShape();\n\n        fragColor.rgb=gmix(fragColor.rgb,float3(1,0,0),shape*0.5);\n        if(keyToggled(KEY_1))\n            fragColor.rgb=gmix(fragColor.rgb,float3(0,0,0),line);\n    }\n       \n}","name":"","description":"","type":"image"}]}}