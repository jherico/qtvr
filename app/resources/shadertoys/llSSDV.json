{"Shader":{"ver":"0.1","info":{"id":"llSSDV","date":"1446568306","viewed":449,"name":"Fractal anim","username":"Aj_","description":"Just a fractal changing one of its parameters over time","likes":5,"published":3,"flags":0,"tags":["fractal"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"const float iter    = 64.,\n            divAng  = 24. * 6.2831853\/360.,\n            circRad = .23, \n    \t    rat     = .045\/circRad;\n\nfloat nearestMult(float v, float of) {\n\tfloat m = mod(v, of);\n\tv -= m * sign(of\/2. - m);\n\treturn v - mod(v,of);\n}\n\n\/\/Color palette function taken from iq's shader @ https:\/\/www.shadertoy.com\/view\/ll2GD3\n#define  pal(t) ( .5 + .5* cos( 6.283*( t + vec4(0,1,2,0)\/3.) ) )\n\nvoid mainImage( out vec4 o, vec2 uv ) {\n    vec2 R = iResolution.xy,\n         center = vec2(0.), p;\n    \n\tfloat time = iGlobalTime,\n          sCircRad = circRad*rat, \n          ds = (3.2+ 1.3*abs(sin(time\/10.))) * rat,\n          ang, dist,\n\t      M = max(R.x, R.y);\n    \n \tuv = ( uv -.5*R) \/ M \/ .9;\n    o = vec4(0.0);\n\tfor(float i=0.;i< iter;i+=1.) {\n        p = uv-center;\n\t\tang =  atan(p.y,p.x);\t\t\n        ang = nearestMult(ang, divAng);     \n\t\tcenter += sCircRad\/rat* vec2(cos(ang), sin(ang));\n\t\tdist = distance( center, uv);\n\n\t\tif( dist <=sCircRad )\n             o += 15.*dist * pal( fract(dist\/sCircRad + abs(sin(time\/2.))) );\n   \n  \t\tsCircRad *= ds;\n\t}\n}","name":"","description":"","type":"image"}]}}