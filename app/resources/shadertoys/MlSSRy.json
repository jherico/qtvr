{"Shader":{"ver":"0.1","info":{"id":"MlSSRy","date":"1444553625","viewed":538,"name":"crowded cubes","username":"FabriceNeyret2","description":"one more variant of https:\/\/www.shadertoy.com\/view\/ltfXRM ","likes":5,"published":3,"flags":0,"tags":["3d","raymarching","short"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ using the base ray-marcher of Trisomie21: https:\/\/www.shadertoy.com\/view\/4tfGRB#\n\n#define T iGlobalTime\n#define r(v,t) v *= mat2( C = cos((t)*T), S = sin((t)*T), -S, C )\n\nvoid mainImage( out vec4 f, vec2 w ) {\n    float C,S,r,x;\n    vec4 p = vec4(w,0,1)\/iResolution.yyxy-.5, d; p.x-=.4; \/\/ init ray \n    r(p.xz,.13); r(p.yz,.2); r(p.xy,.1);   \/\/ camera rotations\n    d = p;                                 \/\/ ray dir = ray0-vec3(0)\n    p.z += 5.*T;\n   \n    for (float i=1.; i>0.; i-=.01)  \n    {\n        vec4 u = floor(p\/8.), t = mod(p, 8.)-4., M; \/\/ objects id + local frame\n        r(t.xy,u.x); r(t.xz,u.y); r(t.yz,1.);    \/\/ objects rotations\n   \n        t = abs(t); M=max(t,t.yzxw);\n        r = 1.2-cos(.2*T); \n        x = max(t.x,M.y)-r;\n        if (sin(.1*T)>0.) x = max(x,(r-.1)-min(M.x,min(M.y,M.z)));\n        if(x<.01)  \/\/ hit !\n            { f = i*i*(1.+.2*t); break; } \/\/ color texture + black fog \n\n        p -= d*x;           \/\/ march ray\n     }\n }\n","name":"","description":"","type":"image"}]}}