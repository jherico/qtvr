{"Shader":{"ver":"0.1","info":{"id":"lsX3W4","date":"1369967062","viewed":8514,"name":"Mandelbrot - distance","username":"iq","description":"Distance estimation to the Mandelbrot set. Basically, distance(c) = |G(c)|\/|G'(c))|. More info in url=http:\/\/www.iquilezles.org\/www\/articles\/distancefractals\/distancefractals.htm]this article[\/url].","likes":38,"published":3,"flags":0,"tags":["2d","fractal","mandelbrot","distance"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n\/\/ This shader computes the distance to the Mandelbrot Set for everypixel, and colorizes\n\/\/ it accoringly.\n\/\/ \n\/\/ Z -> Z\u00b2+c, Z0 = 0. \n\/\/ therefore Z' -> 2\u00b7Z\u00b7Z' + 1\n\/\/\n\/\/ The Hubbard-Douady potential G(c) is G(c) = log Z\/2^n\n\/\/ G'(c) = Z'\/Z\/2^n\n\/\/\n\/\/ So the distance is |G(c)|\/|G'(c)| = |Z|\u00b7log|Z|\/|Z'|\n\/\/\n\/\/ More info here: http:\/\/www.iquilezles.org\/www\/articles\/distancefractals\/distancefractals.htm\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = -1.0 + 2.0 * fragCoord.xy \/ iResolution.xy;\n    p.x *= iResolution.x\/iResolution.y;\n\n    \/\/ animation\t\n\tfloat tz = 0.5 - 0.5*cos(0.225*iGlobalTime);\n    float zoo = pow( 0.5, 13.0*tz );\n\tvec2 c = vec2(-0.05,.6805) + p*zoo;\n\n    \/\/ iterate\n    vec2 z  = vec2(0.0);\n    float m2 = 0.0;\n    vec2 dz = vec2(0.0);\n    for( int i=0; i<256; i++ )\n    {\n        if( m2>1024.0 ) continue;\n\n\t\t\/\/ Z' -> 2\u00b7Z\u00b7Z' + 1\n        dz = 2.0*vec2(z.x*dz.x-z.y*dz.y, z.x*dz.y + z.y*dz.x) + vec2(1.0,0.0);\n\t\t\t\n        \/\/ Z -> Z\u00b2 + c\t\t\t\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n\t\t\t\n        m2 = dot(z,z);\n    }\n\n    \/\/ distance\t\n\t\/\/ d(c) = |Z|\u00b7log|Z|\/|Z'|\n\tfloat d = 0.5*sqrt(dot(z,z)\/dot(dz,dz))*log(dot(z,z));\n\n\t\n    \/\/ do some soft coloring based on distance\n\td = clamp( 8.0*d\/zoo, 0.0, 1.0 );\n\td = pow( d, 0.25 );\n    vec3 col = vec3( d );\n    \n    fragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}