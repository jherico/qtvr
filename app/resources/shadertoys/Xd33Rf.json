{"Shader":{"ver":"0.1","info":{"id":"Xd33Rf","date":"1452319999","viewed":375,"name":"Fast Separable Blur","username":"iq","description":"This separable blur uses the linear filtering hardware in order to average two texels in one single fetch. It's a bad implementation of http:\/\/rastergrid.com\/blog\/2010\/09\/efficient-gaussian-blur-with-linear-sampling\/ (I didn't reblance the coefficients)","likes":10,"published":3,"flags":32,"tags":["2d","blur","multipass"],"hasliked":0},"renderpass":[{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"id":258,"src":"\/presets\/previz\/buffer01.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n\n\/\/\n\/\/ Vertical blur pass + composit\n\/\/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord;\n\n    \/\/ vertical blur (since fragCoord samples at pixel centers it has a 0.5 added to it)\n    \/\/ hence, i added an extra 0.5 to the texel coordinates to sample not at texel centers\n    \/\/ but right between texels. the bilinear filtering hardware will average two texels\n    \/\/ in each sample for me).\n\n    vec3 blr  = vec3(0.0);\n    \/\/blr += 0.013658*texture2D( iChannel0, (uv+vec2(0.0,-19.5))\/iResolution.xy ).xyz;\n    \/\/blr += 0.019227*texture2D( iChannel0, (uv+vec2(0.0,-17.5))\/iResolution.xy ).xyz;\n    blr += 0.026109*texture2D( iChannel0, (uv+vec2(0.0,-15.5))\/iResolution.xy ).xyz;\n    blr += 0.034202*texture2D( iChannel0, (uv+vec2(0.0,-13.5))\/iResolution.xy ).xyz;\n    blr += 0.043219*texture2D( iChannel0, (uv+vec2(0.0,-11.5))\/iResolution.xy ).xyz;\n    blr += 0.052683*texture2D( iChannel0, (uv+vec2(0.0, -9.5))\/iResolution.xy ).xyz;\n    blr += 0.061948*texture2D( iChannel0, (uv+vec2(0.0, -7.5))\/iResolution.xy ).xyz;\n    blr += 0.070266*texture2D( iChannel0, (uv+vec2(0.0, -5.5))\/iResolution.xy ).xyz;\n    blr += 0.076883*texture2D( iChannel0, (uv+vec2(0.0, -3.5))\/iResolution.xy ).xyz;\n    blr += 0.081149*texture2D( iChannel0, (uv+vec2(0.0, -1.5))\/iResolution.xy ).xyz;\n    blr += 0.041312*texture2D( iChannel0, (uv+vec2(0.0,  0.0))\/iResolution.xy ).xyz;\n    blr += 0.081149*texture2D( iChannel0, (uv+vec2(0.0,  1.5))\/iResolution.xy ).xyz;\n    blr += 0.076883*texture2D( iChannel0, (uv+vec2(0.0,  3.5))\/iResolution.xy ).xyz;\n    blr += 0.070266*texture2D( iChannel0, (uv+vec2(0.0,  5.5))\/iResolution.xy ).xyz;\n    blr += 0.061948*texture2D( iChannel0, (uv+vec2(0.0,  7.5))\/iResolution.xy ).xyz;\n    blr += 0.052683*texture2D( iChannel0, (uv+vec2(0.0,  9.5))\/iResolution.xy ).xyz;\n    blr += 0.043219*texture2D( iChannel0, (uv+vec2(0.0, 11.5))\/iResolution.xy ).xyz;\n    blr += 0.034202*texture2D( iChannel0, (uv+vec2(0.0, 13.5))\/iResolution.xy ).xyz;\n    blr += 0.026109*texture2D( iChannel0, (uv+vec2(0.0, 15.5))\/iResolution.xy ).xyz;\n    \/\/blr += 0.019227*texture2D( iChannel0, (uv+vec2(0.0, 17.5))\/iResolution.xy ).xyz;\n    \/\/blr += 0.013658*texture2D( iChannel0, (uv+vec2(0.0, 19.5))\/iResolution.xy ).xyz;\n    \n    blr \/= 0.93423; \/\/ renormalize to compensate for the 4 taps I skipped\n\n    \n    blr = mix( blr, \n               texture2D( iChannel1, (uv+vec2(0.0,  0.0))\/iResolution.xy ).xyz,\n               smoothstep(0.3,0.5,sin(iGlobalTime)) );\n                    \n\n\n    fragColor = vec4( blr, 1.0 );\n}","name":"","description":"","type":"image"},{"inputs":[{"id":4,"src":"\/presets\/tex03.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2016\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord\/iResolution.xy;\n    \n    p.x += 0.1*sin(6.0*p.y + 0.5*iGlobalTime);\n    p.y += 0.5*sin(4.0*p.x + 0.5*iGlobalTime);\n    \n    vec3 col = texture2D( iChannel0, p ).zyx * 1.5;\n\n    fragColor = vec4( col, 1.0 );\n}\n\n","name":"","description":"","type":"buffer"},{"inputs":[{"id":257,"src":"\/presets\/previz\/buffer00.png","ctype":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n\n\/\/\n\/\/ Horizontal blur pass. \n\/\/\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (-iResolution.xy + 2.0*fragCoord.xy) \/ iResolution.y;\n\n    \/\/ horizontal blur (since fragCoord samples at pixel centers it has a 0.5 added to it)\n    \/\/ hence, i added an extra 0.5 to the texel coordinates to sample not at texel centers\n    \/\/ but right between texels. the bilinear filtering hardware will average two texels\n    \/\/ in each sample for me).\n    vec3 blr = vec3(0.0);\n    \/\/blr += 0.013658*samplePremul( iChannel0, (fragCoord+vec2(-19.5,0.0))\/iResolution.xy ).xyz;\n    \/\/blr += 0.019227*samplePremul( iChannel0, (fragCoord+vec2(-17.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.026109*texture2D( iChannel0, (fragCoord+vec2(-15.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.034202*texture2D( iChannel0, (fragCoord+vec2(-13.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.043219*texture2D( iChannel0, (fragCoord+vec2(-11.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.052683*texture2D( iChannel0, (fragCoord+vec2( -9.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.061948*texture2D( iChannel0, (fragCoord+vec2( -7.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.070266*texture2D( iChannel0, (fragCoord+vec2( -5.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.076883*texture2D( iChannel0, (fragCoord+vec2( -3.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.081149*texture2D( iChannel0, (fragCoord+vec2( -1.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.041312*texture2D( iChannel0, (fragCoord+vec2(  0.0,0.0))\/iResolution.xy ).xyz;\n    blr += 0.081149*texture2D( iChannel0, (fragCoord+vec2(  1.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.076883*texture2D( iChannel0, (fragCoord+vec2(  3.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.070266*texture2D( iChannel0, (fragCoord+vec2(  5.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.061948*texture2D( iChannel0, (fragCoord+vec2(  7.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.052683*texture2D( iChannel0, (fragCoord+vec2(  9.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.043219*texture2D( iChannel0, (fragCoord+vec2( 11.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.034202*texture2D( iChannel0, (fragCoord+vec2( 13.5,0.0))\/iResolution.xy ).xyz;\n    blr += 0.026109*texture2D( iChannel0, (fragCoord+vec2( 15.5,0.0))\/iResolution.xy ).xyz;\n    \/\/blr += 0.019227*samplePremul( iChannel0, (fragCoord+vec2( 17.5,0.0))\/iResolution.xy ).xyz;\n    \/\/blr += 0.013658*samplePremul( iChannel0, (fragCoord+vec2( 19.5,0.0))\/iResolution.xy ).xyz;\n\n    blr \/= 0.93423; \/\/ renormalize to compensate for the 4 taps I skipped\n    \n    fragColor = vec4( blr, 1.0 );\n}","name":"","description":"","type":"buffer"}]}}