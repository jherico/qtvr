{"Shader":{"ver":"0.1","info":{"id":"Mt2GDy","date":"1432212828","viewed":717,"name":"Split screen","username":"mart_p","description":"split screen into subscreen","likes":2,"published":3,"flags":0,"tags":["utility"],"hasliked":0},"renderpass":[{"inputs":[{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"int\t\tcolumn\t\t\t= 1;\nint\t\trow\t\t\t\t= 1;\nfloat \tborderSize  \t= 1.0;\nint\t\tactualScreen\t= 0;\nint\t\tscreenActif\t\t= 0;\nvec4  \tborderColor\t\t= vec4(0.0);\nvec3\tsubResolution\t= vec3(0.0);\n\nvoid        display(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2    uv = fragCoord.xy \/ subResolution.xy;\n\n   \tif (actualScreen == screenActif)\n        fragColor = vec4(1.0);\n    else\n\t    fragColor = texture2D(iChannel0, -uv);\n}\n\nvoid    splitScreen(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2    newFragCoord = fragCoord;\n    vec3    newResolution = iResolution - borderSize;\n    vec2    subFragCoord = vec2( mod(newFragCoord.x, newResolution.x \/ float(column)),\n                                 mod(newFragCoord.y, newResolution.y \/ float(row))) - borderSize;\n    subResolution = vec3(newResolution.x \/ float(column),\n                         newResolution.y \/ float(row),\n                         newResolution.z) - borderSize;\n    int actualColumn = int(newFragCoord.x \/ (subResolution.x + borderSize) + 1.0);\n    int actualRow = int((newResolution.y - newFragCoord.y) \/ (subResolution.y + borderSize));\n    actualScreen = actualRow * column + actualColumn;\n\n    int tactualColumn = int(iMouse.x \/ subResolution.x + 1.0);\n    int tactualRow = int((iResolution.y - iMouse.y) \/ subResolution.y);\n    screenActif = tactualRow * column + tactualColumn;\n\n    if (subFragCoord.x > 0.0 && subFragCoord.x < subResolution.x\n        && subFragCoord.y > 0.0 && subFragCoord.y < subResolution.y) {\n        display(fragColor, subFragCoord);\n    } else {\n        fragColor = borderColor;\n    }\n}\n\nvoid    mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \t\/\/ DEMO\n    if (iGlobalTime < 5.0)\n        column = int(iGlobalTime) + 1;\n    else if (iGlobalTime < 10.0)\n        column = int(10.0 - iGlobalTime) + 1;\n    else if (iGlobalTime < 15.0) {\n        row = int(iGlobalTime - 10.0) + 1;\n    } else if (iGlobalTime < 20.0) {\n     \trow = int(20.0 - iGlobalTime) + 1;   \n    } else if (iGlobalTime < 25.0) {\n    \tcolumn = int(iGlobalTime - 20.0) + 1;\n        row = int(iGlobalTime - 20.0) + 1;\n    } else if (iGlobalTime < 30.0) {\n    \tcolumn = int(30.0 - iGlobalTime) + 1;\n        row = int(30.0 - iGlobalTime) + 1;\n    } else {\n     \tcolumn = 3;\n        row = 3;\n    }\n    \/\/ !DEMO\n     splitScreen(fragColor, fragCoord);\n}\n","name":"","description":"","type":"image"}]}}