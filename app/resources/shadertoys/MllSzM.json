{"Shader":{"ver":"0.1","info":{"id":"MllSzM","date":"1435497214","viewed":708,"name":"Particle Experiment 5","username":"aiekick","description":"Mouse.x => Zoom<br\/>Mouse.y => Particle Duration<br\/>i would be great to use this with sound but i dont know how <img src=\"\/img\/emoticonHappy.png\"\/>","likes":2,"published":3,"flags":0,"tags":["experiment","4","particle"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        float t = iGlobalTime+5.;\n    \n        \/\/ vars\n        float z = 1.;\n    \n        const int n = 200; \/\/ particle count\n    \n        vec3 startColor = normalize(vec3(1,.1,0));\n        vec3 endColor = normalize(vec3(1,sin(7.)*.5+.5,cos(7.)*.5+.5));\n    \n        float startRadius = .38;\n        float endRadius = .42;\n    \n        float power = 1.;\n        float duration = 0.8;\n    \n        vec2 \n        \ts = iResolution.xy,\n        \tv = z*(2.*gl_FragCoord.xy-s)\/s.y;\n    \n        \/\/ Mouse axis y => zoom\n        if(iMouse.z>0.) v *= iMouse.y\/s.y * 20.;\n    \n        \/\/ Mouse axis x => duration\n        if(iMouse.z>0.) duration = iMouse.x\/s.x * 10.;\n    \n        vec3 col = vec3(0.);\n    \n        vec2 pm = v.yx*2.8;\n    \n        float dMax = duration;\n    \n        float mb = 0.;\n        float mbRadius = 0.;\n        float sum = 0.;\n        for(int i=0;i<n;i++)\n        {\n                float d = fract(t*power+48934.4238*sin(float(i)*692.7398))*duration;\n                float a = 6.28*float(i)\/float(n);\n                 \n                float x = d*cos(a);\n                float y = d*sin(a);\n                \n                float distRatio = d\/dMax;\n                \n                mbRadius = mix(startRadius, endRadius, distRatio); \n                \n                vec2 p = v - vec2(x,y);\n                    \n                \/\/p = mod(p,pm) - 0.5*pm;\n                \n                mb = mbRadius\/dot(p,p);\n                    \n                sum += mb;\n                \n                col = mix(col, mix(startColor, endColor, distRatio), mb\/sum);\n        }\n    \n        sum \/= float(n);\n    \n        sum = clamp(sum, 7.6, 1000.);\n    \n        col = normalize(col) * sum;\n    \n        col = smoothstep(vec3(2.7), vec3(2.85), col);\n        \n        fragColor.rgb = col;\n}\n","name":"","description":"","type":"image"}]}}