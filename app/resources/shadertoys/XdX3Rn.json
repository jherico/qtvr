{"Shader":{"ver":"0.1","info":{"id":"XdX3Rn","date":"1358124981","viewed":1720,"name":"Kinderpainter","username":"iq","description":"Code for the 4k intro Kinderpainter from the demoscene (http:\/\/www.pouet.net\/prod.php?which=51762). It made 1st position in the BCN party 2006 in Barcelona (Spain). It's a GLSL based raytracer","likes":9,"published":3,"flags":0,"tags":["3d","raytracing","demoscene"],"hasliked":0},"renderpass":[{"inputs":[{"id":1,"src":"\/presets\/tex00.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"vec4 fpar00[6];\nvec4 fpar01[6];\n\n\nfloat cylinder( in vec4 sph, in vec3 ro, in vec3 rd )\n{\n    vec3  d = ro - sph.xyz;\n    float a = dot( rd.xz, rd.xz );\n    float b = dot( rd.xz, d.xz );\n    float c = dot( d.xz, d.xz ) - sph.w*sph.w;\n    float t;\n\n    t = b*b - a*c;\n    if( t>0.0 )\n    {\n        t = -(b+sqrt( t ))\/a;\n    }\n\n    return t-.001;\n\n}\n\n\nfloat esfera( in vec4 sph, in vec3 ro, in vec3 rd )\n{\n    vec3  d = ro - sph.xyz;\n    float b = dot( rd, d );\n    float c = dot(  d, d ) - sph.w*sph.w;\n    float t = b*b - c;\n\n    if( t>0.0 )\n    {\n        t = -b - sqrt( t );\n    }\n\n    return t-.001;\n}\n\n\nbool esfera2( in vec4 sph, in vec3 ro, in vec3 rd, in float tmin )\n{\n    vec3  d = ro - sph.xyz;\n    float b = dot( rd, d );\n    float c = dot(  d, d ) - sph.w*sph.w;\n\n    float t = b*b - c;\n    bool r = false;\n\n    if( t>0.0 )\n    {\n        t = -b - sqrt( t );\n        r = (t>0.0) && (t<tmin);\n    }\n\n    return r;\n}\n\nbool cylinder2( in vec4 sph, in vec3 ro, in vec3 rd, in float tmin )\n{\n    vec3  d = ro - sph.xyz;\n    float a = dot( rd.xz, rd.xz );\n    float b = dot( rd.xz, d.xz );\n    float c = dot( d.xz, d.xz ) - sph.w*sph.w;\n    float t = b*b - a*c;\n    bool r = false;\n    if( t>0.0 )\n    {\n        t = -(b+sqrt(t));\n        r = (t>0.0) && (t<(tmin*a));\n    }\n    return r;\n}\n\nfloat plane( in vec4 pla, in vec3 ro, in vec3 rd )\n{\n    float de = dot(pla.xyz, rd);\n    de = sign(de)*max( abs(de), 0.001);\n    float t = -(dot(pla.xyz, ro) + pla.w)\/de;\n    return t;\n}\n\nvec3 calcnor( in vec4 obj, in vec4 col, in vec3 inter, out vec2 uv )\n{\n    vec3 nor;\n    if( col.w>2.5 )\n    {\n        nor.xz = inter.xz - obj.xz;\n        nor.y = 0.0;\n        nor = nor\/obj.w;\n        \/\/uv = vec2( atan(nor.x,nor.z)\/3.14159, inter.y );\n        uv = vec2( nor.x, inter.y );\n    }\n    else if( col.w>1.5 )\n    {\n        nor = obj.xyz;\n        uv = inter.xz*.2;\n    }\n    else\n    {\n        nor = inter - obj.xyz;\n        nor = nor\/obj.w;\n        uv = nor.xy;\n    }\n\n    return nor;\n}\n\nvec4 cmov( in vec4 a, in vec4 b, in bool cond )\n{\n    return cond?b:a;\n}\n\nfloat cmov( in float a, in float b, in bool cond )\n{\n    return cond?b:a;\n}\n\nint cmov( in int a, in int b, in bool cond )\n{\n    return cond?b:a;\n}\n\nfloat intersect( in vec3 ro, in vec3 rd, out vec4 obj, out vec4 col )\n{\n    float tmin = 100000.0;\n    float t;\n\n    obj = fpar00[5];\n    col = fpar01[5];\n\n    bool isok;\n\n    t = esfera( fpar00[0], ro, rd );\n    isok = (t>0.001) && (t<tmin);\n    obj  = cmov( obj, fpar00[0], isok );\n    col  = cmov( col, fpar01[0], isok );\n    tmin = cmov( tmin, t, isok );\n\n    t = esfera( fpar00[1], ro, rd );\n    isok = (t>0.001) && (t<tmin);\n    obj  = cmov( obj, fpar00[1], isok );\n    col  = cmov( col, fpar01[1], isok );\n    tmin = cmov( tmin, t, isok );\n\n    t = cylinder( fpar00[2], ro, rd );\n    isok = ( t>0.001 && t<tmin );\n    obj  = cmov( obj, fpar00[2], isok );\n    col  = cmov( col, fpar01[2], isok );\n    tmin = cmov( tmin, t, isok );\n\n    t = cylinder( fpar00[3], ro, rd );\n    isok = ( t>0.0 && t<tmin );\n    obj  = cmov( obj, fpar00[3], isok );\n    col  = cmov( col, fpar01[3], isok );\n    tmin = cmov( tmin, t, isok );\n\n    t = plane( fpar00[4], ro, rd );\n    isok = ( t>0.001 && t<tmin );\n    obj  = cmov( obj, fpar00[4], isok );\n    col  = cmov( col, fpar01[4], isok );\n    tmin = cmov( tmin, t, isok );\n\n    t = plane( fpar00[5], ro, rd );\n    isok = ( t>0.001 && t<tmin );\n    obj  = cmov( obj, fpar00[5], isok );\n    col  = cmov( col, fpar01[5], isok );\n    tmin = cmov( tmin, t, isok );\n\n    return tmin;\n}\n\nbool intersectShadow( in vec3 ro, in vec3 rd, in float l )\n{\n    float t;\n\n    bvec4 sss;\n\n    sss.x = esfera2(   fpar00[0], ro, rd, l );\n    sss.y = esfera2(   fpar00[1], ro, rd, l );\n    sss.z = cylinder2( fpar00[2], ro, rd, l );\n    sss.w = cylinder2( fpar00[3], ro, rd, l );\n\n    return any(sss);\n}\n\nvec4 basicShade( in vec3 inter, in vec4 obj, \n                 in vec4 col, in vec3 rd, \n                 in vec4 luz, \n                 out vec4 ref )\n{\n    vec2 uv;\n\n    vec3 nor = calcnor( obj, col, inter, uv );\n\n    ref.xyz = reflect( rd, nor );\n    float spe = dot( ref.xyz, luz.xyz );\n    spe = max( spe, 0.0 );\n    spe = spe*spe;\n    spe = spe*spe;\n\n    float dif = clamp( dot( nor, luz.xyz ), 0.0, 1.0 );\n\tbool sh = intersectShadow( inter, luz.xyz, luz.w );\n    if( sh )\n    {\n        dif = 0.0;\n\t\tspe = 0.0;\n    }\n\n    col *= texture2D( iChannel0, uv );\n\n    \/\/ amb + dif + spec\n\n    float dif2 = clamp( dot( nor, luz.xyz*normalize(vec3(-1.0,0.1,-1.0)) ), 0.0, 1.0 );\n\n\tcol = col*( 0.2*vec4(0.4,0.50,0.6,1.0)*(0.8+0.2*nor.y) + \n                0.6*vec4(1.0,1.00,1.0,1.0)*dif2 +  \n                1.3*vec4(1.0,0.95,0.8,1.0)*dif ) + .5*spe;\n\n    \/\/ fresnel\n    dif = clamp( dot( nor, -rd ), 0.0, 1.0 );\n    ref.w = dif;\n    dif = 1.0 - dif*dif;\n\tdif = pow( dif, 4.0 );\n    col += 1.0*vec4( dif )*col*(sh?0.5:1.0);\n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4  luz;\n    vec4  obj;\n\tvec4  col;\n    vec3  nor;\n    vec4  ref;\n\t\n\tvec2 q = fragCoord.xy \/ iResolution.xy;\n    vec2 p = -1.0 + 2.0*q;\n    p *= vec2(iResolution.x\/iResolution.y,1.0);\n\n    fpar00[0] = vec4( 1.2*sin( 6.2831*.33*iGlobalTime + 0.0 ), 0.0,  \n                      1.8*sin( 6.2831*.39*iGlobalTime + 1.0 ), 1 );\n    fpar00[1] = vec4( 1.5*sin( 6.2831*.31*iGlobalTime + 4.0 ), \n                      1.0*sin( 6.2831*.29*iGlobalTime + 1.9),  \n                      1.8*sin( 6.2831*.29*iGlobalTime + 0.0 ), 1 );\n    fpar00[2] = vec4( -1.2,  0.0, -0.0, 0.4 );\n    fpar00[3] = vec4(  1.2,  0.0, -0.0, 0.4 );\n    fpar00[4] = vec4(  0.0,  1.0,  0.0, 2.0 );\n    fpar00[5] = vec4(  0.0, -1.0,  0.0, 2.0 );\n\n\n    fpar01[0] = vec4( 0.9, 0.8, 0.6, 1.0 );\n    fpar01[1] = vec4( 1.0, 0.6, 0.4, 1.0 );\n    fpar01[2] = vec4( 0.8, 0.6, 0.5, 3.0 );\n    fpar01[3] = vec4( 0.5, 0.5, 0.7, 3.0 );\n    fpar01[4] = vec4( 1.0, 0.9, 0.9, 2.0 );\n    fpar01[5] = vec4( 1.0, 0.9, 0.9, 2.0 );\n\n    float an = .15*iGlobalTime - 6.2831*iMouse.x\/iResolution.x;\n    float di = iMouse.y\/iResolution.y;\n    vec2 sc = vec2(cos(an),sin(an));\n    vec3 rd = normalize(vec3(p.x*sc.x-sc.y,p.y,sc.x+p.x*sc.y));\n    vec3 ro = (3.5-di*2.5)*vec3(sc.y,0.0,-sc.x);\n\n    float tmin = intersect( ro, rd, obj, col );\n\n    vec3 inter = ro + rd*tmin;\n\n    luz.xyz = vec3(0.0,1.5,-3.0)-inter;\n    luz.w = length( luz.xyz );\n    luz.xyz = luz.xyz\/luz.w;\n\n    col = basicShade( inter, obj, col, rd, luz, ref );\n\/*\n    vec4 col2;\n    vec4 ref2;\n    tmin = intersect( inter, ref.xyz, obj, col2 );\n    inter = inter + ref.xyz*tmin;\n    luz.xyz = vec3(0.0,1.5,-1.0)-inter;\n    luz.w = length( luz.xyz );\n    luz.xyz = luz.xyz\/luz.w;\n    col2 = basicShade( inter, obj, col2, ref.xyz, luz, ref2 );\n\n    col = mix( col, col2, .5-.5*ref.w );\n*\/\n    col = sqrt( col );\n\t\n\tcol *= 0.6 + 0.4*pow( 16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y), 0.25 );\n \n    fragColor = vec4( col.xyz, 1.0 );\n}","name":"","description":"","type":"image"}]}}