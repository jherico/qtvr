{"Shader":{"ver":"0.1","info":{"id":"lts3Ds","date":"1426382542","viewed":693,"name":"Area of Square Segment","username":"paniq","description":"computes the area of a square snippet as cut by a line; Useful to compute how much area a new voronoi cell would steal from a square cell as part of a voronoi \/ natural neighbor weight computation.","likes":1,"published":3,"flags":0,"tags":["mattdamon"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"vec3 hue2rgb(float hue) {\n    return clamp( \n        abs(mod(hue * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, \n        0.0, 1.0);\n}\n\nfloat compute_area(vec2 uv) {\n    float a = 0.0;\n    vec2 n = abs(normalize(uv));\n    float d = length(uv);\n    vec4 p = (vec4(n.xy,-n.xy)-d) \/ n.yxyx;\n    vec4 h = max(vec4(0.0),sign(1.0-abs(p)));\n    p = (p+1.0)*0.5;\n    return 0.5*(h.y*(p.y*p.x*h.x + (p.y+p.w)*h.w) + (p.x+p.z)*h.x*h.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x \/ iResolution.y;\n    uv *= 2.2;\n    vec2 m = iMouse.xy \/ iResolution.xy;\n    m -= 0.5;\n\tm.x *= iResolution.x \/ iResolution.y;\n    m *= 2.2;\n    \n    float q = max(0.0,-sign(max(abs(uv.x),abs(uv.y))-1.0));\n    float b = max(0.0,-sign(abs(dot(vec3(normalize(m),-length(m)), vec3(uv,1.0)))-0.01));\n    float a = compute_area(uv);\n    \n\tfragColor = vec4(hue2rgb(a*8.0)*(0.5+q*0.5)+b,1.0);\n    \/\/ uncomment to see derivatives\n\t\/\/ fragColor = vec4(hue2rgb(fwidth(a)*iResolution.x)*(0.5+q*0.5)+b,1.0);    \n}","name":"","description":"","type":"image"}]}}