{"Shader":{"ver":"0.1","info":{"id":"4s33zN","date":"1448290022","viewed":284,"name":"Mikael hippie ball","username":"ashazule","description":"Math class","likes":1,"published":3,"flags":0,"tags":["circles","flow","maths"],"hasliked":0},"renderpass":[{"inputs":[{"id":8,"src":"\/presets\/tex07.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"#define PI 3.1415\n\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.4,78.2))) * 43758.5453);\n}\n\nfloat distanceTo(float x, float y, float centerX, float centerY) {\n\tfloat deltaX = x - centerX;\n    float deltaY = y - centerY;\n    return sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\nvoid mainImage( out vec4 color, in vec2 pixCoords )\n{\n    float zoom = (iResolution.x \/ 10.0);\n    float cameraX = 5.0;\n    float cameraY = 3.0;\n    float Pi = 3.1415;\n    float x = (pixCoords.x \/ zoom) - cameraX;\n    float y = (pixCoords.y \/ zoom) - cameraY;\n\n    \n   \n    color = vec4(1.0);\n    \n    float angle = atan(y, x)+iGlobalTime+ cos (4.0*distanceTo(x,y,0.0,0.5));\n    float radius = 0.95*(2.0+0.05*cos(angle*40.0*sin(iGlobalTime*10.0)));\n    \n    \n    \n    if (mod(angle,Pi\/2.0)<0.7) \n    {\n        return;\n    }\n  \n   else  if (distanceTo(x, y, 1.0, 0.0) < radius) \n    {\n       color = (vec4(0.2, 0.0, 1.0, 1.0) + texture2D(iChannel0, vec2(x,y))) \/ 1.0;\n \n       return;\n    }\n   \n  \n}\n","name":"","description":"","type":"image"}]}}