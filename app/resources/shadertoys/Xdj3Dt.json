{"Shader":{"ver":"0.1","info":{"id":"Xdj3Dt","date":"1395273585","viewed":1903,"name":"704.2","username":"PauloFalcao","description":"A readable and more optimized version of my 1K 704 webgl demo, which is similar to my 704 but adds reflections, and some fake soft shadows.<br\/>Original webgl 1K version - http:\/\/www.backtothepixel.com\/demos\/js\/webgl\/704webgl1k.html<br\/>","likes":13,"published":3,"flags":0,"tags":["procedural","remake"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/by @paulofalcao\n\nfloat t=iGlobalTime;\n\nfloat stime=sin(t);\nfloat ctime=cos(t);\n\nfloat inObj(vec3 p){\n  float oP=length(p);\n  p.x=sin(p.x)+stime;\n  p.z=sin(p.z)+ctime;\n  return min(length(p)-1.5-sin(oP-t*4.0),p.y+3.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 iRes=iResolution.xy;\n  vec2 vPos=-1.0+2.0*fragCoord.xy\/iRes;\n\n  float zf=cos(t*0.2)*0.4+0.6;\n  vec3 vuv=vec3(stime,1,0);\n  vec3 vrp=vec3(sin(t*0.7)*10.0,0,cos(t*0.9)*10.0)*zf; \n  vec3 prp=vec3((sin(t*0.7)*20.0+20.0)*zf,stime*4.0+4.0+3.0,(cos(t*0.6)*20.0+14.0)*zf)+vrp;\n\n  vec3 vpn=normalize(vrp-prp);\n  vec3 u=normalize(cross(vuv,vpn));\n  vec3 v=cross(vpn,u);\n  vec3 scrCoord=vpn+vPos.x*u*iRes.x\/iRes.y+vPos.y*v;\n  vec3 scp=normalize(scrCoord);\n\n  const vec3 e = vec3(0.1,0,0);\n  const float maxd=80.0;\n\n  float s=0.1;\n  vec3 c,p,n;\n\n  float f=-(prp.y-2.5)\/scp.y;\n  if (f>0.0) p=prp+scp*f;\n  else f=maxd;\n\n  vec3 outc=vec3(0,0,0);\n\n  float far=0.0;\n  for (int ref=0;ref<=1;ref++){\n    if (ref>0){\n      scp=reflect(scp,n);\n      prp=p;\n      s=0.1;f=0.1;\n    }\n\n    for(int i=0;i<32;i++){\n      f+=s;\n      p=prp+scp*f;\n      s=inObj(p);\n      if (abs(s)<.01||f>maxd||p.y>2.5||(ref>0&&i>16)) break;\n    }\n   \n    if (f<maxd&&p.y<2.5){\n      if(p.y<-2.5){\n        if (fract(p.x\/4.0)>.5)\n          if (fract(p.z\/4.0)>.5)\n            c=vec3(0,0,0);\n          else\n            c=vec3(1,1,1);\n        else\n          if (fract(p.z\/4.0)>.5)\n            c=vec3(1,1,1);\n          else\n            c=vec3(0,0,0);\n        c=c*max(inObj(vec3(p.x,p.y+1.0,p.z)),0.5);\n        n=vec3(0,1,0);\n      }\n      else{\n        float d=length(p);\n        c=vec3((sin(d*.25-t*4.0)+1.0)\/2.0,\n               (stime+1.0)\/2.0,\n               (sin(d-t*4.0)+1.0)\/2.0);\n        n=normalize(\n          vec3(s-inObj(p-e.xyy),\n               s-inObj(p-e.yxy),\n               s-inObj(p-e.yyx)));\n      }\n      float b=dot(n,normalize(prp-p));\n      if (ref==0) {\n        outc=((b+0.2)*c+pow(b,54.0))*0.7;\n        far=1.0-f*.01;\n\t  } else {\n\t\t  if (prp.y>-2.4) outc+=(b+0.2)*c*0.3;\n\t  }\n    }\n    else break;\n  }\n  fragColor=vec4(outc*far,1.0);\n}","name":"","description":"","type":"image"}]}}