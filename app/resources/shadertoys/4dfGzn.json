{"Shader":{"ver":"0.1","info":{"id":"4dfGzn","date":"1358124981","viewed":2528,"name":"Postprocessing","username":"iq","description":"Image postprocessing in GLSL. Includes zooming, contrast, vigneting, color separation, tint, tv lines and brightness flicker","likes":36,"published":3,"flags":0,"tags":["2d","postpro","vigneting"],"hasliked":0},"renderpass":[{"inputs":[{"id":5,"src":"\/presets\/tex04.jpg","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 q = fragCoord.xy \/ iResolution.xy;\n    vec2 uv = 0.5 + (q-0.5)*(0.9 + 0.1*sin(0.2*iGlobalTime));\n\n    vec3 oricol = texture2D( iChannel0, vec2(q.x,1.0-q.y) ).xyz;\n    vec3 col;\n\n    col.r = texture2D(iChannel0,vec2(uv.x+0.003,-uv.y)).x;\n    col.g = texture2D(iChannel0,vec2(uv.x+0.000,-uv.y)).y;\n    col.b = texture2D(iChannel0,vec2(uv.x-0.003,-uv.y)).z;\n\n    col = clamp(col*0.5+0.5*col*col*1.2,0.0,1.0);\n\n    col *= 0.5 + 0.5*16.0*uv.x*uv.y*(1.0-uv.x)*(1.0-uv.y);\n\n    col *= vec3(0.95,1.05,0.95);\n\n    col *= 0.9+0.1*sin(10.0*iGlobalTime+uv.y*1000.0);\n\n    col *= 0.99+0.01*sin(110.0*iGlobalTime);\n\n    float comp = smoothstep( 0.2, 0.7, sin(iGlobalTime) );\n    col = mix( col, oricol, clamp(-2.0+2.0*q.x+3.0*comp,0.0,1.0) );\n\n    fragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}