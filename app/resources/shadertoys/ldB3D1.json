{"Shader":{"ver":"0.1","info":{"id":"ldB3D1","date":"1387052674","viewed":1384,"name":"BPM","username":"iq","description":"An example showing the use of iChannelData[] in order to synchronize an aimation","likes":17,"published":3,"flags":0,"tags":["music","bpm","sounds","synchronization"],"hasliked":0},"renderpass":[{"inputs":[{"id":34,"src":"\/presets\/mzk05.mp3","ctype":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ An example showing the use of iChannelData[] in order to synchronize an aimation\n\n#define BPM 128.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = -1.0+2.0*fragCoord.xy \/ iResolution.xy;\n    uv.x *= iResolution.x\/iResolution.y;\t\t\n\t\n\tvec3 col = vec3(0.0);\n\t\t\n\tfloat h = fract( 0.25 + 0.5*iChannelTime[0]*BPM\/60.0 );\n\tfloat f = 1.0-smoothstep( 0.0, 1.0, h );\n\tf *= smoothstep( 4.5, 4.51, iChannelTime[0] );\n\tfloat r = length(uv-0.0) + 0.2*cos(25.0*h)*exp(-4.0*h);\n\tf = pow(f,0.5)*(1.0-smoothstep( 0.5, 0.55, r) );\n\tfloat rn = r\/0.55;\n\tcol = mix( col, vec3(0.4+1.5*rn,0.1+rn*rn,0.50)*rn, f );\n\t\n\n\tcol = mix( col, vec3(1.0), smoothstep(  0.0,  3.0, iChannelTime[0] )*exp( -1.00*max(0.0,iChannelTime[0]- 2.5)) );\n\tcol = mix( col, vec3(1.0), smoothstep( 16.0, 18.0, iChannelTime[0] )*exp( -0.75*max(0.0,iChannelTime[0]-19.0)) );\n\t\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}}