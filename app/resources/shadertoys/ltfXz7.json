{"Shader":{"ver":"0.1","info":{"id":"ltfXz7","date":"1435262329","viewed":686,"name":"gamma test - RGB","username":"FabriceNeyret2","description":"in the spirit of https:\/\/www.shadertoy.com\/view\/llfSRM (just for the classical 50%),<br\/>but testing the 3 channels separately.  Mouse control. for blue, mouse.z = mean(mouse.x. mouse.y).<br\/>Numbers =  100*gammaRGB.","likes":5,"published":3,"flags":0,"tags":["gamma","gammacorrection"],"hasliked":0},"renderpass":[{"inputs":[{"id":28,"src":"\/presets\/tex15.png","ctype":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"int D(vec2 p, float n) { \/\/ display digit  see https:\/\/www.shadertoy.com\/view\/MlXXzH\n    int i=int(p.y), b=int(pow(2.,floor(30.-p.x-n*3.)));\n    i = p.x<0.||p.x>3.? -1:\n    i==5? 972980223: i==4? 690407533: i==3? 704642687: i==2? 696556137:i==1? 972881535: -1;\n \treturn i<0 ? -1 : i\/b-2*(i\/b\/2);\n}\nint F(vec2 p, float n) { \/\/ display number \n    float c=1e3;\n    for (int i=0; i<3; i++) { \n        if ((p.x-=4.)<3.) return D(p,mod(floor(n\/c),10.));  \n        c*=.1;\n    }\n    return -1;\n}\n\n\n#define S(k) sin(k*iGlobalTime+vec2(1.6,0))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec4 pos;   pos.xy   = fragCoord.xy \/ iResolution.xy; \n    vec4 mouse; mouse.xy = iMouse.xy \/ iResolution.xy;  \n    if (mouse.x*mouse.y<=0.) mouse.xy = .5+.4*(S(1.)+.5*S(1.78))\/1.5;\n    pos.z = (pos.x+pos.y)\/2.; mouse.z = (mouse.x+mouse.y)\/2.;\n    \n    vec4 gamma = pow (pos.xxxx, 1.\/(3.*mouse));\n    \n    float c = texture2D(iChannel0,floor(fragCoord.xy)\/iChannelResolution[0].x).x; \n         if (pos.y>8.\/9.) fragColor.x = pos.x;\n    else if (pos.y>7.\/9.) fragColor.x = step(c,pos.x);\n    else if (pos.y>6.\/9.) fragColor.x = gamma.x;\n    else if (pos.y>5.\/9.) fragColor.y = pos.x;\n    else if (pos.y>4.\/9.) fragColor.y = step(c,pos.x);\n    else if (pos.y>3.\/9.) fragColor.y = gamma.y;\n    else if (pos.y>2.\/9.) fragColor.z = pos.x;\n    else if (pos.y>1.\/9.) fragColor.z = step(c,pos.x);\n    else if (pos.y>0.\/9.) fragColor.z = gamma.z;\n    \n    fragColor -= smoothstep(.02, .01,length((pos-mouse).xy*iResolution.xy\/iResolution.y));\n        \n#define at(x,y) (fragCoord-iResolution.xy*vec2(x,y))\/4.\n    if ( F(at(.4,1.\/6.), 1e3*(3.*mouse.x)) >0) fragColor=vec4(1);\n    if ( F(at(.4,3.\/6.), 1e3*(3.*mouse.y)) >0) fragColor=vec4(1);\n    if ( F(at(.4,5.\/6.), 1e3*(3.*mouse.z)) >0) fragColor=vec4(1);\n        \n}","name":"","description":"","type":"image"}]}}