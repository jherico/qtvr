{"Shader":{"ver":"0.1","info":{"id":"4dBXz3","date":"1414140907","viewed":995,"name":"Vector reflect\/clip","username":"iq","description":"How to clip a vector to a hemisphere, and to to reflect it (useful for making sure your vectors are in the positive side of a plane\/normal). Move the mouse to see how it behaves.","likes":10,"published":3,"flags":0,"tags":["2d","reflect","vectors","clip"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2014\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n\/\/ Very important trick to avoid discontinuities in rendering:\n\/\/\n\/\/ http:\/\/www.iquilezles.org\/blog\/?p=1419\n\n\/\/===============================================================\n\n\/\/ Reflect a vetor to be in a given half plane (this works in 3D too)\nvec2 reflVector( in vec2 v, in vec2 n )\n{\n    return v + 2.0*n*max(0.0,-dot(n,v));\n}\n\n\/\/ Clip a vetor to a given half plane (this works in 3D too)\nvec2 clipVector( in vec2 v, in vec2 n )\n{\n    float k = dot(n,v);\n    return v - n*k*(0.5-0.5*sign(k));\n}\n\n\/\/===============================================================\n\nfloat distanceToSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n\tvec2 pa = p - a;\n\tvec2 ba = b - a;\n\tfloat h = clamp( dot(pa,ba)\/dot(ba,ba), 0.0, 1.0 );\n\t\n\treturn length( pa - ba*h );\n}\n\nfloat e = 2.0\/min(iResolution.y,iResolution.x);\n\nfloat line( in vec2 p, in vec2 a, in vec2 b, float w )\n{\n    return 1.0 - smoothstep( -e, e, distanceToSegment( p, a, b ) - w );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \tvec2 p = (-iResolution.xy*0.5 + fragCoord.xy)*e;\n \tvec2 m = (-iResolution.xy*0.5 + iMouse.xy)*e;\n    if( iMouse.z<0.01 ) m = 0.8*vec2( cos(iGlobalTime), sin(iGlobalTime) );\n\n    vec2 no = normalize( vec2(0.2 + 0.5*cos(0.3*iGlobalTime), 0.5 ) );\n    vec2 pe = no.yx*vec2(-1.0,1.0);\n    vec2 re = reflVector( m, no );\n    vec2 cl = clipVector( m, no );\n    \n    vec3 col = vec3( 0.5 - 0.2*smoothstep(-e,e,dot(p,no)) );\n    \n    col = mix( col, vec3(0.5,0.5,0.5), line(p, vec2(0.0), no*0.5, 0.012) );\n    col = mix( col, vec3(0.5,0.5,0.5), line(p, no*0.5, no*0.5+( pe-no)*0.1, 0.012) );\n    col = mix( col, vec3(0.5,0.5,0.5), line(p, no*0.5, no*0.5+(-pe-no)*0.1, 0.012) );\n\n    col = mix( col, vec3(1.0,0.6,0.0), line(p, vec2(0.0), re, 0.01) );\n    col = mix( col, vec3(0.7,0.3,0.0), line(p, vec2(0.0), cl, 0.01) );\n    col = mix( col, vec3(0.1,0.1,0.1), line(p, vec2(0.0), m, 0.01) );\n    \n    \n    fragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}