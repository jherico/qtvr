{"Shader":{"ver":"0.1","info":{"id":"4s23zz","date":"1382867080","viewed":3975,"name":"Warping - procedural 1","username":"iq","description":"Warp. Tutorial here: . Video here: .","likes":71,"published":3,"flags":0,"tags":["procedural","2d","fbm"],"hasliked":0},"renderpass":[{"inputs":[{"id":17,"src":"\/presets\/tex12.png","ctype":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ See http:\/\/www.iquilezles.org\/www\/articles\/warp\/warp.htm for details\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float a = texture2D(iChannel0,(p+vec2(0.5,0.5))\/256.0,-32.0).x;\n\tfloat b = texture2D(iChannel0,(p+vec2(1.5,0.5))\/256.0,-32.0).x;\n\tfloat c = texture2D(iChannel0,(p+vec2(0.5,1.5))\/256.0,-32.0).x;\n\tfloat d = texture2D(iChannel0,(p+vec2(1.5,1.5))\/256.0,-32.0).x;\n    return mix(mix( a, b,f.x), mix( c, d,f.x),f.y);\n}\n\nconst mat2 mtx = mat2( 0.80,  0.60, -0.60,  0.80 );\n\nfloat fbm4( vec2 p )\n{\n    float f = 0.0;\n\n    f += 0.5000*(-1.0+2.0*noise( p )); p = mtx*p*2.02;\n    f += 0.2500*(-1.0+2.0*noise( p )); p = mtx*p*2.03;\n    f += 0.1250*(-1.0+2.0*noise( p )); p = mtx*p*2.01;\n    f += 0.0625*(-1.0+2.0*noise( p ));\n\n    return f\/0.9375;\n}\n\nfloat fbm6( vec2 p )\n{\n    float f = 0.0;\n\n    f += 0.500000*noise( p ); p = mtx*p*2.02;\n    f += 0.250000*noise( p ); p = mtx*p*2.03;\n    f += 0.125000*noise( p ); p = mtx*p*2.01;\n    f += 0.062500*noise( p ); p = mtx*p*2.04;\n    f += 0.031250*noise( p ); p = mtx*p*2.01;\n    f += 0.015625*noise( p );\n\n    return f\/0.96875;\n}\n\nfloat func( vec2 q, out vec2 o, out vec2 n )\n{\n    float ql = length( q );\n    q.x += 0.05*sin(0.11*iGlobalTime+ql*4.0);\n    q.y += 0.05*sin(0.13*iGlobalTime+ql*4.0);\n    q *= 0.7 + 0.2*cos(0.05*iGlobalTime);\n\n    q = (q+1.0)*0.5;\n\n    o.x = 0.5 + 0.5*fbm4( vec2(2.0*q*vec2(1.0,1.0)          )  );\n    o.y = 0.5 + 0.5*fbm4( vec2(2.0*q*vec2(1.0,1.0)+vec2(5.2))  );\n\n    float ol = length( o );\n    o.x += 0.02*sin(0.11*iGlobalTime*ol)\/ol;\n    o.y += 0.02*sin(0.13*iGlobalTime*ol)\/ol;\n\n\n    n.x = fbm6( vec2(4.0*o*vec2(1.0,1.0)+vec2(9.2))  );\n    n.y = fbm6( vec2(4.0*o*vec2(1.0,1.0)+vec2(5.7))  );\n\n    vec2 p = 4.0*q + 4.0*n;\n\n    float f = 0.5 + 0.5*fbm4( p );\n\n    f = mix( f, f*f*f*3.5, f*abs(n.x) );\n\n    float g = 0.5+0.5*sin(4.0*p.x)*sin(4.0*p.y);\n    f *= 1.0-0.5*pow( g, 8.0 );\n\n    return f;\n}\n\nfloat funcs( in vec2 q )\n{\n    vec2 t1, t2;\n    return func(q,t1,t2);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy \/ iResolution.xy;\n\tvec2 q = (-iResolution.xy + 2.0*fragCoord.xy) \/iResolution.y;\n\t\n    vec2 o, n;\n    float f = func(q, o, n);\n    vec3 col = vec3(0.0);\n\n\n    col = mix( vec3(0.2,0.1,0.4), vec3(0.3,0.05,0.05), f );\n    col = mix( col, vec3(0.9,0.9,0.9), dot(n,n) );\n    col = mix( col, vec3(0.5,0.2,0.2), 0.5*o.y*o.y );\n\n\n    col = mix( col, vec3(0.0,0.2,0.4), 0.5*smoothstep(1.2,1.3,abs(n.y)+abs(n.x)) );\n\n    col *= f*2.0;\n#if 1\n    vec2 ex = vec2( 1.0 \/ iResolution.x, 0.0 );\n    vec2 ey = vec2( 0.0, 1.0 \/ iResolution.y );\n\tvec3 nor = normalize( vec3( funcs(q+ex) - f, ex.x, funcs(q+ey) - f ) );\n#else\n    vec3 nor = normalize( vec3( dFdx(f)*iResolution.x, 1.0, dFdy(f)*iResolution.y ) );\t\n#endif\n    vec3 lig = normalize( vec3( 0.9, -0.2, -0.4 ) );\n    float dif = clamp( 0.3+0.7*dot( nor, lig ), 0.0, 1.0 );\n\n    vec3 bdrf;\n    bdrf  = vec3(0.85,0.90,0.95)*(nor.y*0.5+0.5);\n    bdrf += vec3(0.15,0.10,0.05)*dif;\n\n    bdrf  = vec3(0.85,0.90,0.95)*(nor.y*0.5+0.5);\n    bdrf += vec3(0.15,0.10,0.05)*dif;\n\n    col *= bdrf;\n\n    col = vec3(1.0)-col;\n\n    col = col*col;\n\n    col *= vec3(1.2,1.25,1.2);\n\t\n\tcol *= 0.5 + 0.5 * sqrt(16.0*p.x*p.y*(1.0-p.x)*(1.0-p.y));\n\t\n\tfragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}}