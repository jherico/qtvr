{"Shader":{"ver":"0.1","info":{"id":"ltfXzH","date":"1434473795","viewed":730,"name":"Speed Experiment 1","username":"aiekick","description":"Based on shader <a href=\"https:\/\/www.shadertoy.com\/view\/XtXXRH\"  class=\"regular\" target=\"_blank\">Metamonolith <\/a> from ryk. ","likes":9,"published":3,"flags":0,"tags":["experiment","1","speed"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by Stephane Cuillerdier - Aiekick\/2015\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ Based on shader https:\/\/www.shadertoy.com\/view\/XtXXRH Named 'Metamonolith' from ryk. \n\nfloat hash(float f){return fract(sin(f*32.34182) * 43758.5453);}\nfloat hash(vec2 p){return fract(sin(dot(p.xy ,vec2(12.9898,78.233))) * 43758.5453);}\nvoid mainImage( out vec4 f, in vec2 g )\n{\n\tfloat \n        t = iGlobalTime,\n        sgn,h,h2,h3,band,ff,df=0.;\n    \n    vec2 \n        s = iResolution.xy,\n        uv= (2.*g-s)\/s.y;\n        \n    vec3 \n        dir=-normalize(vec3(-8.,2.*sin(t\/10.),-4.*sin(t\/4.))),\n        up = vec3(0.,0.,1.),\n        k=vec3(1,2,3)\/3.,\n        col=k-k;\n    \n    up=normalize(up-dir*dot(dir,up));\n    \n    dir=normalize(dir+=cross(dir,up)*uv.x+s.y\/s.x*up*uv.y);        \n    \n    for (float a =0.;a<3.14159; a += 1.152)\n    {\n        df += 0.05;\n        \n        dir *= mat3(1.,0.,0.,0.,cos(a),-sin(a),0.,sin(a),cos(a));\n\t\t\n        vec2 p = dir.zx \/ max(.001, abs(dir.y))*vec2(3., 0.18);\n        \n        p.y += t * 12. + a ;\n        \n        sgn = sign(dir.y);\n        h = hash(floor((p+=.5+a)*sgn));\n        h2 = hash(floor(p.y\/6.));\n        h3 = hash(floor(p.y\/20.*a)+sgn);\n        band = abs(p.x) < 2. + floor(30.*h3*h3) ? 1. : 0.;\n        ff = h2 < .5 ? smoothstep(.6, 0.,length( mod(p, vec2(1.)) - .5))*6. : 2.;\n\n        h = h < h2\/1.2 + .1 ? 1. : 0.;\n\n        col += .9 * mix(k, clamp(abs(fract(h2\/5.+t\/30.+k)*6. - 3.) - k, 0., 1.), .9) * h * band * 3. * ff * pow(abs(dir.y),0.5);  \n    }\n    f.rgb = clamp(col*.25, 0., 1.)+df;\n}","name":"","description":"","type":"image"}]}}