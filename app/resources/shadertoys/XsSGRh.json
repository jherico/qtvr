{"Shader":{"ver":"0.1","info":{"id":"XsSGRh","date":"1385019029","viewed":886,"name":"Sierpinski - 5x5 Carpet","username":"iq","description":"A Sierpinski-Carpet-like structure, but in a 5x5  arragement. At every iteration, the whole unit square is divided in 5x5 sub-squares and the subsquares subsquares at (1,1), (3,1), (1,3) and (3,3) get removed.","likes":2,"published":3,"flags":0,"tags":["2d","fractal","sierpinksi"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"\/\/ Created by inigo quilez - iq\/2013\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\/\/ A Sierpinski Carpet like structure (2D Cantor). Instead of removing the central square \n\/\/ of a 3x3 subdivided square, in this shader I divide the square in 5x5 sub-squares and I \n\/\/ remove the four in the corners of the central one.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \/\/ animate\t\n    float s = 0.1*smoothstep( 0.7, 1.0, sin(3.1416*iGlobalTime) );\n\t\n    \/\/ unit square covering the whole screen\n\tvec2 z = fragCoord.xy \/ iResolution.xy;\n\n    \/\/ make it all white\n    float f = 1.0;\n\t\n    \/\/ iterate\t\n\tfor( int i=0; i<4; i++ ) \n\t{\n        \/\/remove subsquares (1,1), (3,1), (1,3) and (3,3)\n\t\tf *= 1.0 - step( abs(abs(z.x-0.5)-0.2), 0.1-s )*step( abs(abs(z.y-0.5)-0.2), 0.1-s );\n        \/\/ scale the shole thing down by a factor of 5\n\t\tz = fract( z*5.0 );\n\t}\n\t\n\tfragColor = vec4( f, f, f, 1.0 );\n}\n","name":"","description":"","type":"image"}]}}