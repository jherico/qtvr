{"Shader":{"ver":"0.1","info":{"id":"Xdt3D4","date":"1449695166","viewed":242,"name":"Aruco marker generator","username":"dine909","description":"Use this shader to dynamically create Aruco markers for 3d tracking ","likes":1,"published":3,"flags":0,"tags":["3d","marker","opencv","aruco"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"int icode=int(mod(iGlobalTime,1024.));\n\n\/\/colors\nvec3 background=vec3(1.,1.,1.);\nvec3 border=vec3(0.,0.,0.);\nvec3 zero=vec3(0.,0.,0.);\nvec3 one=vec3(1.,1.,1.);\n\n\/\/dims\nfloat sqsize=35.;\nfloat sqborder=1.;\nfloat sqbackground=1.;\n\n\/\/untouchables\nvec2 sqs=vec2(9.,9.);\nconst vec4 mns = vec4(16.,23.,9.,14.);\n\nint bitshift(int val,int by)\n{\n    return val\/int(exp2(float(by)));\n}\n\nbool tstbit(int val,int bit)\n{\n    return mod(float(bitshift(val,bit)),2.)==0.?false:true;\n}\nvoid aruco( out vec4 fragColor, in vec2 fragCoord, in int code )\n{\n\tvec2 uv = fragCoord.xy \/ iResolution.xy;\n\tvec2 sq=vec2(mod(fragCoord.x,sqsize),mod(fragCoord.y,sqsize));\n\n\/\/uncomment for scaled display on shadertoy\n    vec2 sqc=vec2(uv.x,uv.y*(iResolution.y\/iResolution.x))\/sqsize*640.;\n\/\/uncomment for print\/pixel-per-point\n  \/\/  vec2 sqc=fragCoord\/sqsize;\n \n    if(sqc.x<sqbackground || sqc.y<sqbackground || sqc.x>=(sqs.x-sqbackground) || sqc.y>=(sqs.y-sqbackground))\n    {\n            fragColor = vec4(background,1.0);        \n    }\n    else\n    {\n    \tsqc-=sqbackground;\n        sqs-=sqbackground*2.;\n        if(sqc.x<sqborder || sqc.y<sqborder || sqc.x>=(sqs.x-sqborder) || sqc.y>=(sqs.y-sqborder))\n        {\n            fragColor = vec4(border,1.0);\n        }\n        else\n        {\n            sqc-=sqborder;\n            \n            int lmn=int(mod(float(bitshift(code,int(sqc.y)*2)),4.));\n            int cmn=int( (lmn==0?(mns.x):lmn==1?(mns.y):lmn==2?(mns.z):(mns.w)));            \n            fragColor = vec4(tstbit(cmn,4-int(sqc.x))?one:zero,1.0);\n        }\n    }\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(background,1.0);  \n    if(fragCoord.x<iResolution.x*0.5)\n    {\n        aruco(fragColor,fragCoord,icode);\n    }else{\n        aruco(fragColor,fragCoord+vec2(iResolution.x*-0.5,0.),1023-icode);\n    }\n}\n","name":"","description":"","type":"image"}]}}