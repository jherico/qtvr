{"Shader":{"ver":"0.1","info":{"id":"XdlXW4","date":"1401261506","viewed":775,"name":"gravity field","username":"FabriceNeyret2","description":"gravity field generated by a schoolfish of stars<br\/>Cycles between sum(pot2D), sum(pot3D), sum(gravity2D), sum(gravity3D)<br\/>Mouse.x to force cycling.","likes":4,"published":3,"flags":0,"tags":["gravity"],"hasliked":0},"renderpass":[{"inputs":[],"outputs":[{"channel":"0"}],"code":"#define POINTS 100  \t\t \/\/ number of stars\n\n\/\/ --- GUI utils\n\nfloat t = iGlobalTime;\n\nbool keyToggle(int ascii) {\n\treturn (texture2D(iChannel2,vec2((.5+float(ascii))\/256.,0.75)).x > 0.);\n}\n\n\/\/ --- flag and values buton display ---\n\nfloat showFlag(vec2 p, vec2 uv, float v) {\n\tfloat d = length(2.*(uv-p));\n\treturn \t1.-step(.06*v,d) + smoothstep(0.005,0.,abs(d-.06));\n}\n\nfloat showFlag(vec2 p, vec2 uv, bool flag) {\n\treturn showFlag(p, uv, (flag) ? 1.: 0.);\n}\n\n\n\/\/ --- math utils\n\nfloat dist2(vec2 P0, vec2 P1) { vec2 D=P1-P0; return dot(D,D); }\n\nfloat hash (float i) { return 2.*fract(sin(i*7467.25)*1e5) - 1.; }\nvec2  hash2(float i) { return vec2(hash(i),hash(i-.1)); }\nvec4  hash4(float i) { return vec4(hash(i),hash(i-.1),hash(i-.3),hash(i+.1)); }\n\t\n\n\n\/\/ === main ===================\n\n\/\/ motion of stars\nvec2 P(float i) {\n\tvec4 c = hash4(i);\n\treturn vec2(   cos(t*c.x-c.z)+.5*cos(2.765*t*c.y+c.w),\n\t\t\t\t ( sin(t*c.y-c.w)+.5*sin(1.893*t*c.x+c.z) )\/1.5\t );\n}\n\n\/\/ ---\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv    = 2.*(fragCoord.xy \/ iResolution.y - vec2(.8,.5));\n\tfloat m = (iMouse.z<=0.) ? .1*t\/6.283 : 4.*iMouse.x\/iResolution.x;\n\tint MODE = int(mod(m,4.)); \n\tfloat fMODE = (1.-cos(6.283*m))\/2.;\n\n\t\n\tfloat v=0.; vec2 V=vec2(0.);\n\tfor (int i=1; i<POINTS; i++) { \/\/ sum stars\n\t\tvec2 p = P(float(i));\n\t\tfor (int y=-1; y<=1; y++)  \/\/ ghost echos in cycling universe\n\t\t\tfor (int x=-1; x<=1; x++) {\n\t\t\t\tvec2 d = p+vec2(float(x),float(y)) -uv; \/\/ pixel to star\n\t\t\t\tif      (MODE==0) v +=  1.\/length(d);\n\t\t\t\telse if (MODE==1) v +=  1.\/dot(d,d);\n\t\t\t    else if (MODE==2) V +=  d \/dot(d,d);\n\t\t\t\telse\t\t\t  V +=  d \/pow(length(d),3.);\n\t\t\t}\n\t\t}\n\t\n\tif (MODE>1) v = length(V);\n\tv *= 1.\/(9.*float(POINTS));\n\t\n\tv *= 10.*fMODE;\n\tfragColor = vec4(sin(v),sin(v\/2.),sin(v\/4.),1.);\n\t\n\tv =   showFlag(vec2(-1.5+.1*float(MODE),.9),uv,fMODE)\n\t\t+ showFlag(vec2(-1.5,.9),uv,false) \n\t\t+ showFlag(vec2(-1.4,.9),uv,false) \n\t\t+ showFlag(vec2(-1.3,.9),uv,false) \n\t\t+ showFlag(vec2(-1.2,.9),uv,false);\n\tfragColor = mix(fragColor,vec4(0,0,1,0),v);\n\n}","name":"","description":"","type":"image"}]}}